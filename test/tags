!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACTION_BINARY	include/eval_types.h	30;"	d
ACTION_NULL	include/eval_types.h	28;"	d
ACTION_START	include/eval_types.h	29;"	d
ACTION_STOP	include/eval_types.h	31;"	d
ASCII	include/rapidjson/encodings.h	/^struct ASCII {$/;"	s
AboveMaximum	include/rapidjson/schema.h	/^    void AboveMaximum(double actual, const SValue& expected, bool exclusive) {$/;"	f	class:GenericSchemaValidator
AboveMaximum	include/rapidjson/schema.h	/^    void AboveMaximum(int64_t actual, const SValue& expected, bool exclusive) {$/;"	f	class:GenericSchemaValidator
AboveMaximum	include/rapidjson/schema.h	/^    void AboveMaximum(uint64_t actual, const SValue& expected, bool exclusive) {$/;"	f	class:GenericSchemaValidator
Accept	include/rapidjson/document.h	/^    bool Accept(Handler& handler) const {$/;"	f	class:GenericValue
AddChunk	include/rapidjson/allocators.h	/^    bool AddChunk(size_t capacity) {$/;"	f	class:MemoryPoolAllocator
AddConst	include/rapidjson/internal/meta.h	/^template <typename T> struct AddConst { typedef const T Type; };$/;"	s	namespace:internal
AddCurrentError	include/rapidjson/schema.h	/^    void AddCurrentError(const typename SchemaType::ValueType& keyword, bool parent = false) {$/;"	f	class:GenericSchemaValidator
AddDependencySchemaError	include/rapidjson/schema.h	/^    void AddDependencySchemaError(const SValue& sourceName, ISchemaValidator* subvalidator) {$/;"	f	class:GenericSchemaValidator
AddError	include/rapidjson/schema.h	/^    void AddError(ValueType& keyword, ValueType& error) {$/;"	f	class:GenericSchemaValidator
AddErrorArray	include/rapidjson/schema.h	/^    void AddErrorArray(const typename SchemaType::ValueType& keyword,$/;"	f	class:GenericSchemaValidator
AddErrorLocation	include/rapidjson/schema.h	/^    void AddErrorLocation(ValueType& result, bool parent) {$/;"	f	class:GenericSchemaValidator
AddExpectedType	include/rapidjson/schema.h	/^    void AddExpectedType(const typename SchemaType::ValueType& expectedType) {$/;"	f	class:GenericSchemaValidator
AddMember	include/rapidjson/document.h	/^    AddMember(GenericValue& name, T value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    AddMember(StringRefType name, T value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericObject AddMember(StringRefType name, StringRefType value, AllocatorType& allocator) const { value_.AddMember(name, value, allocator); return *this; }$/;"	f	class:GenericObject
AddMember	include/rapidjson/document.h	/^    GenericObject AddMember(StringRefType name, ValueType& value, AllocatorType& allocator) const { value_.AddMember(name, value, allocator); return *this; }$/;"	f	class:GenericObject
AddMember	include/rapidjson/document.h	/^    GenericObject AddMember(StringRefType name, ValueType&& value, AllocatorType& allocator) const { value_.AddMember(name, value, allocator); return *this; }$/;"	f	class:GenericObject
AddMember	include/rapidjson/document.h	/^    GenericObject AddMember(ValueType& name, StringRefType value, AllocatorType& allocator) const { value_.AddMember(name, value, allocator); return *this; }$/;"	f	class:GenericObject
AddMember	include/rapidjson/document.h	/^    GenericObject AddMember(ValueType& name, ValueType& value, AllocatorType& allocator) const { value_.AddMember(name, value, allocator); return *this; }$/;"	f	class:GenericObject
AddMember	include/rapidjson/document.h	/^    GenericObject AddMember(ValueType& name, ValueType&& value, AllocatorType& allocator) const { value_.AddMember(name, value, allocator); return *this; }$/;"	f	class:GenericObject
AddMember	include/rapidjson/document.h	/^    GenericObject AddMember(ValueType& name, std::basic_string<Ch>& value, AllocatorType& allocator) const { value_.AddMember(name, value, allocator); return *this; }$/;"	f	class:GenericObject
AddMember	include/rapidjson/document.h	/^    GenericObject AddMember(ValueType&& name, ValueType& value, AllocatorType& allocator) const { value_.AddMember(name, value, allocator); return *this; }$/;"	f	class:GenericObject
AddMember	include/rapidjson/document.h	/^    GenericObject AddMember(ValueType&& name, ValueType&& value, AllocatorType& allocator) const { value_.AddMember(name, value, allocator); return *this; }$/;"	f	class:GenericObject
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue& name, GenericValue& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue& name, GenericValue&& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue& name, StringRefType value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue& name, std::basic_string<Ch>& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue&& name, GenericValue& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue&& name, GenericValue&& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(StringRefType name, GenericValue& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(StringRefType name, GenericValue&& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(StringRefType name, StringRefType value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    template <typename T> RAPIDJSON_DISABLEIF_RETURN((internal::OrExpr<internal::IsPointer<T>, internal::IsGenericValue<T> >), (GenericObject)) AddMember(StringRefType name, T value, AllocatorType& allocator) const { value_.AddMember(name, value, allocator); return *this; }$/;"	f	class:GenericObject
AddMember	include/rapidjson/document.h	/^    template <typename T> RAPIDJSON_DISABLEIF_RETURN((internal::OrExpr<internal::IsPointer<T>, internal::IsGenericValue<T> >), (ValueType&)) AddMember(ValueType& name, T value, AllocatorType& allocator) const { value_.AddMember(name, value, allocator); return *this; }$/;"	f	class:GenericObject
AddMissingDependentProperty	include/rapidjson/schema.h	/^    void AddMissingDependentProperty(const SValue& targetName) {$/;"	f	class:GenericSchemaValidator
AddMissingProperty	include/rapidjson/schema.h	/^    void AddMissingProperty(const SValue& name) {$/;"	f	class:GenericSchemaValidator
AddNumberError	include/rapidjson/schema.h	/^    void AddNumberError(const typename SchemaType::ValueType& keyword, ValueType& actual, const SValue& expected,$/;"	f	class:GenericSchemaValidator
AddState	include/rapidjson/internal/regex.h	/^    bool AddState(Stack<Allocator>& l, SizeType index) {$/;"	f	class:internal::GenericRegexSearch
AddType	include/rapidjson/schema.h	/^    void AddType(const ValueType& type) {$/;"	f	class:internal::Schema
AddUniqueElement	include/rapidjson/schema.h	/^    void AddUniqueElement(V1& a, const V2& v) {$/;"	f	class:internal::Schema
AllocatorType	include/rapidjson/document.h	/^    typedef Allocator AllocatorType;                        \/\/!< Allocator type from template parameter.$/;"	t	class:GenericDocument
AllocatorType	include/rapidjson/document.h	/^    typedef Allocator AllocatorType;                \/\/!< Allocator type from template parameter.$/;"	t	class:GenericValue
AllocatorType	include/rapidjson/document.h	/^    typedef typename ValueType::AllocatorType AllocatorType;$/;"	t	class:GenericArray
AllocatorType	include/rapidjson/document.h	/^    typedef typename ValueType::AllocatorType AllocatorType;$/;"	t	class:GenericObject
AllocatorType	include/rapidjson/schema.h	/^    typedef Allocator AllocatorType;$/;"	t	class:GenericSchemaDocument
AllocatorType	include/rapidjson/schema.h	/^    typedef typename SchemaDocumentType::AllocatorType AllocatorType;$/;"	t	class:internal::Schema
AndExpr	include/rapidjson/internal/meta.h	/^template <typename C1, typename C2> struct AndExpr : AndExprCond<C1::Value, C2::Value>::Type {};$/;"	s	namespace:internal
AndExprCond	include/rapidjson/internal/meta.h	/^template <> struct AndExprCond<true, true> : TrueType {};$/;"	s	namespace:internal
AndExprCond	include/rapidjson/internal/meta.h	/^template <bool Cond1, bool Cond2> struct AndExprCond : FalseType {};$/;"	s	namespace:internal
Append	include/rapidjson/internal/regex.h	/^    SizeType Append(SizeType l1, SizeType l2) {$/;"	f	class:internal::GenericRegex
Append	include/rapidjson/pointer.h	/^    Append(T* name, Allocator* allocator = 0) const {$/;"	f	class:GenericPointer
Append	include/rapidjson/pointer.h	/^    GenericPointer Append(SizeType index, Allocator* allocator = 0) const {$/;"	f	class:GenericPointer
Append	include/rapidjson/pointer.h	/^    GenericPointer Append(const Ch* name, SizeType length, Allocator* allocator = 0) const {$/;"	f	class:GenericPointer
Append	include/rapidjson/pointer.h	/^    GenericPointer Append(const Token& token, Allocator* allocator = 0) const {$/;"	f	class:GenericPointer
Append	include/rapidjson/pointer.h	/^    GenericPointer Append(const ValueType& token, Allocator* allocator = 0) const {$/;"	f	class:GenericPointer
Append	include/rapidjson/pointer.h	/^    GenericPointer Append(const std::basic_string<Ch>& name, Allocator* allocator = 0) const {$/;"	f	class:GenericPointer
AppendDecimal64	include/rapidjson/internal/biginteger.h	/^    void AppendDecimal64(const char* begin, const char* end) {$/;"	f	class:internal::BigInteger
AppendIndexToken	include/rapidjson/schema.h	/^    RAPIDJSON_FORCEINLINE static void AppendIndexToken(Stack& documentStack, SizeType index) {$/;"	f	struct:internal::TokenHelper
AppendToken	include/rapidjson/schema.h	/^    void AppendToken(const Ch* str, SizeType len) {$/;"	f	class:GenericSchemaValidator
Apply	include/rapidjson/internal/meta.h	/^template <> struct SelectIfImpl<false> { template <typename T1, typename T2> struct Apply { typedef T2 Type; }; };$/;"	s	struct:internal::SelectIfImpl
Apply	include/rapidjson/internal/meta.h	/^template <bool C> struct SelectIfImpl { template <typename T1, typename T2> struct Apply { typedef T1 Type; }; };$/;"	s	struct:internal::SelectIfImpl
Array	include/rapidjson/document.h	/^    typedef GenericArray<false, ValueT> Array;$/;"	t	class:GenericArray
Array	include/rapidjson/document.h	/^    typedef GenericArray<false, ValueType> Array;$/;"	t	class:GenericValue
ArrayData	include/rapidjson/document.h	/^    struct ArrayData {$/;"	s	class:GenericValue
ArrayType	include/rapidjson/document.h	/^    typedef typename ValueType::Array ArrayType;$/;"	t	struct:internal::TypeHelper
ArrayType	include/rapidjson/document.h	/^    typedef typename ValueType::ConstArray ArrayType;$/;"	t	struct:internal::TypeHelper
AssignIfExist	include/rapidjson/schema.h	/^    static void AssignIfExist(SizeType& out, const ValueType& value, const ValueType& name) {$/;"	f	class:internal::Schema
AssignIfExist	include/rapidjson/schema.h	/^    static void AssignIfExist(bool& out, const ValueType& value, const ValueType& name) {$/;"	f	class:internal::Schema
AssignIfExist	include/rapidjson/schema.h	/^    void AssignIfExist(SchemaArray& out, SchemaDocumentType& schemaDocument, const PointerType& p, const ValueType& value, const ValueType& name, const ValueType& document) {$/;"	f	class:internal::Schema
AutoUTF	include/rapidjson/encodings.h	/^struct AutoUTF {$/;"	s
AutoUTFInputStream	include/rapidjson/encodedstream.h	/^    AutoUTFInputStream(InputByteStream& is, UTFType type = kUTF8) : is_(&is), type_(type), hasBOM_(false) {$/;"	f	class:AutoUTFInputStream
AutoUTFInputStream	include/rapidjson/encodedstream.h	/^class AutoUTFInputStream {$/;"	c
AutoUTFOutputStream	include/rapidjson/encodedstream.h	/^    AutoUTFOutputStream(OutputByteStream& os, UTFType type, bool putBOM) : os_(&os), type_(type) {$/;"	f	class:AutoUTFOutputStream
AutoUTFOutputStream	include/rapidjson/encodedstream.h	/^class AutoUTFOutputStream {$/;"	c
BATCH_SIZE	handle_message.cpp	26;"	d	file:
Base	include/rapidjson/prettywriter.h	/^    typedef Writer<OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags> Base;$/;"	t	class:PrettyWriter
Base	include/rapidjson/reader.h	/^        typedef NumberStream<InputStream, false, false> Base;$/;"	t	class:GenericReader::NumberStream
Base	include/rapidjson/reader.h	/^        typedef NumberStream<InputStream, true, false> Base;$/;"	t	class:GenericReader::NumberStream
BaseReaderHandler	include/rapidjson/reader.h	/^struct BaseReaderHandler {$/;"	s
BasicIStreamWrapper	include/rapidjson/istreamwrapper.h	/^    BasicIStreamWrapper(StreamType& stream) : stream_(stream), count_(), peekBuffer_() {}$/;"	f	class:BasicIStreamWrapper
BasicIStreamWrapper	include/rapidjson/istreamwrapper.h	/^class BasicIStreamWrapper {$/;"	c
BasicOStreamWrapper	include/rapidjson/ostreamwrapper.h	/^    BasicOStreamWrapper(StreamType& stream) : stream_(stream) {}$/;"	f	class:BasicOStreamWrapper
BasicOStreamWrapper	include/rapidjson/ostreamwrapper.h	/^class BasicOStreamWrapper {$/;"	c
Begin	include/rapidjson/document.h	/^    ConstValueIterator Begin() const { return const_cast<GenericValue&>(*this).Begin(); }$/;"	f	class:GenericValue
Begin	include/rapidjson/document.h	/^    ValueIterator Begin() const { return value_.Begin(); }$/;"	f	class:GenericArray
Begin	include/rapidjson/document.h	/^    ValueIterator Begin() { RAPIDJSON_ASSERT(IsArray()); return GetElementsPointer(); }$/;"	f	class:GenericValue
BeginValue	include/rapidjson/schema.h	/^    bool BeginValue() {$/;"	f	class:GenericSchemaValidator
BeginValue	include/rapidjson/schema.h	/^    bool BeginValue(Context& context) const {$/;"	f	class:internal::Schema
BelowMinimum	include/rapidjson/schema.h	/^    void BelowMinimum(double actual, const SValue& expected, bool exclusive) {$/;"	f	class:GenericSchemaValidator
BelowMinimum	include/rapidjson/schema.h	/^    void BelowMinimum(int64_t actual, const SValue& expected, bool exclusive) {$/;"	f	class:GenericSchemaValidator
BelowMinimum	include/rapidjson/schema.h	/^    void BelowMinimum(uint64_t actual, const SValue& expected, bool exclusive) {$/;"	f	class:GenericSchemaValidator
BigInteger	include/rapidjson/internal/biginteger.h	/^    BigInteger(const BigInteger& rhs) : count_(rhs.count_) {$/;"	f	class:internal::BigInteger
BigInteger	include/rapidjson/internal/biginteger.h	/^    BigInteger(const char* decimals, size_t length) : count_(1) {$/;"	f	class:internal::BigInteger
BigInteger	include/rapidjson/internal/biginteger.h	/^    explicit BigInteger(uint64_t u) : count_(1) {$/;"	f	class:internal::BigInteger
BigInteger	include/rapidjson/internal/biginteger.h	/^class BigInteger {$/;"	c	namespace:internal
Bool	include/rapidjson/document.h	/^    bool Bool(bool b) { new (stack_.template Push<ValueType>()) ValueType(b); return true; }$/;"	f	class:GenericDocument
Bool	include/rapidjson/prettywriter.h	/^    bool Bool(bool b)           { PrettyPrefix(b ? kTrueType : kFalseType); return Base::EndValue(Base::WriteBool(b)); }$/;"	f	class:PrettyWriter
Bool	include/rapidjson/reader.h	/^    bool Bool(bool) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Bool	include/rapidjson/schema.h	/^    bool Bool(Context& context, bool) const {$/;"	f	class:internal::Schema
Bool	include/rapidjson/schema.h	/^    bool Bool(bool b)       { RAPIDJSON_SCHEMA_HANDLE_VALUE_(Bool,   (CurrentContext(), b), (b)); }$/;"	f	class:GenericSchemaValidator
Bool	include/rapidjson/schema.h	/^    bool Bool(bool b) { return WriteType(b ? kTrueType : kFalseType); }$/;"	f	class:internal::Hasher
Bool	include/rapidjson/writer.h	/^    bool Bool(bool b)           { Prefix(b ? kTrueType : kFalseType); return EndValue(WriteBool(b)); }$/;"	f	class:Writer
BoolExpr	include/rapidjson/internal/meta.h	/^template <typename C> struct BoolExpr : SelectIf<C,TrueType,FalseType>::Type {};$/;"	s	namespace:internal
BoolType	include/rapidjson/internal/meta.h	/^template <bool Cond> struct BoolType {$/;"	s	namespace:internal
Bottom	include/rapidjson/internal/stack.h	/^    T* Bottom() { return reinterpret_cast<T*>(stack_); }$/;"	f	class:internal::Stack
Bottom	include/rapidjson/internal/stack.h	/^    const T* Bottom() const { return reinterpret_cast<T*>(stack_); }$/;"	f	class:internal::Stack
C16	include/rapidjson/reader.h	348;"	d
C16	include/rapidjson/reader.h	350;"	d
C16	include/rapidjson/reader.h	384;"	d
C16	include/rapidjson/reader.h	386;"	d
CONFIG_FREERTOS_HZ	include/libwebsockets/lws-esp32.h	52;"	d
CONTEXT_PORT_NO_LISTEN	include/libwebsockets.h	277;"	d
CONTEXT_PORT_NO_LISTEN_SERVER	include/libwebsockets.h	278;"	d
Capacity	include/rapidjson/allocators.h	/^    size_t Capacity() const {$/;"	f	class:MemoryPoolAllocator
Capacity	include/rapidjson/document.h	/^    SizeType Capacity() const { RAPIDJSON_ASSERT(IsArray()); return data_.a.capacity; }$/;"	f	class:GenericValue
Capacity	include/rapidjson/document.h	/^    SizeType Capacity() const { return value_.Capacity(); }$/;"	f	class:GenericArray
Ch	include/rapidjson/cursorstreamwrapper.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:CursorStreamWrapper
Ch	include/rapidjson/document.h	/^    typedef CharType Ch; \/\/!< character type of the string$/;"	t	struct:GenericStringRef
Ch	include/rapidjson/document.h	/^    typedef typename Encoding::Ch Ch;                       \/\/!< Character type derived from Encoding.$/;"	t	class:GenericDocument
Ch	include/rapidjson/document.h	/^    typedef typename Encoding::Ch Ch;               \/\/!< Character type derived from Encoding.$/;"	t	class:GenericValue
Ch	include/rapidjson/document.h	/^    typedef typename ValueType::Ch Ch;$/;"	t	class:GenericObject
Ch	include/rapidjson/encodedstream.h	/^    typedef CharType Ch;$/;"	t	class:AutoUTFInputStream
Ch	include/rapidjson/encodedstream.h	/^    typedef CharType Ch;$/;"	t	class:AutoUTFOutputStream
Ch	include/rapidjson/encodedstream.h	/^    typedef UTF8<>::Ch Ch;$/;"	t	class:EncodedInputStream
Ch	include/rapidjson/encodedstream.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:EncodedInputStream
Ch	include/rapidjson/encodedstream.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:EncodedOutputStream
Ch	include/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:ASCII
Ch	include/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:AutoUTF
Ch	include/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:UTF16
Ch	include/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:UTF32
Ch	include/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:UTF8
Ch	include/rapidjson/filereadstream.h	/^    typedef char Ch;    \/\/!< Character type (byte).$/;"	t	class:FileReadStream
Ch	include/rapidjson/filewritestream.h	/^    typedef char Ch;    \/\/!< Character type. Only support char.$/;"	t	class:FileWriteStream
Ch	include/rapidjson/internal/regex.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:internal::GenericRegex
Ch	include/rapidjson/internal/regex.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:internal::GenericRegexSearch
Ch	include/rapidjson/istreamwrapper.h	/^    typedef typename StreamType::char_type Ch;$/;"	t	class:BasicIStreamWrapper
Ch	include/rapidjson/memorybuffer.h	/^    typedef char Ch; \/\/ byte$/;"	t	struct:GenericMemoryBuffer
Ch	include/rapidjson/memorystream.h	/^    typedef char Ch; \/\/ byte$/;"	t	struct:MemoryStream
Ch	include/rapidjson/ostreamwrapper.h	/^    typedef typename StreamType::char_type Ch;$/;"	t	class:BasicOStreamWrapper
Ch	include/rapidjson/pointer.h	/^        typedef typename ValueType::Ch Ch;$/;"	t	class:GenericPointer::PercentDecodeStream
Ch	include/rapidjson/pointer.h	/^    typedef typename ValueType::Ch Ch;                      \/\/!< Character type from Value$/;"	t	class:GenericPointer
Ch	include/rapidjson/prettywriter.h	/^    typedef typename Base::Ch Ch;$/;"	t	class:PrettyWriter
Ch	include/rapidjson/reader.h	/^        typedef CharType Ch;$/;"	t	class:GenericReader::StackStream
Ch	include/rapidjson/reader.h	/^        typedef typename InputStream::Ch Ch;$/;"	t	class:GenericReader::NumberStream
Ch	include/rapidjson/reader.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	struct:BaseReaderHandler
Ch	include/rapidjson/reader.h	/^    typedef typename SourceEncoding::Ch Ch; \/\/!< SourceEncoding character type$/;"	t	class:GenericReader
Ch	include/rapidjson/schema.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:internal::Hasher
Ch	include/rapidjson/schema.h	/^    typedef typename EncodingType::Ch Ch;$/;"	t	class:GenericSchemaDocument
Ch	include/rapidjson/schema.h	/^    typedef typename EncodingType::Ch Ch;$/;"	t	class:GenericSchemaValidator
Ch	include/rapidjson/schema.h	/^    typedef typename EncodingType::Ch Ch;$/;"	t	class:internal::Schema
Ch	include/rapidjson/schema.h	/^    typedef typename InputStream::Ch Ch;$/;"	t	class:SchemaValidatingReader
Ch	include/rapidjson/schema.h	/^    typedef typename SchemaDocumentType::Ch Ch;$/;"	t	class:IGenericRemoteSchemaDocumentProvider
Ch	include/rapidjson/schema.h	/^    typedef typename SchemaType::Ch Ch;$/;"	t	class:internal::IValidationErrorHandler
Ch	include/rapidjson/schema.h	/^    typedef typename ValueType::Ch Ch;$/;"	t	struct:internal::SchemaValidationContext
Ch	include/rapidjson/stream.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:GenericStreamWrapper
Ch	include/rapidjson/stream.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	struct:GenericInsituStringStream
Ch	include/rapidjson/stream.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	struct:GenericStringStream
Ch	include/rapidjson/stringbuffer.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:GenericStringBuffer
Ch	include/rapidjson/writer.h	/^    typedef typename SourceEncoding::Ch Ch;$/;"	t	class:Writer
CharType	include/rapidjson/document.h	/^    GenericStringRef(CharType (&str)[N]) \/* = delete *\/;$/;"	m	struct:GenericStringRef
CharacterEscape	include/rapidjson/internal/regex.h	/^    bool CharacterEscape(DecodedStream<InputStream, Encoding>& ds, unsigned* escapedCodepoint) {$/;"	f	class:internal::GenericRegex
CheckDoubleMaximum	include/rapidjson/schema.h	/^    bool CheckDoubleMaximum(Context& context, double d) const {$/;"	f	class:internal::Schema
CheckDoubleMinimum	include/rapidjson/schema.h	/^    bool CheckDoubleMinimum(Context& context, double d) const {$/;"	f	class:internal::Schema
CheckDoubleMultipleOf	include/rapidjson/schema.h	/^    bool CheckDoubleMultipleOf(Context& context, double d) const {$/;"	f	class:internal::Schema
CheckInt	include/rapidjson/schema.h	/^    bool CheckInt(Context& context, int64_t i) const {$/;"	f	class:internal::Schema
CheckUint	include/rapidjson/schema.h	/^    bool CheckUint(Context& context, uint64_t i) const {$/;"	f	class:internal::Schema
CheckWithinHalfULP	include/rapidjson/internal/strtod.h	/^inline int CheckWithinHalfULP(double b, const BigInteger& d, int dExp) {$/;"	f	namespace:internal
ChunkHeader	include/rapidjson/allocators.h	/^    struct ChunkHeader {$/;"	s	class:MemoryPoolAllocator
Clear	include/rapidjson/allocators.h	/^    void Clear() {$/;"	f	class:MemoryPoolAllocator
Clear	include/rapidjson/document.h	/^    void Clear() const { value_.Clear(); }$/;"	f	class:GenericArray
Clear	include/rapidjson/document.h	/^    void Clear() {$/;"	f	class:GenericValue
Clear	include/rapidjson/error/error.h	/^    void Clear() { Set(kParseErrorNone); }$/;"	f	struct:ParseResult
Clear	include/rapidjson/internal/stack.h	/^    void Clear() { stackTop_ = stack_; }$/;"	f	class:internal::Stack
Clear	include/rapidjson/memorybuffer.h	/^    void Clear() { stack_.Clear(); }$/;"	f	struct:GenericMemoryBuffer
Clear	include/rapidjson/stringbuffer.h	/^    void Clear() { stack_.Clear(); }$/;"	f	class:GenericStringBuffer
ClearStack	include/rapidjson/document.h	/^    void ClearStack() {$/;"	f	class:GenericDocument
ClearStack	include/rapidjson/reader.h	/^    void ClearStack() { stack_.Clear(); }$/;"	f	class:GenericReader
ClearStackOnExit	include/rapidjson/document.h	/^        explicit ClearStackOnExit(GenericDocument& d) : d_(d) {}$/;"	f	struct:GenericDocument::ClearStackOnExit
ClearStackOnExit	include/rapidjson/document.h	/^    struct ClearStackOnExit {$/;"	s	class:GenericDocument
ClearStackOnExit	include/rapidjson/reader.h	/^        explicit ClearStackOnExit(GenericReader& r) : r_(r) {}$/;"	f	struct:GenericReader::ClearStackOnExit
ClearStackOnExit	include/rapidjson/reader.h	/^    struct ClearStackOnExit {$/;"	s	class:GenericReader
CloneTopOperand	include/rapidjson/internal/regex.h	/^    void CloneTopOperand(Stack<Allocator>& operandStack) {$/;"	f	class:internal::GenericRegex
Code	include/rapidjson/error/error.h	/^    ParseErrorCode Code() const { return code_; }$/;"	f	struct:ParseResult
ColonToken	include/rapidjson/reader.h	/^        ColonToken,$/;"	e	enum:GenericReader::Token
CommaToken	include/rapidjson/reader.h	/^        CommaToken,$/;"	e	enum:GenericReader::Token
Compare	include/rapidjson/internal/biginteger.h	/^    int Compare(const BigInteger& rhs) const {$/;"	f	class:internal::BigInteger
ConstArray	include/rapidjson/document.h	/^    typedef GenericArray<true, ValueT> ConstArray;$/;"	t	class:GenericArray
ConstArray	include/rapidjson/document.h	/^    typedef GenericArray<true, ValueType> ConstArray;$/;"	t	class:GenericValue
ConstIterator	include/rapidjson/document.h	/^    typedef GenericMemberIterator<true,Encoding,Allocator>  ConstIterator;$/;"	t	class:GenericMemberIterator
ConstMemberIterator	include/rapidjson/document.h	/^    typedef GenericMemberIterator<true, typename ValueT::EncodingType, typename ValueT::AllocatorType> ConstMemberIterator;$/;"	t	class:GenericObject
ConstMemberIterator	include/rapidjson/document.h	/^    typedef typename GenericMemberIterator<true,Encoding,Allocator>::Iterator ConstMemberIterator;  \/\/!< Constant member iterator for iterating in object.$/;"	t	class:GenericValue
ConstObject	include/rapidjson/document.h	/^    typedef GenericObject<true, ValueT> ConstObject;$/;"	t	class:GenericObject
ConstObject	include/rapidjson/document.h	/^    typedef GenericObject<true, ValueType> ConstObject;$/;"	t	class:GenericValue
ConstValueIterator	include/rapidjson/document.h	/^    typedef const GenericValue* ConstValueIterator; \/\/!< Constant value iterator for iterating in array.$/;"	t	class:GenericValue
ConstValueIterator	include/rapidjson/document.h	/^    typedef const ValueT* ConstValueIterator;$/;"	t	class:GenericArray
Consume	include/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE static bool Consume(InputStream& is, typename InputStream::Ch expect) {$/;"	f	class:GenericReader
Context	include/rapidjson/schema.h	/^    typedef SchemaValidationContext<SchemaDocumentType> Context;$/;"	t	class:internal::Schema
Context	include/rapidjson/schema.h	/^    typedef typename SchemaType::Context Context;$/;"	t	class:GenericSchemaValidator
CopyFrom	include/rapidjson/document.h	/^    GenericValue& CopyFrom(const GenericValue<Encoding, SourceAllocator>& rhs, Allocator& allocator, bool copyConstStrings = false) {$/;"	f	class:GenericValue
CopyFromRaw	include/rapidjson/pointer.h	/^    Ch* CopyFromRaw(const GenericPointer& rhs, size_t extraToken = 0, size_t extraNameBufferSize = 0) {$/;"	f	class:GenericPointer
CountDecimalDigit32	include/rapidjson/internal/dtoa.h	/^inline int CountDecimalDigit32(uint32_t n) {$/;"	f	namespace:internal
CountStringCodePoint	include/rapidjson/internal/strfunc.h	/^bool CountStringCodePoint(const typename Encoding::Ch* s, SizeType length, SizeType* outCount) {$/;"	f	namespace:internal
Create	include/rapidjson/pointer.h	/^    ValueType& Create(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, bool* alreadyExist = 0) const {$/;"	f	class:GenericPointer
Create	include/rapidjson/pointer.h	/^    ValueType& Create(ValueType& root, typename ValueType::AllocatorType& allocator, bool* alreadyExist = 0) const {$/;"	f	class:GenericPointer
CreateHasher	include/rapidjson/schema.h	/^    virtual void* CreateHasher() {$/;"	f	class:GenericSchemaValidator
CreateParallelValidator	include/rapidjson/schema.h	/^    bool CreateParallelValidator(Context& context) const {$/;"	f	class:internal::Schema
CreatePattern	include/rapidjson/schema.h	/^    RegexType* CreatePattern(const ValueType& value) {$/;"	f	class:internal::Schema
CreatePattern	include/rapidjson/schema.h	/^    RegexType* CreatePattern(const ValueType&) { return 0; }$/;"	f	class:internal::Schema
CreateSchema	include/rapidjson/schema.h	/^    void CreateSchema(const SchemaType** schema, const PointerType& pointer, const ValueType& v, const ValueType& document) {$/;"	f	class:GenericSchemaDocument
CreateSchemaRecursive	include/rapidjson/schema.h	/^    void CreateSchemaRecursive(const SchemaType** schema, const PointerType& pointer, const ValueType& v, const ValueType& document) {$/;"	f	class:GenericSchemaDocument
CreateSchemaValidator	include/rapidjson/schema.h	/^    virtual ISchemaValidator* CreateSchemaValidator(const SchemaType& root) {$/;"	f	class:GenericSchemaValidator
CreateSchemaValidators	include/rapidjson/schema.h	/^    void CreateSchemaValidators(Context& context, const SchemaArray& schemas) const {$/;"	f	class:internal::Schema
CreateValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& CreateValueByPointer(DocumentType& document, const CharType(&source)[N]) {$/;"	f
CreateValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& CreateValueByPointer(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer) {$/;"	f
CreateValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& CreateValueByPointer(T& root, const CharType(&source)[N], typename T::AllocatorType& a) {$/;"	f
CreateValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& CreateValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, typename T::AllocatorType& a) {$/;"	f
CrtAllocator	include/rapidjson/allocators.h	/^class CrtAllocator {$/;"	c
CurrentContext	include/rapidjson/schema.h	/^    Context& CurrentContext() { return *schemaStack_.template Top<Context>(); }$/;"	f	class:GenericSchemaValidator
CurrentContext	include/rapidjson/schema.h	/^    const Context& CurrentContext() const { return *schemaStack_.template Top<Context>(); }$/;"	f	class:GenericSchemaValidator
CurrentSchema	include/rapidjson/schema.h	/^    const SchemaType& CurrentSchema() const { return *schemaStack_.template Top<Context>()->schema; }$/;"	f	class:GenericSchemaValidator
CursorStreamWrapper	include/rapidjson/cursorstreamwrapper.h	/^    CursorStreamWrapper(InputStream& is):$/;"	f	class:CursorStreamWrapper
CursorStreamWrapper	include/rapidjson/cursorstreamwrapper.h	/^class CursorStreamWrapper : public GenericStreamWrapper<InputStream, Encoding> {$/;"	c
Data	include/rapidjson/document.h	/^    union Data {$/;"	u	class:GenericValue
Decode	include/rapidjson/encodings.h	/^    static RAPIDJSON_FORCEINLINE bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:AutoUTF
Decode	include/rapidjson/encodings.h	/^    static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:ASCII
Decode	include/rapidjson/encodings.h	/^    static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:UTF16
Decode	include/rapidjson/encodings.h	/^    static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:UTF32
Decode	include/rapidjson/encodings.h	/^    static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:UTF8
Decode	include/rapidjson/internal/regex.h	/^    void Decode() {$/;"	f	class:internal::DecodedStream
DecodedStream	include/rapidjson/internal/regex.h	/^    DecodedStream(SourceStream& ss) : ss_(ss), codepoint_() { Decode(); }$/;"	f	class:internal::DecodedStream
DecodedStream	include/rapidjson/internal/regex.h	/^class DecodedStream {$/;"	c	namespace:internal
Default	include/rapidjson/reader.h	/^    bool Default() { return true; }$/;"	f	struct:BaseReaderHandler
DestroryHasher	include/rapidjson/schema.h	/^    virtual void DestroryHasher(void* hasher) {$/;"	f	class:GenericSchemaValidator
Destroy	include/rapidjson/document.h	/^    void Destroy() {$/;"	f	class:GenericDocument
Destroy	include/rapidjson/internal/stack.h	/^    void Destroy() {$/;"	f	class:internal::Stack
DestroySchemaValidator	include/rapidjson/schema.h	/^    virtual void DestroySchemaValidator(ISchemaValidator* validator) {$/;"	f	class:GenericSchemaValidator
DetectType	include/rapidjson/encodedstream.h	/^    void DetectType() {$/;"	f	class:AutoUTFInputStream
Difference	include/rapidjson/internal/biginteger.h	/^    bool Difference(const BigInteger& rhs, BigInteger* out) const {$/;"	f	class:internal::BigInteger
DifferenceType	include/rapidjson/document.h	/^    typedef difference_type DifferenceType;$/;"	t	class:GenericMemberIterator
DigitGen	include/rapidjson/internal/dtoa.h	/^inline void DigitGen(const DiyFp& W, const DiyFp& Mp, uint64_t delta, char* buffer, int* len, int* K) {$/;"	f	namespace:internal
DisableIf	include/rapidjson/internal/meta.h	/^struct DisableIf : DisableIfCond<Condition::Value, T> {};$/;"	s	namespace:internal
DisableIfCond	include/rapidjson/internal/meta.h	/^template <bool Condition, typename T = void> struct DisableIfCond { typedef T Type; };$/;"	s	namespace:internal
DisableIfCond	include/rapidjson/internal/meta.h	/^template <typename T> struct DisableIfCond<true, T> { \/* empty *\/ };$/;"	s	namespace:internal
Disallowed	include/rapidjson/schema.h	/^    void Disallowed() {$/;"	f	class:GenericSchemaValidator
DisallowedItem	include/rapidjson/schema.h	/^    void DisallowedItem(SizeType index) {$/;"	f	class:GenericSchemaValidator
DisallowedProperty	include/rapidjson/schema.h	/^    void DisallowedProperty(const Ch* name, SizeType length) {$/;"	f	class:GenericSchemaValidator
DisallowedType	include/rapidjson/schema.h	/^    void DisallowedType(Context& context, const ValueType& actualType) const {$/;"	f	class:internal::Schema
DisallowedValue	include/rapidjson/schema.h	/^    void DisallowedValue() {$/;"	f	class:GenericSchemaValidator
DiyFp	include/rapidjson/internal/diyfp.h	/^    DiyFp() : f(), e() {}$/;"	f	struct:internal::DiyFp
DiyFp	include/rapidjson/internal/diyfp.h	/^    DiyFp(uint64_t fp, int exp) : f(fp), e(exp) {}$/;"	f	struct:internal::DiyFp
DiyFp	include/rapidjson/internal/diyfp.h	/^    explicit DiyFp(double d) {$/;"	f	struct:internal::DiyFp
DiyFp	include/rapidjson/internal/diyfp.h	/^struct DiyFp {$/;"	s	namespace:internal
Document	include/rapidjson/document.h	/^typedef GenericDocument<UTF8<> > Document;$/;"	t
Document	include/rapidjson/fwd.h	/^typedef GenericDocument<UTF8<char>, MemoryPoolAllocator<CrtAllocator>, CrtAllocator> Document;$/;"	t
DoesNotMatch	include/rapidjson/schema.h	/^    void DoesNotMatch(const Ch* str, SizeType length) {$/;"	f	class:GenericSchemaValidator
Double	include/rapidjson/document.h	/^    bool Double(double d) { new (stack_.template Push<ValueType>()) ValueType(d); return true; }$/;"	f	class:GenericDocument
Double	include/rapidjson/internal/ieee754.h	/^    Double() {}$/;"	f	class:internal::Double
Double	include/rapidjson/internal/ieee754.h	/^    Double(double d) : d_(d) {}$/;"	f	class:internal::Double
Double	include/rapidjson/internal/ieee754.h	/^    Double(uint64_t u) : u_(u) {}$/;"	f	class:internal::Double
Double	include/rapidjson/internal/ieee754.h	/^class Double {$/;"	c	namespace:internal
Double	include/rapidjson/prettywriter.h	/^    bool Double(double d)       { PrettyPrefix(kNumberType); return Base::EndValue(Base::WriteDouble(d)); }$/;"	f	class:PrettyWriter
Double	include/rapidjson/reader.h	/^    bool Double(double) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Double	include/rapidjson/schema.h	/^    bool Double(Context& context, double d) const {$/;"	f	class:internal::Schema
Double	include/rapidjson/schema.h	/^    bool Double(double d)   { RAPIDJSON_SCHEMA_HANDLE_VALUE_(Double, (CurrentContext(), d), (d)); }$/;"	f	class:GenericSchemaValidator
Double	include/rapidjson/schema.h	/^    bool Double(double d) { $/;"	f	class:internal::Hasher
Double	include/rapidjson/writer.h	/^    bool Double(double d)       { Prefix(kNumberType); return EndValue(WriteDouble(d)); }$/;"	f	class:Writer
DuplicateItems	include/rapidjson/schema.h	/^    void DuplicateItems(SizeType index1, SizeType index2) {$/;"	f	class:GenericSchemaValidator
ENG_N	include/eval_types.h	23;"	d
ENG_STATE_IDLE	include/eval_types.h	24;"	d
ENG_STATE_OCCUPIED	include/eval_types.h	25;"	d
ENG_STATE_STARTED	include/eval_types.h	26;"	d
EXTARG_DEC	include/libwebsockets/lws-ws-ext.h	/^	EXTARG_DEC,  \/**< requires a decimal argument *\/$/;"	e	enum:lws_ext_options_types
EXTARG_NONE	include/libwebsockets/lws-ws-ext.h	/^	EXTARG_NONE, \/**< does not take an argument *\/$/;"	e	enum:lws_ext_options_types
EXTARG_OPT_DEC	include/libwebsockets/lws-ws-ext.h	/^	EXTARG_OPT_DEC \/**< may have an optional decimal argument *\/$/;"	e	enum:lws_ext_options_types
EffectiveSignificandSize	include/rapidjson/internal/ieee754.h	/^    static int EffectiveSignificandSize(int order) {$/;"	f	class:internal::Double
Empty	include/rapidjson/document.h	/^    bool Empty() const { RAPIDJSON_ASSERT(IsArray()); return data_.a.size == 0; }$/;"	f	class:GenericValue
Empty	include/rapidjson/document.h	/^    bool Empty() const { return value_.Empty(); }$/;"	f	class:GenericArray
Empty	include/rapidjson/internal/stack.h	/^    bool Empty() const { return stackTop_ == stack_; }$/;"	f	class:internal::Stack
EnableIf	include/rapidjson/internal/meta.h	/^struct EnableIf : EnableIfCond<Condition::Value, T> {};$/;"	s	namespace:internal
EnableIfCond	include/rapidjson/internal/meta.h	/^template <bool Condition, typename T = void> struct EnableIfCond  { typedef T Type; };$/;"	s	namespace:internal
EnableIfCond	include/rapidjson/internal/meta.h	/^template <typename T> struct EnableIfCond<false, T> { \/* empty *\/ };$/;"	s	namespace:internal
Encode	include/rapidjson/encodings.h	/^    static RAPIDJSON_FORCEINLINE void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:AutoUTF
Encode	include/rapidjson/encodings.h	/^    static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:ASCII
Encode	include/rapidjson/encodings.h	/^    static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:UTF16
Encode	include/rapidjson/encodings.h	/^    static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:UTF32
Encode	include/rapidjson/encodings.h	/^    static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:UTF8
EncodeUnsafe	include/rapidjson/encodings.h	/^    static RAPIDJSON_FORCEINLINE void EncodeUnsafe(OutputStream& os, unsigned codepoint) {$/;"	f	struct:AutoUTF
EncodeUnsafe	include/rapidjson/encodings.h	/^    static void EncodeUnsafe(OutputStream& os, unsigned codepoint) {$/;"	f	struct:ASCII
EncodeUnsafe	include/rapidjson/encodings.h	/^    static void EncodeUnsafe(OutputStream& os, unsigned codepoint) {$/;"	f	struct:UTF16
EncodeUnsafe	include/rapidjson/encodings.h	/^    static void EncodeUnsafe(OutputStream& os, unsigned codepoint) {$/;"	f	struct:UTF32
EncodeUnsafe	include/rapidjson/encodings.h	/^    static void EncodeUnsafe(OutputStream& os, unsigned codepoint) {$/;"	f	struct:UTF8
EncodedInputStream	include/rapidjson/encodedstream.h	/^    EncodedInputStream(InputByteStream& is) : is_(is) { $/;"	f	class:EncodedInputStream
EncodedInputStream	include/rapidjson/encodedstream.h	/^    EncodedInputStream(MemoryStream& is) : is_(is) {$/;"	f	class:EncodedInputStream
EncodedInputStream	include/rapidjson/encodedstream.h	/^class EncodedInputStream {$/;"	c
EncodedInputStream	include/rapidjson/encodedstream.h	/^class EncodedInputStream<UTF8<>, MemoryStream> {$/;"	c
EncodedOutputStream	include/rapidjson/encodedstream.h	/^    EncodedOutputStream(OutputByteStream& os, bool putBOM = true) : os_(os) { $/;"	f	class:EncodedOutputStream
EncodedOutputStream	include/rapidjson/encodedstream.h	/^class EncodedOutputStream {$/;"	c
Encoding	include/rapidjson/internal/regex.h	/^    typedef typename RegexType::EncodingType Encoding;$/;"	t	class:internal::GenericRegexSearch
EncodingType	include/rapidjson/document.h	/^    typedef Encoding EncodingType;                  \/\/!< Encoding type from template parameter.$/;"	t	class:GenericValue
EncodingType	include/rapidjson/document.h	/^    typedef typename ValueType::EncodingType EncodingType;$/;"	t	class:GenericObject
EncodingType	include/rapidjson/internal/regex.h	/^    typedef Encoding EncodingType;$/;"	t	class:internal::GenericRegex
EncodingType	include/rapidjson/pointer.h	/^    typedef typename ValueType::EncodingType EncodingType;  \/\/!< Encoding type from Value$/;"	t	class:GenericPointer
EncodingType	include/rapidjson/schema.h	/^    typedef typename SchemaType::EncodingType EncodingType;$/;"	t	class:GenericSchemaValidator
EncodingType	include/rapidjson/schema.h	/^    typedef typename ValueType::EncodingType EncodingType;$/;"	t	class:GenericSchemaDocument
EncodingType	include/rapidjson/schema.h	/^    typedef typename ValueType::EncodingType EncodingType;$/;"	t	class:internal::Schema
End	include/rapidjson/document.h	/^    ConstValueIterator End() const { return const_cast<GenericValue&>(*this).End(); }$/;"	f	class:GenericValue
End	include/rapidjson/document.h	/^    ValueIterator End() const { return value_.End(); }$/;"	f	class:GenericArray
End	include/rapidjson/document.h	/^    ValueIterator End() { RAPIDJSON_ASSERT(IsArray()); return GetElementsPointer() + data_.a.size; }$/;"	f	class:GenericValue
End	include/rapidjson/internal/stack.h	/^    T* End() { return reinterpret_cast<T*>(stackTop_); }$/;"	f	class:internal::Stack
End	include/rapidjson/internal/stack.h	/^    const T* End() const { return reinterpret_cast<T*>(stackTop_); }$/;"	f	class:internal::Stack
EndArray	include/rapidjson/document.h	/^    bool EndArray(SizeType elementCount) {$/;"	f	class:GenericDocument
EndArray	include/rapidjson/prettywriter.h	/^    bool EndArray(SizeType memberCount = 0) {$/;"	f	class:PrettyWriter
EndArray	include/rapidjson/reader.h	/^    bool EndArray(SizeType) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
EndArray	include/rapidjson/schema.h	/^    bool EndArray(Context& context, SizeType elementCount) const {$/;"	f	class:internal::Schema
EndArray	include/rapidjson/schema.h	/^    bool EndArray(SizeType elementCount) { $/;"	f	class:internal::Hasher
EndArray	include/rapidjson/schema.h	/^    bool EndArray(SizeType elementCount) {$/;"	f	class:GenericSchemaValidator
EndArray	include/rapidjson/writer.h	/^    bool EndArray(SizeType elementCount = 0) {$/;"	f	class:Writer
EndDependencyErrors	include/rapidjson/schema.h	/^    bool EndDependencyErrors() {$/;"	f	class:GenericSchemaValidator
EndDisallowedType	include/rapidjson/schema.h	/^    void EndDisallowedType(const typename SchemaType::ValueType& actualType) {$/;"	f	class:GenericSchemaValidator
EndMissingDependentProperties	include/rapidjson/schema.h	/^    void EndMissingDependentProperties(const SValue& sourceName) {$/;"	f	class:GenericSchemaValidator
EndMissingProperties	include/rapidjson/schema.h	/^    bool EndMissingProperties() {$/;"	f	class:GenericSchemaValidator
EndObject	include/rapidjson/document.h	/^    bool EndObject(SizeType memberCount) {$/;"	f	class:GenericDocument
EndObject	include/rapidjson/prettywriter.h	/^    bool EndObject(SizeType memberCount = 0) {$/;"	f	class:PrettyWriter
EndObject	include/rapidjson/reader.h	/^    bool EndObject(SizeType) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
EndObject	include/rapidjson/schema.h	/^    bool EndObject(Context& context, SizeType memberCount) const {$/;"	f	class:internal::Schema
EndObject	include/rapidjson/schema.h	/^    bool EndObject(SizeType memberCount) { $/;"	f	class:GenericSchemaValidator
EndObject	include/rapidjson/schema.h	/^    bool EndObject(SizeType memberCount) { $/;"	f	class:internal::Hasher
EndObject	include/rapidjson/writer.h	/^    bool EndObject(SizeType memberCount = 0) {$/;"	f	class:Writer
EndValue	include/rapidjson/schema.h	/^    RAPIDJSON_FORCEINLINE bool EndValue(Context& context) const {$/;"	f	class:internal::Schema
EndValue	include/rapidjson/schema.h	/^    bool EndValue() {$/;"	f	class:GenericSchemaValidator
EndValue	include/rapidjson/writer.h	/^    bool EndValue(bool ret) {$/;"	f	class:Writer
Erase	include/rapidjson/document.h	/^    ValueIterator Erase(ConstValueIterator first, ConstValueIterator last) const { return value_.Erase(first, last); }$/;"	f	class:GenericArray
Erase	include/rapidjson/document.h	/^    ValueIterator Erase(ConstValueIterator first, ConstValueIterator last) {$/;"	f	class:GenericValue
Erase	include/rapidjson/document.h	/^    ValueIterator Erase(ConstValueIterator pos) const { return value_.Erase(pos); }$/;"	f	class:GenericArray
Erase	include/rapidjson/document.h	/^    ValueIterator Erase(ConstValueIterator pos) {$/;"	f	class:GenericValue
Erase	include/rapidjson/pointer.h	/^    bool Erase(ValueType& root) const {$/;"	f	class:GenericPointer
EraseMember	include/rapidjson/document.h	/^    MemberIterator EraseMember(ConstMemberIterator first, ConstMemberIterator last) const { return value_.EraseMember(first, last); }$/;"	f	class:GenericObject
EraseMember	include/rapidjson/document.h	/^    MemberIterator EraseMember(ConstMemberIterator first, ConstMemberIterator last) {$/;"	f	class:GenericValue
EraseMember	include/rapidjson/document.h	/^    MemberIterator EraseMember(ConstMemberIterator pos) const { return value_.EraseMember(pos); }$/;"	f	class:GenericObject
EraseMember	include/rapidjson/document.h	/^    MemberIterator EraseMember(ConstMemberIterator pos) {$/;"	f	class:GenericValue
EraseMember	include/rapidjson/document.h	/^    bool EraseMember(const Ch* name) const { return value_.EraseMember(name); }$/;"	f	class:GenericObject
EraseMember	include/rapidjson/document.h	/^    bool EraseMember(const Ch* name) {$/;"	f	class:GenericValue
EraseMember	include/rapidjson/document.h	/^    bool EraseMember(const GenericValue<Encoding, SourceAllocator>& name) {$/;"	f	class:GenericValue
EraseMember	include/rapidjson/document.h	/^    bool EraseMember(const std::basic_string<Ch>& name) const { return EraseMember(ValueType(StringRef(name))); }$/;"	f	class:GenericObject
EraseMember	include/rapidjson/document.h	/^    bool EraseMember(const std::basic_string<Ch>& name) { return EraseMember(GenericValue(StringRef(name))); }$/;"	f	class:GenericValue
EraseMember	include/rapidjson/document.h	/^    template <typename SourceAllocator> bool EraseMember(const GenericValue<EncodingType, SourceAllocator>& name) const { return value_.EraseMember(name); }$/;"	f	class:GenericObject
EraseValueByPointer	include/rapidjson/pointer.h	/^bool EraseValueByPointer(T& root, const CharType(&source)[N]) {$/;"	f
EraseValueByPointer	include/rapidjson/pointer.h	/^bool EraseValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer) {$/;"	f
ErrorHandler	include/rapidjson/schema.h	/^    typedef IValidationErrorHandler<Schema> ErrorHandler;$/;"	t	class:internal::Schema
ErrorHandlerType	include/rapidjson/schema.h	/^    typedef IValidationErrorHandler<SchemaType> ErrorHandlerType;$/;"	t	struct:internal::SchemaValidationContext
Eval	include/rapidjson/internal/regex.h	/^    bool Eval(Stack<Allocator>& operandStack, Operator op) {$/;"	f	class:internal::GenericRegex
EvalQuantifier	include/rapidjson/internal/regex.h	/^    bool EvalQuantifier(Stack<Allocator>& operandStack, unsigned n, unsigned m) {$/;"	f	class:internal::GenericRegex
Expand	include/rapidjson/internal/stack.h	/^    void Expand(size_t count) {$/;"	f	class:internal::Stack
Exponent	include/rapidjson/internal/ieee754.h	/^    int Exponent() const { return static_cast<int>(((u_ & kExponentMask) >> kSignificandSize) - kExponentBias); }$/;"	f	class:internal::Double
FalseToken	include/rapidjson/reader.h	/^        FalseToken,$/;"	e	enum:GenericReader::Token
FalseType	include/rapidjson/internal/meta.h	/^typedef BoolType<false> FalseType;$/;"	t	namespace:internal
FastPath	include/rapidjson/internal/strtod.h	/^inline double FastPath(double significand, int exp) {$/;"	f	namespace:internal
FileReadStream	include/rapidjson/filereadstream.h	/^    FileReadStream(std::FILE* fp, char* buffer, size_t bufferSize) : fp_(fp), buffer_(buffer), bufferSize_(bufferSize), bufferLast_(0), current_(buffer_), readCount_(0), count_(0), eof_(false) { $/;"	f	class:FileReadStream
FileReadStream	include/rapidjson/filereadstream.h	/^class FileReadStream {$/;"	c
FileWriteStream	include/rapidjson/filewritestream.h	/^    FileWriteStream(std::FILE* fp, char* buffer, size_t bufferSize) : fp_(fp), buffer_(buffer), bufferEnd_(buffer + bufferSize), current_(buffer_) { $/;"	f	class:FileWriteStream
FileWriteStream	include/rapidjson/filewritestream.h	/^class FileWriteStream {$/;"	c
FindMember	include/rapidjson/document.h	/^    ConstMemberIterator FindMember(const Ch* name) const { return const_cast<GenericValue&>(*this).FindMember(name); }$/;"	f	class:GenericValue
FindMember	include/rapidjson/document.h	/^    ConstMemberIterator FindMember(const std::basic_string<Ch>& name) const { return FindMember(GenericValue(StringRef(name))); }$/;"	f	class:GenericValue
FindMember	include/rapidjson/document.h	/^    MemberIterator FindMember(const Ch* name) const { return value_.FindMember(name); }$/;"	f	class:GenericObject
FindMember	include/rapidjson/document.h	/^    MemberIterator FindMember(const Ch* name) {$/;"	f	class:GenericValue
FindMember	include/rapidjson/document.h	/^    MemberIterator FindMember(const GenericValue<Encoding, SourceAllocator>& name) {$/;"	f	class:GenericValue
FindMember	include/rapidjson/document.h	/^    MemberIterator FindMember(const std::basic_string<Ch>& name) const { return value_.FindMember(name); }$/;"	f	class:GenericObject
FindMember	include/rapidjson/document.h	/^    MemberIterator FindMember(const std::basic_string<Ch>& name) { return FindMember(GenericValue(StringRef(name))); }$/;"	f	class:GenericValue
FindMember	include/rapidjson/document.h	/^    template <typename SourceAllocator> ConstMemberIterator FindMember(const GenericValue<Encoding, SourceAllocator>& name) const { return const_cast<GenericValue&>(*this).FindMember(name); }$/;"	f	class:GenericValue
FindMember	include/rapidjson/document.h	/^    template <typename SourceAllocator> MemberIterator FindMember(const GenericValue<EncodingType, SourceAllocator>& name) const { return value_.FindMember(name); }$/;"	f	class:GenericObject
FindPropertyIndex	include/rapidjson/schema.h	/^    bool FindPropertyIndex(const ValueType& name, SizeType* outIndex) const {$/;"	f	class:internal::Schema
Flag	include/rapidjson/document.h	/^    struct Flag {$/;"	s	class:GenericValue
Flush	include/rapidjson/encodedstream.h	/^    void Flush() { RAPIDJSON_ASSERT(false); } $/;"	f	class:AutoUTFInputStream
Flush	include/rapidjson/encodedstream.h	/^    void Flush() { RAPIDJSON_ASSERT(false); } $/;"	f	class:EncodedInputStream
Flush	include/rapidjson/encodedstream.h	/^    void Flush() { os_->Flush(); } $/;"	f	class:AutoUTFOutputStream
Flush	include/rapidjson/encodedstream.h	/^    void Flush() { os_.Flush(); }$/;"	f	class:EncodedOutputStream
Flush	include/rapidjson/encodedstream.h	/^    void Flush() {} $/;"	f	class:EncodedInputStream
Flush	include/rapidjson/filereadstream.h	/^    void Flush() { RAPIDJSON_ASSERT(false); } $/;"	f	class:FileReadStream
Flush	include/rapidjson/filewritestream.h	/^    void Flush() {$/;"	f	class:FileWriteStream
Flush	include/rapidjson/istreamwrapper.h	/^    void Flush() { RAPIDJSON_ASSERT(false); }$/;"	f	class:BasicIStreamWrapper
Flush	include/rapidjson/memorybuffer.h	/^    void Flush() {}$/;"	f	struct:GenericMemoryBuffer
Flush	include/rapidjson/memorystream.h	/^    void Flush() { RAPIDJSON_ASSERT(false); }$/;"	f	struct:MemoryStream
Flush	include/rapidjson/ostreamwrapper.h	/^    void Flush() {$/;"	f	class:BasicOStreamWrapper
Flush	include/rapidjson/stream.h	/^    void Flush() { RAPIDJSON_ASSERT(false); }$/;"	f	struct:GenericStringStream
Flush	include/rapidjson/stream.h	/^    void Flush() { is_.Flush(); }$/;"	f	class:GenericStreamWrapper
Flush	include/rapidjson/stream.h	/^    void Flush() {}$/;"	f	struct:GenericInsituStringStream
Flush	include/rapidjson/stringbuffer.h	/^    void Flush() {}$/;"	f	class:GenericStringBuffer
Flush	include/rapidjson/writer.h	/^    void Flush() {$/;"	f	class:Writer
Frag	include/rapidjson/internal/regex.h	/^        Frag(SizeType s, SizeType o, SizeType m) : start(s), out(o), minIndex(m) {}$/;"	f	struct:internal::GenericRegex::Frag
Frag	include/rapidjson/internal/regex.h	/^    struct Frag {$/;"	s	class:internal::GenericRegex
Free	include/rapidjson/allocators.h	/^    static void Free(void *ptr) { (void)ptr; } \/\/ Do nothing$/;"	f	class:MemoryPoolAllocator
Free	include/rapidjson/allocators.h	/^    static void Free(void *ptr) { std::free(ptr); }$/;"	f	class:CrtAllocator
FreeState	include/rapidjson/schema.h	/^    virtual void FreeState(void* p) {$/;"	f	class:GenericSchemaValidator
GenericArray	include/rapidjson/document.h	/^    GenericArray(ValueType& value) : value_(value) {}$/;"	f	class:GenericArray
GenericArray	include/rapidjson/document.h	/^    GenericArray(const GenericArray& rhs) : value_(rhs.value_) {}$/;"	f	class:GenericArray
GenericArray	include/rapidjson/document.h	/^class GenericArray {$/;"	c
GenericDocument	include/rapidjson/document.h	/^    GenericDocument(Allocator* allocator = 0, size_t stackCapacity = kDefaultStackCapacity, StackAllocator* stackAllocator = 0) : $/;"	f	class:GenericDocument
GenericDocument	include/rapidjson/document.h	/^    explicit GenericDocument(Type type, Allocator* allocator = 0, size_t stackCapacity = kDefaultStackCapacity, StackAllocator* stackAllocator = 0) :$/;"	f	class:GenericDocument
GenericDocument	include/rapidjson/document.h	/^class GenericDocument : public GenericValue<Encoding, Allocator> {$/;"	c
GenericInsituStringStream	include/rapidjson/stream.h	/^    GenericInsituStringStream(Ch *src) : src_(src), dst_(0), head_(src) {}$/;"	f	struct:GenericInsituStringStream
GenericInsituStringStream	include/rapidjson/stream.h	/^struct GenericInsituStringStream {$/;"	s
GenericMember	include/rapidjson/document.h	/^struct GenericMember { $/;"	s
GenericMemberIterator	include/rapidjson/document.h	/^    GenericMemberIterator() : ptr_() {}$/;"	f	class:GenericMemberIterator
GenericMemberIterator	include/rapidjson/document.h	/^    GenericMemberIterator(const NonConstIterator & it) : ptr_(it.ptr_) {}$/;"	f	class:GenericMemberIterator
GenericMemberIterator	include/rapidjson/document.h	/^    explicit GenericMemberIterator(Pointer p) : ptr_(p) {}$/;"	f	class:GenericMemberIterator
GenericMemberIterator	include/rapidjson/document.h	/^class GenericMemberIterator {$/;"	c
GenericMemberIterator	include/rapidjson/document.h	/^struct GenericMemberIterator<false,Encoding,Allocator> {$/;"	s
GenericMemberIterator	include/rapidjson/document.h	/^struct GenericMemberIterator<true,Encoding,Allocator> {$/;"	s
GenericMemoryBuffer	include/rapidjson/memorybuffer.h	/^    GenericMemoryBuffer(Allocator* allocator = 0, size_t capacity = kDefaultCapacity) : stack_(allocator, capacity) {}$/;"	f	struct:GenericMemoryBuffer
GenericMemoryBuffer	include/rapidjson/memorybuffer.h	/^struct GenericMemoryBuffer {$/;"	s
GenericObject	include/rapidjson/document.h	/^    GenericObject(ValueType& value) : value_(value) {}$/;"	f	class:GenericObject
GenericObject	include/rapidjson/document.h	/^    GenericObject(const GenericObject& rhs) : value_(rhs.value_) {}$/;"	f	class:GenericObject
GenericObject	include/rapidjson/document.h	/^class GenericObject {$/;"	c
GenericPointer	include/rapidjson/pointer.h	/^    GenericPointer(Allocator* allocator = 0) : allocator_(allocator), ownAllocator_(), nameBuffer_(), tokens_(), tokenCount_(), parseErrorOffset_(), parseErrorCode_(kPointerParseErrorNone) {}$/;"	f	class:GenericPointer
GenericPointer	include/rapidjson/pointer.h	/^    GenericPointer(const Ch* source, size_t length, Allocator* allocator = 0) : allocator_(allocator), ownAllocator_(), nameBuffer_(), tokens_(), tokenCount_(), parseErrorOffset_(), parseErrorCode_(kPointerParseErrorNone) {$/;"	f	class:GenericPointer
GenericPointer	include/rapidjson/pointer.h	/^    GenericPointer(const GenericPointer& rhs) : allocator_(rhs.allocator_), ownAllocator_(), nameBuffer_(), tokens_(), tokenCount_(), parseErrorOffset_(), parseErrorCode_(kPointerParseErrorNone) {$/;"	f	class:GenericPointer
GenericPointer	include/rapidjson/pointer.h	/^    GenericPointer(const GenericPointer& rhs, Allocator* allocator) : allocator_(allocator), ownAllocator_(), nameBuffer_(), tokens_(), tokenCount_(), parseErrorOffset_(), parseErrorCode_(kPointerParseErrorNone) {$/;"	f	class:GenericPointer
GenericPointer	include/rapidjson/pointer.h	/^    GenericPointer(const Token* tokens, size_t tokenCount) : allocator_(), ownAllocator_(), nameBuffer_(), tokens_(const_cast<Token*>(tokens)), tokenCount_(tokenCount), parseErrorOffset_(), parseErrorCode_(kPointerParseErrorNone) {}$/;"	f	class:GenericPointer
GenericPointer	include/rapidjson/pointer.h	/^    explicit GenericPointer(const Ch* source, Allocator* allocator = 0) : allocator_(allocator), ownAllocator_(), nameBuffer_(), tokens_(), tokenCount_(), parseErrorOffset_(), parseErrorCode_(kPointerParseErrorNone) {$/;"	f	class:GenericPointer
GenericPointer	include/rapidjson/pointer.h	/^    explicit GenericPointer(const std::basic_string<Ch>& source, Allocator* allocator = 0) : allocator_(allocator), ownAllocator_(), nameBuffer_(), tokens_(), tokenCount_(), parseErrorOffset_(), parseErrorCode_(kPointerParseErrorNone) {$/;"	f	class:GenericPointer
GenericPointer	include/rapidjson/pointer.h	/^class GenericPointer {$/;"	c
GenericReader	include/rapidjson/reader.h	/^    GenericReader(StackAllocator* stackAllocator = 0, size_t stackCapacity = kDefaultStackCapacity) :$/;"	f	class:GenericReader
GenericReader	include/rapidjson/reader.h	/^class GenericReader {$/;"	c
GenericRegex	include/rapidjson/internal/regex.h	/^    GenericRegex(const Ch* source, Allocator* allocator = 0) : $/;"	f	class:internal::GenericRegex
GenericRegex	include/rapidjson/internal/regex.h	/^class GenericRegex {$/;"	c	namespace:internal
GenericRegexSearch	include/rapidjson/internal/regex.h	/^    GenericRegexSearch(const RegexType& regex, Allocator* allocator = 0) : $/;"	f	class:internal::GenericRegexSearch
GenericRegexSearch	include/rapidjson/internal/regex.h	/^class GenericRegexSearch {$/;"	c	namespace:internal
GenericSchemaDocument	include/rapidjson/schema.h	/^    explicit GenericSchemaDocument(const ValueType& document, const Ch* uri = 0, SizeType uriLength = 0,$/;"	f	class:GenericSchemaDocument
GenericSchemaDocument	include/rapidjson/schema.h	/^class GenericSchemaDocument {$/;"	c
GenericSchemaValidator	include/rapidjson/schema.h	/^    GenericSchemaValidator( $/;"	f	class:GenericSchemaValidator
GenericSchemaValidator	include/rapidjson/schema.h	/^    GenericSchemaValidator($/;"	f	class:GenericSchemaValidator
GenericSchemaValidator	include/rapidjson/schema.h	/^class GenericSchemaValidator :$/;"	c
GenericStreamWrapper	include/rapidjson/stream.h	/^    GenericStreamWrapper(InputStream& is): is_(is) {}$/;"	f	class:GenericStreamWrapper
GenericStreamWrapper	include/rapidjson/stream.h	/^class GenericStreamWrapper {$/;"	c
GenericStringBuffer	include/rapidjson/stringbuffer.h	/^    GenericStringBuffer(Allocator* allocator = 0, size_t capacity = kDefaultCapacity) : stack_(allocator, capacity) {}$/;"	f	class:GenericStringBuffer
GenericStringBuffer	include/rapidjson/stringbuffer.h	/^    GenericStringBuffer(GenericStringBuffer&& rhs) : stack_(std::move(rhs.stack_)) {}$/;"	f	class:GenericStringBuffer
GenericStringBuffer	include/rapidjson/stringbuffer.h	/^class GenericStringBuffer {$/;"	c
GenericStringRef	include/rapidjson/document.h	/^    GenericStringRef(const CharType* str, SizeType len)$/;"	f	struct:GenericStringRef
GenericStringRef	include/rapidjson/document.h	/^    GenericStringRef(const GenericStringRef& rhs) : s(rhs.s), length(rhs.length) {}$/;"	f	struct:GenericStringRef
GenericStringRef	include/rapidjson/document.h	/^    explicit GenericStringRef(const CharType* str)$/;"	f	struct:GenericStringRef
GenericStringRef	include/rapidjson/document.h	/^struct GenericStringRef {$/;"	s
GenericStringStream	include/rapidjson/stream.h	/^    GenericStringStream(const Ch *src) : src_(src), head_(src) {}$/;"	f	struct:GenericStringStream
GenericStringStream	include/rapidjson/stream.h	/^struct GenericStringStream {$/;"	s
GenericValue	include/rapidjson/document.h	/^    GenericValue(const Ch* s, SizeType length, Allocator& allocator) : data_() { SetStringRaw(StringRef(s, length), allocator); }$/;"	f	class:GenericValue
GenericValue	include/rapidjson/document.h	/^    GenericValue(const Ch*s, Allocator& allocator) : data_() { SetStringRaw(StringRef(s), allocator); }$/;"	f	class:GenericValue
GenericValue	include/rapidjson/document.h	/^    GenericValue(const GenericValue<Encoding,SourceAllocator>& rhs, Allocator& allocator, bool copyConstStrings = false) {$/;"	f	class:GenericValue
GenericValue	include/rapidjson/document.h	/^    GenericValue(const std::basic_string<Ch>& s, Allocator& allocator) : data_() { SetStringRaw(StringRef(s), allocator); }$/;"	f	class:GenericValue
GenericValue	include/rapidjson/document.h	/^class GenericValue {$/;"	c
Get	include/rapidjson/document.h	/^    T Get() const { return internal::TypeHelper<ValueType, T>::Get(*this); }$/;"	f	class:GenericValue
Get	include/rapidjson/document.h	/^    T Get() { return internal::TypeHelper<ValueType, T>::Get(*this); }$/;"	f	class:GenericValue
Get	include/rapidjson/document.h	/^    static ArrayType Get(ValueType& v) { return v.GetArray(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static ArrayType Get(const ValueType& v) { return v.GetArray(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static ObjectType Get(ValueType& v) { return v.GetObject(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static ObjectType Get(const ValueType& v) { return v.GetObject(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static StringType Get(const ValueType& v) { return StringType(v.GetString(), v.GetStringLength()); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static StringType Get(const ValueType& v) { return v.GetString(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static bool Get(const ValueType& v) { return v.GetBool(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static double Get(const ValueType& v) { return v.GetDouble(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static float Get(const ValueType& v) { return v.GetFloat(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static int Get(const ValueType& v) { return v.GetInt(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static int64_t Get(const ValueType& v) { return v.GetInt64(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static long Get(const ValueType& v) { return v.GetInt(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static uint64_t Get(const ValueType& v) { return v.GetUint64(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static unsigned Get(const ValueType& v) { return v.GetUint(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static unsigned long Get(const ValueType& v) { return v.GetUint(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/pointer.h	/^    ValueType* Get(ValueType& root, size_t* unresolvedTokenIndex = 0) const {$/;"	f	class:GenericPointer
Get	include/rapidjson/pointer.h	/^    const ValueType* Get(const ValueType& root, size_t* unresolvedTokenIndex = 0) const { $/;"	f	class:GenericPointer
GetAllocator	include/rapidjson/document.h	/^    Allocator& GetAllocator() {$/;"	f	class:GenericDocument
GetAllocator	include/rapidjson/internal/stack.h	/^    Allocator& GetAllocator() {$/;"	f	class:internal::Stack
GetAllocator	include/rapidjson/pointer.h	/^    Allocator& GetAllocator() { return *allocator_; }$/;"	f	class:GenericPointer
GetArray	include/rapidjson/document.h	/^    Array GetArray() { RAPIDJSON_ASSERT(IsArray()); return Array(*this); }$/;"	f	class:GenericValue
GetArray	include/rapidjson/document.h	/^    ConstArray GetArray() const { RAPIDJSON_ASSERT(IsArray()); return ConstArray(*this); }$/;"	f	class:GenericValue
GetBool	include/rapidjson/document.h	/^    bool GetBool() const { RAPIDJSON_ASSERT(IsBool()); return data_.f.flags == kTrueFlag; }$/;"	f	class:GenericValue
GetBuffer	include/rapidjson/memorybuffer.h	/^    const Ch* GetBuffer() const {$/;"	f	struct:GenericMemoryBuffer
GetCachedPower	include/rapidjson/internal/diyfp.h	/^inline DiyFp GetCachedPower(int e, int* K) {$/;"	f	namespace:internal
GetCachedPower10	include/rapidjson/internal/diyfp.h	/^inline DiyFp GetCachedPower10(int exp, int *outExp) {$/;"	f	namespace:internal
GetCachedPowerByIndex	include/rapidjson/internal/diyfp.h	/^inline DiyFp GetCachedPowerByIndex(size_t index) {$/;"	f	namespace:internal
GetCapacity	include/rapidjson/internal/stack.h	/^    size_t GetCapacity() const { return static_cast<size_t>(stackEnd_ - stack_); }$/;"	f	class:internal::Stack
GetColumn	include/rapidjson/cursorstreamwrapper.h	/^    size_t GetColumn() const { return col_; }$/;"	f	class:CursorStreamWrapper
GetCount	include/rapidjson/internal/biginteger.h	/^    size_t GetCount() const { return count_; }$/;"	f	class:internal::BigInteger
GetDigit	include/rapidjson/internal/biginteger.h	/^    Type GetDigit(size_t index) const { RAPIDJSON_ASSERT(index < count_); return digits_[index]; }$/;"	f	class:internal::BigInteger
GetDigitsLut	include/rapidjson/internal/itoa.h	/^inline const char* GetDigitsLut() {$/;"	f	namespace:internal
GetDouble	include/rapidjson/document.h	/^    double GetDouble() const {$/;"	f	class:GenericValue
GetElementsPointer	include/rapidjson/document.h	/^    RAPIDJSON_FORCEINLINE GenericValue* GetElementsPointer() const { return RAPIDJSON_GETPOINTER(GenericValue, data_.a.elements); }$/;"	f	class:GenericValue
GetError	include/rapidjson/schema.h	/^    ValueType& GetError() { return error_; }$/;"	f	class:GenericSchemaValidator
GetError	include/rapidjson/schema.h	/^    const ValueType& GetError() const { return error_; }$/;"	f	class:GenericSchemaValidator
GetError	include/rapidjson/schema.h	/^    const ValueType& GetError() const { return error_; }$/;"	f	class:SchemaValidatingReader
GetErrorOffset	include/rapidjson/document.h	/^    size_t GetErrorOffset() const { return parseResult_.Offset(); }$/;"	f	class:GenericDocument
GetErrorOffset	include/rapidjson/reader.h	/^    size_t GetErrorOffset() const { return parseResult_.Offset(); }$/;"	f	class:GenericReader
GetFloat	include/rapidjson/document.h	/^    float GetFloat() const {$/;"	f	class:GenericValue
GetHashCode	include/rapidjson/schema.h	/^    uint64_t GetHashCode() const {$/;"	f	class:internal::Hasher
GetHashCode	include/rapidjson/schema.h	/^    virtual uint64_t GetHashCode(void* hasher) {$/;"	f	class:GenericSchemaValidator
GetInt	include/rapidjson/document.h	/^    int GetInt() const          { RAPIDJSON_ASSERT(data_.f.flags & kIntFlag);   return data_.n.i.i;   }$/;"	f	class:GenericValue
GetInt64	include/rapidjson/document.h	/^    int64_t GetInt64() const    { RAPIDJSON_ASSERT(data_.f.flags & kInt64Flag); return data_.n.i64; }$/;"	f	class:GenericValue
GetInvalidDocumentPointer	include/rapidjson/schema.h	/^    PointerType GetInvalidDocumentPointer() const {$/;"	f	class:GenericSchemaValidator
GetInvalidDocumentPointer	include/rapidjson/schema.h	/^    const PointerType& GetInvalidDocumentPointer() const { return invalidDocumentPointer_; }$/;"	f	class:SchemaValidatingReader
GetInvalidSchemaKeyword	include/rapidjson/schema.h	/^    const Ch* GetInvalidSchemaKeyword() const { return invalidSchemaKeyword_; }$/;"	f	class:SchemaValidatingReader
GetInvalidSchemaKeyword	include/rapidjson/schema.h	/^    const Ch* GetInvalidSchemaKeyword() const {$/;"	f	class:GenericSchemaValidator
GetInvalidSchemaPointer	include/rapidjson/schema.h	/^    PointerType GetInvalidSchemaPointer() const {$/;"	f	class:GenericSchemaValidator
GetInvalidSchemaPointer	include/rapidjson/schema.h	/^    const PointerType& GetInvalidSchemaPointer() const { return invalidSchemaPointer_; }$/;"	f	class:SchemaValidatingReader
GetLength	include/rapidjson/document.h	/^        inline SizeType GetLength() const       { return  static_cast<SizeType>(MaxSize -  str[LenPos]); }$/;"	f	struct:GenericValue::ShortString
GetLength	include/rapidjson/stringbuffer.h	/^    size_t GetLength() const { return stack_.GetSize() \/ sizeof(Ch); }$/;"	f	class:GenericStringBuffer
GetLine	include/rapidjson/cursorstreamwrapper.h	/^    size_t GetLine() const { return line_; }$/;"	f	class:CursorStreamWrapper
GetMaxDecimalPlaces	include/rapidjson/writer.h	/^    int GetMaxDecimalPlaces() const {$/;"	f	class:Writer
GetMember	include/rapidjson/schema.h	/^    static const ValueType* GetMember(const ValueType& value, const ValueType& name) {$/;"	f	class:internal::Schema
GetMembersPointer	include/rapidjson/document.h	/^    RAPIDJSON_FORCEINLINE Member* GetMembersPointer() const { return RAPIDJSON_GETPOINTER(Member, data_.o.members); }$/;"	f	class:GenericValue
GetObject	include/rapidjson/document.h	/^    ConstObject GetObject() const { RAPIDJSON_ASSERT(IsObject()); return ConstObject(*this); }$/;"	f	class:GenericValue
GetObject	include/rapidjson/document.h	/^    Object GetObject() { RAPIDJSON_ASSERT(IsObject()); return Object(*this); }$/;"	f	class:GenericValue
GetParseError	include/rapidjson/document.h	/^    ParseErrorCode GetParseError() const { return parseResult_.Code(); }$/;"	f	class:GenericDocument
GetParseErrorCode	include/rapidjson/pointer.h	/^    PointerParseErrorCode GetParseErrorCode() const { return parseErrorCode_; }$/;"	f	class:GenericPointer
GetParseErrorCode	include/rapidjson/reader.h	/^    ParseErrorCode GetParseErrorCode() const { return parseResult_.Code(); }$/;"	f	class:GenericReader
GetParseErrorFunc	include/rapidjson/error/error.h	/^typedef const RAPIDJSON_ERROR_CHARTYPE* (*GetParseErrorFunc)(ParseErrorCode);$/;"	t
GetParseErrorOffset	include/rapidjson/pointer.h	/^    size_t GetParseErrorOffset() const { return parseErrorOffset_; }$/;"	f	class:GenericPointer
GetParseError_En	include/rapidjson/error/en.h	/^inline const RAPIDJSON_ERROR_CHARTYPE* GetParseError_En(ParseErrorCode parseErrorCode) {$/;"	f
GetParseResult	include/rapidjson/schema.h	/^    const ParseResult& GetParseResult() const { return parseResult_; }$/;"	f	class:SchemaValidatingReader
GetPointer	include/rapidjson/schema.h	/^    PointerType GetPointer(const SchemaType* schema) const {$/;"	f	class:GenericSchemaDocument
GetPointer	include/rapidjson/schema.h	/^    const PointerType& GetPointer() const {$/;"	f	class:internal::Schema
GetRange	include/rapidjson/encodings.h	/^    static unsigned char GetRange(unsigned char c) {$/;"	f	struct:UTF8
GetRange	include/rapidjson/internal/regex.h	/^    Range& GetRange(SizeType index) {$/;"	f	class:internal::GenericRegex
GetRange	include/rapidjson/internal/regex.h	/^    const Range& GetRange(SizeType index) const {$/;"	f	class:internal::GenericRegex
GetRoot	include/rapidjson/schema.h	/^    const SchemaType& GetRoot() const { return *root_; }$/;"	f	class:GenericSchemaDocument
GetSchema	include/rapidjson/schema.h	/^    const SchemaType* GetSchema(const PointerType& pointer) const {$/;"	f	class:GenericSchemaDocument
GetSize	include/rapidjson/internal/stack.h	/^    size_t GetSize() const { return static_cast<size_t>(stackTop_ - stack_); }$/;"	f	class:internal::Stack
GetSize	include/rapidjson/memorybuffer.h	/^    size_t GetSize() const { return stack_.GetSize(); }$/;"	f	struct:GenericMemoryBuffer
GetSize	include/rapidjson/stringbuffer.h	/^    size_t GetSize() const { return stack_.GetSize(); }$/;"	f	class:GenericStringBuffer
GetStackCapacity	include/rapidjson/document.h	/^    size_t GetStackCapacity() const { return stack_.GetCapacity(); }$/;"	f	class:GenericDocument
GetState	include/rapidjson/internal/regex.h	/^    State& GetState(SizeType index) {$/;"	f	class:internal::GenericRegex
GetState	include/rapidjson/internal/regex.h	/^    const State& GetState(SizeType index) const {$/;"	f	class:internal::GenericRegex
GetStateAllocator	include/rapidjson/schema.h	/^    StateAllocator& GetStateAllocator() {$/;"	f	class:GenericSchemaValidator
GetStateSetSize	include/rapidjson/internal/regex.h	/^    size_t GetStateSetSize() const {$/;"	f	class:internal::GenericRegexSearch
GetString	include/rapidjson/document.h	/^    const Ch* GetString() const { RAPIDJSON_ASSERT(IsString()); return (data_.f.flags & kInlineStrFlag) ? data_.ss.str : GetStringPointer(); }$/;"	f	class:GenericValue
GetString	include/rapidjson/stringbuffer.h	/^    const Ch* GetString() const {$/;"	f	class:GenericStringBuffer
GetStringLength	include/rapidjson/document.h	/^    SizeType GetStringLength() const { RAPIDJSON_ASSERT(IsString()); return ((data_.f.flags & kInlineStrFlag) ? (data_.ss.GetLength()) : data_.s.length); }$/;"	f	class:GenericValue
GetStringPointer	include/rapidjson/document.h	/^    RAPIDJSON_FORCEINLINE const Ch* GetStringPointer() const { return RAPIDJSON_GETPOINTER(Ch, data_.s.str); }$/;"	f	class:GenericValue
GetTokenCount	include/rapidjson/pointer.h	/^    size_t GetTokenCount() const { return tokenCount_; }$/;"	f	class:GenericPointer
GetTokens	include/rapidjson/pointer.h	/^    const Token* GetTokens() const { return tokens_; }$/;"	f	class:GenericPointer
GetType	include/rapidjson/document.h	/^    Type GetType()  const { return static_cast<Type>(data_.f.flags & kTypeMask); }$/;"	f	class:GenericValue
GetType	include/rapidjson/encodedstream.h	/^    UTFType GetType() const { return type_; }$/;"	f	class:AutoUTFInputStream
GetType	include/rapidjson/encodedstream.h	/^    UTFType GetType() const { return type_; }$/;"	f	class:AutoUTFOutputStream
GetType	include/rapidjson/stream.h	/^    UTFType GetType() const { return is_.GetType(); }$/;"	f	class:GenericStreamWrapper
GetTypeless	include/rapidjson/schema.h	/^    const SchemaType* GetTypeless() const { return typeless_; }$/;"	f	class:GenericSchemaDocument
GetURI	include/rapidjson/schema.h	/^    const SValue& GetURI() const {$/;"	f	class:internal::Schema
GetURI	include/rapidjson/schema.h	/^    const URIType& GetURI() const { return uri_; }$/;"	f	class:GenericSchemaDocument
GetUint	include/rapidjson/document.h	/^    unsigned GetUint() const    { RAPIDJSON_ASSERT(data_.f.flags & kUintFlag);  return data_.n.u.u;   }$/;"	f	class:GenericValue
GetUint64	include/rapidjson/document.h	/^    uint64_t GetUint64() const  { RAPIDJSON_ASSERT(data_.f.flags & kUint64Flag); return data_.n.u64; }$/;"	f	class:GenericValue
GetValueByPointer	include/rapidjson/pointer.h	/^const typename T::ValueType* GetValueByPointer(const T& root, const CharType(&source)[N], size_t* unresolvedTokenIndex = 0) {$/;"	f
GetValueByPointer	include/rapidjson/pointer.h	/^const typename T::ValueType* GetValueByPointer(const T& root, const GenericPointer<typename T::ValueType>& pointer, size_t* unresolvedTokenIndex = 0) {$/;"	f
GetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType* GetValueByPointer(T& root, const CharType (&source)[N], size_t* unresolvedTokenIndex = 0) {$/;"	f
GetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType* GetValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, size_t* unresolvedTokenIndex = 0) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^GetValueByPointerWithDefault(DocumentType& document, const CharType(&source)[N], T2 defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^GetValueByPointerWithDefault(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, T2 defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^GetValueByPointerWithDefault(T& root, const CharType(&source)[N], T2 defaultValue, typename T::AllocatorType& a) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^GetValueByPointerWithDefault(T& root, const GenericPointer<typename T::ValueType>& pointer, T2 defaultValue, typename T::AllocatorType& a) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& GetValueByPointerWithDefault(DocumentType& document, const CharType(&source)[N], const std::basic_string<typename DocumentType::Ch>& defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& GetValueByPointerWithDefault(DocumentType& document, const CharType(&source)[N], const typename DocumentType::Ch* defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& GetValueByPointerWithDefault(DocumentType& document, const CharType(&source)[N], const typename DocumentType::ValueType& defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& GetValueByPointerWithDefault(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, const std::basic_string<typename DocumentType::Ch>& defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& GetValueByPointerWithDefault(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, const typename DocumentType::Ch* defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& GetValueByPointerWithDefault(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, const typename DocumentType::ValueType& defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename T::ValueType& GetValueByPointerWithDefault(T& root, const CharType(&source)[N], const std::basic_string<typename T::Ch>& defaultValue, typename T::AllocatorType& a) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename T::ValueType& GetValueByPointerWithDefault(T& root, const CharType(&source)[N], const typename T::Ch* defaultValue, typename T::AllocatorType& a) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename T::ValueType& GetValueByPointerWithDefault(T& root, const CharType(&source)[N], const typename T::ValueType& defaultValue, typename T::AllocatorType& a) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename T::ValueType& GetValueByPointerWithDefault(T& root, const GenericPointer<typename T::ValueType>& pointer, const std::basic_string<typename T::Ch>& defaultValue, typename T::AllocatorType& a) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename T::ValueType& GetValueByPointerWithDefault(T& root, const GenericPointer<typename T::ValueType>& pointer, const typename T::Ch* defaultValue, typename T::AllocatorType& a) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename T::ValueType& GetValueByPointerWithDefault(T& root, const GenericPointer<typename T::ValueType>& pointer, const typename T::ValueType& defaultValue, typename T::AllocatorType& a) {$/;"	f
GetWithDefault	include/rapidjson/pointer.h	/^    GetWithDefault(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, T defaultValue) const {$/;"	f	class:GenericPointer
GetWithDefault	include/rapidjson/pointer.h	/^    GetWithDefault(ValueType& root, T defaultValue, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
GetWithDefault	include/rapidjson/pointer.h	/^    ValueType& GetWithDefault(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, const Ch* defaultValue) const {$/;"	f	class:GenericPointer
GetWithDefault	include/rapidjson/pointer.h	/^    ValueType& GetWithDefault(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, const ValueType& defaultValue) const {$/;"	f	class:GenericPointer
GetWithDefault	include/rapidjson/pointer.h	/^    ValueType& GetWithDefault(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, const std::basic_string<Ch>& defaultValue) const {$/;"	f	class:GenericPointer
GetWithDefault	include/rapidjson/pointer.h	/^    ValueType& GetWithDefault(ValueType& root, const Ch* defaultValue, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
GetWithDefault	include/rapidjson/pointer.h	/^    ValueType& GetWithDefault(ValueType& root, const ValueType& defaultValue, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
GetWithDefault	include/rapidjson/pointer.h	/^    ValueType& GetWithDefault(ValueType& root, const std::basic_string<Ch>& defaultValue, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
Grisu2	include/rapidjson/internal/dtoa.h	/^inline void Grisu2(double value, char* buffer, int* length, int* K) {$/;"	f	namespace:internal
GrisuRound	include/rapidjson/internal/dtoa.h	/^inline void GrisuRound(char* buffer, int len, uint64_t delta, uint64_t rest, uint64_t ten_kappa, uint64_t wp_w) {$/;"	f	namespace:internal
HTTP_STATUS_BAD_GATEWAY	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_BAD_GATEWAY,$/;"	e	enum:http_status
HTTP_STATUS_BAD_REQUEST	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_BAD_REQUEST					= 400,$/;"	e	enum:http_status
HTTP_STATUS_CONFLICT	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_CONFLICT,$/;"	e	enum:http_status
HTTP_STATUS_CONTINUE	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_CONTINUE					= 100,$/;"	e	enum:http_status
HTTP_STATUS_EXPECTATION_FAILED	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_EXPECTATION_FAILED,$/;"	e	enum:http_status
HTTP_STATUS_FORBIDDEN	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_FORBIDDEN,$/;"	e	enum:http_status
HTTP_STATUS_FOUND	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_FOUND					= 302,$/;"	e	enum:http_status
HTTP_STATUS_GATEWAY_TIMEOUT	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_GATEWAY_TIMEOUT,$/;"	e	enum:http_status
HTTP_STATUS_GONE	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_GONE,$/;"	e	enum:http_status
HTTP_STATUS_HTTP_VERSION_NOT_SUPPORTED	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_HTTP_VERSION_NOT_SUPPORTED,$/;"	e	enum:http_status
HTTP_STATUS_INTERNAL_SERVER_ERROR	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_INTERNAL_SERVER_ERROR			= 500,$/;"	e	enum:http_status
HTTP_STATUS_LENGTH_REQUIRED	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_LENGTH_REQUIRED,$/;"	e	enum:http_status
HTTP_STATUS_METHOD_NOT_ALLOWED	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_METHOD_NOT_ALLOWED,$/;"	e	enum:http_status
HTTP_STATUS_MOVED_PERMANENTLY	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_MOVED_PERMANENTLY				= 301,$/;"	e	enum:http_status
HTTP_STATUS_NOT_ACCEPTABLE	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_NOT_ACCEPTABLE,$/;"	e	enum:http_status
HTTP_STATUS_NOT_FOUND	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_NOT_FOUND,$/;"	e	enum:http_status
HTTP_STATUS_NOT_IMPLEMENTED	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_NOT_IMPLEMENTED,$/;"	e	enum:http_status
HTTP_STATUS_NOT_MODIFIED	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_NOT_MODIFIED				= 304,$/;"	e	enum:http_status
HTTP_STATUS_NO_CONTENT	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_NO_CONTENT					= 204,$/;"	e	enum:http_status
HTTP_STATUS_OK	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_OK						= 200,$/;"	e	enum:http_status
HTTP_STATUS_PARTIAL_CONTENT	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_PARTIAL_CONTENT				= 206,$/;"	e	enum:http_status
HTTP_STATUS_PAYMENT_REQUIRED	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_PAYMENT_REQUIRED,$/;"	e	enum:http_status
HTTP_STATUS_PRECONDITION_FAILED	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_PRECONDITION_FAILED,$/;"	e	enum:http_status
HTTP_STATUS_PROXY_AUTH_REQUIRED	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_PROXY_AUTH_REQUIRED,$/;"	e	enum:http_status
HTTP_STATUS_REQUEST_TIMEOUT	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_REQUEST_TIMEOUT,$/;"	e	enum:http_status
HTTP_STATUS_REQ_ENTITY_TOO_LARGE	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_REQ_ENTITY_TOO_LARGE,$/;"	e	enum:http_status
HTTP_STATUS_REQ_RANGE_NOT_SATISFIABLE	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_REQ_RANGE_NOT_SATISFIABLE,$/;"	e	enum:http_status
HTTP_STATUS_REQ_URI_TOO_LONG	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_REQ_URI_TOO_LONG,$/;"	e	enum:http_status
HTTP_STATUS_SEE_OTHER	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_SEE_OTHER					= 303,$/;"	e	enum:http_status
HTTP_STATUS_SERVICE_UNAVAILABLE	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_SERVICE_UNAVAILABLE,$/;"	e	enum:http_status
HTTP_STATUS_UNAUTHORIZED	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_UNAUTHORIZED,$/;"	e	enum:http_status
HTTP_STATUS_UNSUPPORTED_MEDIA_TYPE	include/libwebsockets/lws-http.h	/^	HTTP_STATUS_UNSUPPORTED_MEDIA_TYPE,$/;"	e	enum:http_status
HandleError	include/rapidjson/reader.h	/^    void HandleError(IterativeParsingState src, InputStream& is) {$/;"	f	class:GenericReader
HandleRefSchema	include/rapidjson/schema.h	/^    bool HandleRefSchema(const PointerType& source, const SchemaType** schema, const ValueType& v, const ValueType& document) {$/;"	f	class:GenericSchemaDocument
HasAllocator	include/rapidjson/internal/stack.h	/^    bool HasAllocator() const {$/;"	f	class:internal::Stack
HasBOM	include/rapidjson/encodedstream.h	/^    bool HasBOM() const { return hasBOM_; }$/;"	f	class:AutoUTFInputStream
HasBOM	include/rapidjson/stream.h	/^    bool HasBOM() const { return is_.HasBOM(); }$/;"	f	class:GenericStreamWrapper
HasMember	include/rapidjson/document.h	/^    bool HasMember(const Ch* name) const { return FindMember(name) != MemberEnd(); }$/;"	f	class:GenericValue
HasMember	include/rapidjson/document.h	/^    bool HasMember(const Ch* name) const { return value_.HasMember(name); }$/;"	f	class:GenericObject
HasMember	include/rapidjson/document.h	/^    bool HasMember(const GenericValue<Encoding, SourceAllocator>& name) const { return FindMember(name) != MemberEnd(); }$/;"	f	class:GenericValue
HasMember	include/rapidjson/document.h	/^    bool HasMember(const std::basic_string<Ch>& name) const { return FindMember(name) != MemberEnd(); }$/;"	f	class:GenericValue
HasMember	include/rapidjson/document.h	/^    bool HasMember(const std::basic_string<Ch>& name) const { return value_.HasMember(name); }$/;"	f	class:GenericObject
HasMember	include/rapidjson/document.h	/^    template <typename SourceAllocator> bool HasMember(const GenericValue<EncodingType, SourceAllocator>& name) const { return value_.HasMember(name); }$/;"	f	class:GenericObject
HasParseError	include/rapidjson/document.h	/^    bool HasParseError() const { return parseResult_.IsError(); }$/;"	f	class:GenericDocument
HasParseError	include/rapidjson/reader.h	/^    bool HasParseError() const { return parseResult_.IsError(); }$/;"	f	class:GenericReader
Hash	include/rapidjson/schema.h	/^    static uint64_t Hash(uint64_t h, uint64_t d) {$/;"	f	class:internal::Hasher
HashCodeArray	include/rapidjson/schema.h	/^    typedef GenericValue<UTF8<>, StateAllocator> HashCodeArray;$/;"	t	class:GenericSchemaValidator
Hasher	include/rapidjson/schema.h	/^    Hasher(Allocator* allocator = 0, size_t stackCapacity = kDefaultSize) : stack_(allocator, stackCapacity) {}$/;"	f	class:internal::Hasher
Hasher	include/rapidjson/schema.h	/^class Hasher {$/;"	c	namespace:internal
HasherType	include/rapidjson/schema.h	/^    typedef internal::Hasher<EncodingType, StateAllocator> HasherType;$/;"	t	class:GenericSchemaValidator
Host	include/rapidjson/internal/meta.h	/^    struct Host {$/;"	s	struct:internal::IsBaseOfImpl
I	include/rapidjson/document.h	/^        struct I {$/;"	s	union:GenericValue::Number
IGenericRemoteSchemaDocumentProvider	include/rapidjson/schema.h	/^class IGenericRemoteSchemaDocumentProvider {$/;"	c
INT16_C	include/rapidjson/msinttypes/stdint.h	277;"	d
INT16_C	include/rapidjson/msinttypes/stdint.h	55;"	d
INT16_C	include/rapidjson/msinttypes/stdint.h	66;"	d
INT16_MAX	include/rapidjson/msinttypes/stdint.h	181;"	d
INT16_MIN	include/rapidjson/msinttypes/stdint.h	180;"	d
INT32_C	include/rapidjson/msinttypes/stdint.h	278;"	d
INT32_C	include/rapidjson/msinttypes/stdint.h	56;"	d
INT32_C	include/rapidjson/msinttypes/stdint.h	67;"	d
INT32_MAX	include/rapidjson/msinttypes/stdint.h	183;"	d
INT32_MIN	include/rapidjson/msinttypes/stdint.h	182;"	d
INT64_C	include/rapidjson/msinttypes/stdint.h	279;"	d
INT64_C	include/rapidjson/msinttypes/stdint.h	57;"	d
INT64_C	include/rapidjson/msinttypes/stdint.h	68;"	d
INT64_MAX	include/rapidjson/msinttypes/stdint.h	185;"	d
INT64_MIN	include/rapidjson/msinttypes/stdint.h	184;"	d
INT8_C	include/rapidjson/msinttypes/stdint.h	276;"	d
INT8_C	include/rapidjson/msinttypes/stdint.h	54;"	d
INT8_C	include/rapidjson/msinttypes/stdint.h	65;"	d
INT8_MAX	include/rapidjson/msinttypes/stdint.h	179;"	d
INT8_MIN	include/rapidjson/msinttypes/stdint.h	178;"	d
INTMAX_C	include/rapidjson/msinttypes/stdint.h	290;"	d
INTMAX_C	include/rapidjson/msinttypes/stdint.h	79;"	d
INTMAX_MAX	include/rapidjson/msinttypes/stdint.h	232;"	d
INTMAX_MIN	include/rapidjson/msinttypes/stdint.h	231;"	d
INTPTR_MAX	include/rapidjson/msinttypes/stdint.h	222;"	d
INTPTR_MAX	include/rapidjson/msinttypes/stdint.h	226;"	d
INTPTR_MIN	include/rapidjson/msinttypes/stdint.h	221;"	d
INTPTR_MIN	include/rapidjson/msinttypes/stdint.h	225;"	d
INT_FAST16_MAX	include/rapidjson/msinttypes/stdint.h	209;"	d
INT_FAST16_MIN	include/rapidjson/msinttypes/stdint.h	208;"	d
INT_FAST32_MAX	include/rapidjson/msinttypes/stdint.h	211;"	d
INT_FAST32_MIN	include/rapidjson/msinttypes/stdint.h	210;"	d
INT_FAST64_MAX	include/rapidjson/msinttypes/stdint.h	213;"	d
INT_FAST64_MIN	include/rapidjson/msinttypes/stdint.h	212;"	d
INT_FAST8_MAX	include/rapidjson/msinttypes/stdint.h	207;"	d
INT_FAST8_MIN	include/rapidjson/msinttypes/stdint.h	206;"	d
INT_LEAST16_MAX	include/rapidjson/msinttypes/stdint.h	195;"	d
INT_LEAST16_MIN	include/rapidjson/msinttypes/stdint.h	194;"	d
INT_LEAST32_MAX	include/rapidjson/msinttypes/stdint.h	197;"	d
INT_LEAST32_MIN	include/rapidjson/msinttypes/stdint.h	196;"	d
INT_LEAST64_MAX	include/rapidjson/msinttypes/stdint.h	199;"	d
INT_LEAST64_MIN	include/rapidjson/msinttypes/stdint.h	198;"	d
INT_LEAST8_MAX	include/rapidjson/msinttypes/stdint.h	193;"	d
INT_LEAST8_MIN	include/rapidjson/msinttypes/stdint.h	192;"	d
IRemoteSchemaDocumentProvider	include/rapidjson/fwd.h	/^typedef IGenericRemoteSchemaDocumentProvider<SchemaDocument> IRemoteSchemaDocumentProvider;$/;"	t
IRemoteSchemaDocumentProvider	include/rapidjson/schema.h	/^typedef IGenericRemoteSchemaDocumentProvider<SchemaDocument> IRemoteSchemaDocumentProvider;$/;"	t
IRemoteSchemaDocumentProviderType	include/rapidjson/schema.h	/^    typedef IGenericRemoteSchemaDocumentProvider<GenericSchemaDocument> IRemoteSchemaDocumentProviderType;$/;"	t	class:GenericSchemaDocument
ISchemaStateFactory	include/rapidjson/schema.h	/^class ISchemaStateFactory {$/;"	c	namespace:internal
ISchemaValidator	include/rapidjson/schema.h	/^class ISchemaValidator {$/;"	c	namespace:internal
IStreamWrapper	include/rapidjson/istreamwrapper.h	/^typedef BasicIStreamWrapper<std::istream> IStreamWrapper;$/;"	t
IValidationErrorHandler	include/rapidjson/schema.h	/^class IValidationErrorHandler {$/;"	c	namespace:internal
ImplicitConcatenation	include/rapidjson/internal/regex.h	/^    void ImplicitConcatenation(Stack<Allocator>& atomCountStack, Stack<Allocator>& operatorStack) {$/;"	f	class:internal::GenericRegex
InsituStringStream	include/rapidjson/fwd.h	/^typedef GenericInsituStringStream<UTF8<char> > InsituStringStream;$/;"	t
InsituStringStream	include/rapidjson/stream.h	/^typedef GenericInsituStringStream<UTF8<> > InsituStringStream;$/;"	t
Int	include/rapidjson/document.h	/^    bool Int(int i) { new (stack_.template Push<ValueType>()) ValueType(i); return true; }$/;"	f	class:GenericDocument
Int	include/rapidjson/prettywriter.h	/^    bool Int(int i)             { PrettyPrefix(kNumberType); return Base::EndValue(Base::WriteInt(i)); }$/;"	f	class:PrettyWriter
Int	include/rapidjson/reader.h	/^    bool Int(int) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Int	include/rapidjson/schema.h	/^    bool Int(Context& context, int i) const {$/;"	f	class:internal::Schema
Int	include/rapidjson/schema.h	/^    bool Int(int i)         { RAPIDJSON_SCHEMA_HANDLE_VALUE_(Int,    (CurrentContext(), i), (i)); }$/;"	f	class:GenericSchemaValidator
Int	include/rapidjson/schema.h	/^    bool Int(int i) { Number n; n.u.i = i; n.d = static_cast<double>(i); return WriteNumber(n); }$/;"	f	class:internal::Hasher
Int	include/rapidjson/writer.h	/^    bool Int(int i)             { Prefix(kNumberType); return EndValue(WriteInt(i)); }$/;"	f	class:Writer
Int64	include/rapidjson/document.h	/^    bool Int64(int64_t i) { new (stack_.template Push<ValueType>()) ValueType(i); return true; }$/;"	f	class:GenericDocument
Int64	include/rapidjson/prettywriter.h	/^    bool Int64(int64_t i64)     { PrettyPrefix(kNumberType); return Base::EndValue(Base::WriteInt64(i64)); }$/;"	f	class:PrettyWriter
Int64	include/rapidjson/reader.h	/^    bool Int64(int64_t) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Int64	include/rapidjson/schema.h	/^    bool Int64(Context& context, int64_t i) const {$/;"	f	class:internal::Schema
Int64	include/rapidjson/schema.h	/^    bool Int64(int64_t i)   { RAPIDJSON_SCHEMA_HANDLE_VALUE_(Int64,  (CurrentContext(), i), (i)); }$/;"	f	class:GenericSchemaValidator
Int64	include/rapidjson/schema.h	/^    bool Int64(int64_t i) { Number n; n.u.i = i; n.d = static_cast<double>(i); return WriteNumber(n); }$/;"	f	class:internal::Hasher
Int64	include/rapidjson/writer.h	/^    bool Int64(int64_t i64)     { Prefix(kNumberType); return EndValue(WriteInt64(i64)); }$/;"	f	class:Writer
IntegerExponent	include/rapidjson/internal/ieee754.h	/^    int IntegerExponent() const { return (IsNormal() ? Exponent() : kDenormalExponent) - kSignificandSize; }$/;"	f	class:internal::Double
IntegerSignificand	include/rapidjson/internal/ieee754.h	/^    uint64_t IntegerSignificand() const { return IsNormal() ? Significand() | kHiddenBit : Significand(); }$/;"	f	class:internal::Double
Is	include/rapidjson/document.h	/^    bool Is() const { return internal::TypeHelper<ValueType, T>::Is(*this); }$/;"	f	class:GenericValue
Is	include/rapidjson/document.h	/^    static bool Is(const ValueType& v) { return v.IsArray(); }$/;"	f	struct:internal::TypeHelper
Is	include/rapidjson/document.h	/^    static bool Is(const ValueType& v) { return v.IsBool(); }$/;"	f	struct:internal::TypeHelper
Is	include/rapidjson/document.h	/^    static bool Is(const ValueType& v) { return v.IsDouble(); }$/;"	f	struct:internal::TypeHelper
Is	include/rapidjson/document.h	/^    static bool Is(const ValueType& v) { return v.IsFloat(); }$/;"	f	struct:internal::TypeHelper
Is	include/rapidjson/document.h	/^    static bool Is(const ValueType& v) { return v.IsInt(); }$/;"	f	struct:internal::TypeHelper
Is	include/rapidjson/document.h	/^    static bool Is(const ValueType& v) { return v.IsInt64(); }$/;"	f	struct:internal::TypeHelper
Is	include/rapidjson/document.h	/^    static bool Is(const ValueType& v) { return v.IsObject(); }$/;"	f	struct:internal::TypeHelper
Is	include/rapidjson/document.h	/^    static bool Is(const ValueType& v) { return v.IsString(); }$/;"	f	struct:internal::TypeHelper
Is	include/rapidjson/document.h	/^    static bool Is(const ValueType& v) { return v.IsUint(); }$/;"	f	struct:internal::TypeHelper
Is	include/rapidjson/document.h	/^    static bool Is(const ValueType& v) { return v.IsUint64(); }$/;"	f	struct:internal::TypeHelper
IsArray	include/rapidjson/document.h	/^    bool IsArray()  const { return data_.f.flags == kArrayFlag; }$/;"	f	class:GenericValue
IsBaseOf	include/rapidjson/internal/meta.h	/^template <typename B, typename D> struct IsBaseOf$/;"	s	namespace:internal
IsBaseOfImpl	include/rapidjson/internal/meta.h	/^template<typename B, typename D> struct IsBaseOfImpl {$/;"	s	namespace:internal
IsBool	include/rapidjson/document.h	/^    bool IsBool()   const { return (data_.f.flags & kBoolFlag) != 0; }$/;"	f	class:GenericValue
IsComplete	include/rapidjson/writer.h	/^    bool IsComplete() const {$/;"	f	class:Writer
IsConst	include/rapidjson/internal/meta.h	/^template <typename T> struct IsConst : FalseType {};$/;"	s	namespace:internal
IsConst	include/rapidjson/internal/meta.h	/^template <typename T> struct IsConst<const T> : TrueType {};$/;"	s	namespace:internal
IsDouble	include/rapidjson/document.h	/^    bool IsDouble() const { return (data_.f.flags & kDoubleFlag) != 0; }$/;"	f	class:GenericValue
IsError	include/rapidjson/error/error.h	/^    bool IsError() const { return code_ != kParseErrorNone; }$/;"	f	struct:ParseResult
IsFalse	include/rapidjson/document.h	/^    bool IsFalse()  const { return data_.f.flags == kFalseFlag; }$/;"	f	class:GenericValue
IsFloat	include/rapidjson/document.h	/^    bool IsFloat() const  {$/;"	f	class:GenericValue
IsGenericValue	include/rapidjson/document.h	/^template <typename T> struct IsGenericValue : IsGenericValueImpl<T>::Type {};$/;"	s	namespace:internal
IsGenericValueImpl	include/rapidjson/document.h	/^struct IsGenericValueImpl : FalseType {};$/;"	s	namespace:internal
IsGenericValueImpl	include/rapidjson/document.h	/^template <typename T> struct IsGenericValueImpl<T, typename Void<typename T::EncodingType>::Type, typename Void<typename T::AllocatorType>::Type>$/;"	s	namespace:internal
IsInf	include/rapidjson/internal/ieee754.h	/^    bool IsInf() const { return (u_ & kExponentMask) == kExponentMask && Significand() == 0; }$/;"	f	class:internal::Double
IsInt	include/rapidjson/document.h	/^    bool IsInt()    const { return (data_.f.flags & kIntFlag) != 0; }$/;"	f	class:GenericValue
IsInt64	include/rapidjson/document.h	/^    bool IsInt64()  const { return (data_.f.flags & kInt64Flag) != 0; }$/;"	f	class:GenericValue
IsIterativeParsingCompleteState	include/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE bool IsIterativeParsingCompleteState(IterativeParsingState s) const {$/;"	f	class:GenericReader
IsIterativeParsingDelimiterState	include/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE bool IsIterativeParsingDelimiterState(IterativeParsingState s) const {$/;"	f	class:GenericReader
IsLosslessDouble	include/rapidjson/document.h	/^    bool IsLosslessDouble() const {$/;"	f	class:GenericValue
IsLosslessFloat	include/rapidjson/document.h	/^    bool IsLosslessFloat() const {$/;"	f	class:GenericValue
IsMoreConst	include/rapidjson/internal/meta.h	/^struct IsMoreConst$/;"	s	namespace:internal
IsNan	include/rapidjson/internal/ieee754.h	/^    bool IsNan() const { return (u_ & kExponentMask) == kExponentMask && Significand() != 0; }$/;"	f	class:internal::Double
IsNanOrInf	include/rapidjson/internal/ieee754.h	/^    bool IsNanOrInf() const { return (u_ & kExponentMask) == kExponentMask; }$/;"	f	class:internal::Double
IsNormal	include/rapidjson/internal/ieee754.h	/^    bool IsNormal() const { return (u_ & kExponentMask) != 0 || Significand() == 0; }$/;"	f	class:internal::Double
IsNull	include/rapidjson/document.h	/^    bool IsNull()   const { return data_.f.flags == kNullFlag; }$/;"	f	class:GenericValue
IsNumber	include/rapidjson/document.h	/^    bool IsNumber() const { return (data_.f.flags & kNumberFlag) != 0; }$/;"	f	class:GenericValue
IsObject	include/rapidjson/document.h	/^    bool IsObject() const { return data_.f.flags == kObjectFlag; }$/;"	f	class:GenericValue
IsPatternMatch	include/rapidjson/schema.h	/^    static bool IsPatternMatch(const RegexType* pattern, const Ch *str, SizeType length) {$/;"	f	class:internal::Schema
IsPatternMatch	include/rapidjson/schema.h	/^    static bool IsPatternMatch(const RegexType* pattern, const Ch *str, SizeType) {$/;"	f	class:internal::Schema
IsPatternMatch	include/rapidjson/schema.h	/^    static bool IsPatternMatch(const RegexType*, const Ch *, SizeType) { return true; }$/;"	f	class:internal::Schema
IsPointer	include/rapidjson/internal/meta.h	/^template <typename T> struct IsPointer : FalseType {};$/;"	s	namespace:internal
IsPointer	include/rapidjson/internal/meta.h	/^template <typename T> struct IsPointer<T*> : TrueType {};$/;"	s	namespace:internal
IsSame	include/rapidjson/internal/meta.h	/^template <typename T, typename U> struct IsSame : FalseType {};$/;"	s	namespace:internal
IsSame	include/rapidjson/internal/meta.h	/^template <typename T> struct IsSame<T, T> : TrueType {};$/;"	s	namespace:internal
IsString	include/rapidjson/document.h	/^    bool IsString() const { return (data_.f.flags & kStringFlag) != 0; }$/;"	f	class:GenericValue
IsTrue	include/rapidjson/document.h	/^    bool IsTrue()   const { return data_.f.flags == kTrueFlag; }$/;"	f	class:GenericValue
IsUint	include/rapidjson/document.h	/^    bool IsUint()   const { return (data_.f.flags & kUintFlag) != 0; }$/;"	f	class:GenericValue
IsUint64	include/rapidjson/document.h	/^    bool IsUint64() const { return (data_.f.flags & kUint64Flag) != 0; }$/;"	f	class:GenericValue
IsValid	include/rapidjson/internal/regex.h	/^    bool IsValid() const {$/;"	f	class:internal::GenericRegex
IsValid	include/rapidjson/pointer.h	/^        bool IsValid() const { return valid_; }$/;"	f	class:GenericPointer::PercentDecodeStream
IsValid	include/rapidjson/pointer.h	/^    bool IsValid() const { return parseErrorCode_ == kPointerParseErrorNone; }$/;"	f	class:GenericPointer
IsValid	include/rapidjson/schema.h	/^    bool IsValid() const { return isValid_; }$/;"	f	class:SchemaValidatingReader
IsValid	include/rapidjson/schema.h	/^    bool IsValid() const { return stack_.GetSize() == sizeof(uint64_t); }$/;"	f	class:internal::Hasher
IsValid	include/rapidjson/schema.h	/^    virtual bool IsValid() const { return valid_; }$/;"	f	class:GenericSchemaValidator
IsZero	include/rapidjson/internal/biginteger.h	/^    bool IsZero() const { return count_ == 1 && digits_[0] == 0; }$/;"	f	class:internal::BigInteger
IsZero	include/rapidjson/internal/ieee754.h	/^    bool IsZero() const { return (u_ & (kExponentMask | kSignificandMask)) == 0; }$/;"	f	class:internal::Double
IterativeParse	include/rapidjson/reader.h	/^    ParseResult IterativeParse(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
IterativeParseComplete	include/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE bool IterativeParseComplete() const {$/;"	f	class:GenericReader
IterativeParseInit	include/rapidjson/reader.h	/^    void IterativeParseInit() {$/;"	f	class:GenericReader
IterativeParseNext	include/rapidjson/reader.h	/^    bool IterativeParseNext(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
IterativeParsingArrayFinishState	include/rapidjson/reader.h	/^        IterativeParsingArrayFinishState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingArrayInitialState	include/rapidjson/reader.h	/^        IterativeParsingArrayInitialState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingElementDelimiterState	include/rapidjson/reader.h	/^        IterativeParsingElementDelimiterState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingElementState	include/rapidjson/reader.h	/^        IterativeParsingElementState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingErrorState	include/rapidjson/reader.h	/^        IterativeParsingErrorState,      \/\/ sink states at top$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingFinishState	include/rapidjson/reader.h	/^        IterativeParsingFinishState = 0, \/\/ sink states at top$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingKeyValueDelimiterState	include/rapidjson/reader.h	/^        IterativeParsingKeyValueDelimiterState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingMemberDelimiterState	include/rapidjson/reader.h	/^        IterativeParsingMemberDelimiterState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingMemberKeyState	include/rapidjson/reader.h	/^        IterativeParsingMemberKeyState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingMemberValueState	include/rapidjson/reader.h	/^        IterativeParsingMemberValueState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingObjectFinishState	include/rapidjson/reader.h	/^        IterativeParsingObjectFinishState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingObjectInitialState	include/rapidjson/reader.h	/^        IterativeParsingObjectInitialState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingStartState	include/rapidjson/reader.h	/^        IterativeParsingStartState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingState	include/rapidjson/reader.h	/^    enum IterativeParsingState {$/;"	g	class:GenericReader
IterativeParsingValueState	include/rapidjson/reader.h	/^        IterativeParsingValueState,$/;"	e	enum:GenericReader::IterativeParsingState
Iterator	include/rapidjson/document.h	/^    typedef GenericMember<Encoding,Allocator>* Iterator;$/;"	t	struct:GenericMemberIterator
Iterator	include/rapidjson/document.h	/^    typedef GenericMemberIterator Iterator;$/;"	t	class:GenericMemberIterator
Iterator	include/rapidjson/document.h	/^    typedef const GenericMember<Encoding,Allocator>* Iterator;$/;"	t	struct:GenericMemberIterator
JANSSON_CONFIG_H	include/jansson_config.h	19;"	d
JANSSON_H	include/jansson.h	9;"	d
JANSSON_MAJOR_VERSION	include/jansson.h	23;"	d
JANSSON_MICRO_VERSION	include/jansson.h	25;"	d
JANSSON_MINOR_VERSION	include/jansson.h	24;"	d
JANSSON_THREAD_SAFE_REFCOUNT	include/jansson.h	39;"	d
JANSSON_VERSION	include/jansson.h	28;"	d
JANSSON_VERSION_HEX	include/jansson.h	32;"	d
JSON_ALLOW_NUL	include/jansson.h	315;"	d
JSON_ARRAY	include/jansson.h	/^    JSON_ARRAY,$/;"	e	enum:__anon1
JSON_COMPACT	include/jansson.h	331;"	d
JSON_DECODE_ANY	include/jansson.h	313;"	d
JSON_DECODE_INT_AS_REAL	include/jansson.h	314;"	d
JSON_DISABLE_EOF_CHECK	include/jansson.h	312;"	d
JSON_EMBED	include/jansson.h	338;"	d
JSON_ENCODE_ANY	include/jansson.h	335;"	d
JSON_ENSURE_ASCII	include/jansson.h	332;"	d
JSON_ERROR_SOURCE_LENGTH	include/jansson.h	149;"	d
JSON_ERROR_TEXT_LENGTH	include/jansson.h	148;"	d
JSON_ESCAPE_SLASH	include/jansson.h	336;"	d
JSON_FALSE	include/jansson.h	/^    JSON_FALSE,$/;"	e	enum:__anon1
JSON_HAVE_ATOMIC_BUILTINS	include/jansson_config.h	41;"	d
JSON_HAVE_LOCALECONV	include/jansson_config.h	37;"	d
JSON_HAVE_SYNC_BUILTINS	include/jansson_config.h	45;"	d
JSON_INDENT	include/jansson.h	330;"	d
JSON_INLINE	include/jansson_config.h	25;"	d
JSON_INLINE	include/jansson_config.h	27;"	d
JSON_INTEGER	include/jansson.h	/^    JSON_INTEGER,$/;"	e	enum:__anon1
JSON_INTEGER_FORMAT	include/jansson.h	63;"	d
JSON_INTEGER_FORMAT	include/jansson.h	65;"	d
JSON_INTEGER_FORMAT	include/jansson.h	69;"	d
JSON_INTEGER_IS_LONG_LONG	include/jansson_config.h	33;"	d
JSON_INTERNAL_DECREF	include/jansson.h	105;"	d
JSON_INTERNAL_DECREF	include/jansson.h	108;"	d
JSON_INTERNAL_DECREF	include/jansson.h	111;"	d
JSON_INTERNAL_INCREF	include/jansson.h	104;"	d
JSON_INTERNAL_INCREF	include/jansson.h	107;"	d
JSON_INTERNAL_INCREF	include/jansson.h	110;"	d
JSON_MAX_INDENT	include/jansson.h	329;"	d
JSON_NULL	include/jansson.h	/^    JSON_NULL$/;"	e	enum:__anon1
JSON_OBJECT	include/jansson.h	/^    JSON_OBJECT,$/;"	e	enum:__anon1
JSON_PARSER_MAX_DEPTH	include/jansson_config.h	49;"	d
JSON_PRESERVE_ORDER	include/jansson.h	334;"	d
JSON_REAL	include/jansson.h	/^    JSON_REAL,$/;"	e	enum:__anon1
JSON_REAL_PRECISION	include/jansson.h	337;"	d
JSON_REJECT_DUPLICATES	include/jansson.h	311;"	d
JSON_SORT_KEYS	include/jansson.h	333;"	d
JSON_STRICT	include/jansson.h	286;"	d
JSON_STRING	include/jansson.h	/^    JSON_STRING,$/;"	e	enum:__anon1
JSON_TRUE	include/jansson.h	/^    JSON_TRUE,$/;"	e	enum:__anon1
JSON_VALIDATE_ONLY	include/jansson.h	285;"	d
JWK_KEY	include/libwebsockets/lws-genrsa.h	/^	JWK_KEY,$/;"	e	enum:enum_jwk_tok
JWK_KEY_D	include/libwebsockets/lws-genrsa.h	/^	JWK_KEY_D,$/;"	e	enum:enum_jwk_tok
JWK_KEY_DP	include/libwebsockets/lws-genrsa.h	/^	JWK_KEY_DP,$/;"	e	enum:enum_jwk_tok
JWK_KEY_DQ	include/libwebsockets/lws-genrsa.h	/^	JWK_KEY_DQ,$/;"	e	enum:enum_jwk_tok
JWK_KEY_E	include/libwebsockets/lws-genrsa.h	/^	JWK_KEY_E,$/;"	e	enum:enum_jwk_tok
JWK_KEY_N	include/libwebsockets/lws-genrsa.h	/^	JWK_KEY_N,$/;"	e	enum:enum_jwk_tok
JWK_KEY_P	include/libwebsockets/lws-genrsa.h	/^	JWK_KEY_P,$/;"	e	enum:enum_jwk_tok
JWK_KEY_Q	include/libwebsockets/lws-genrsa.h	/^	JWK_KEY_Q,$/;"	e	enum:enum_jwk_tok
JWK_KEY_QI	include/libwebsockets/lws-genrsa.h	/^	JWK_KEY_QI,$/;"	e	enum:enum_jwk_tok
JWK_KTY	include/libwebsockets/lws-genrsa.h	/^	JWK_KTY, \/* also serves as count of real elements *\/$/;"	e	enum:enum_jwk_tok
Key	include/rapidjson/document.h	/^    bool Key(const Ch* str, SizeType length, bool copy) { return String(str, length, copy); }$/;"	f	class:GenericDocument
Key	include/rapidjson/prettywriter.h	/^    bool Key(const Ch* str) { return Key(str, internal::StrLen(str)); }$/;"	f	class:PrettyWriter
Key	include/rapidjson/prettywriter.h	/^    bool Key(const Ch* str, SizeType length, bool copy = false) { return String(str, length, copy); }$/;"	f	class:PrettyWriter
Key	include/rapidjson/prettywriter.h	/^    bool Key(const std::basic_string<Ch>& str) {$/;"	f	class:PrettyWriter
Key	include/rapidjson/reader.h	/^    bool Key(const Ch* str, SizeType len, bool copy) { return static_cast<Override&>(*this).String(str, len, copy); }$/;"	f	struct:BaseReaderHandler
Key	include/rapidjson/schema.h	/^    bool Key(Context& context, const Ch* str, SizeType len, bool) const {$/;"	f	class:internal::Schema
Key	include/rapidjson/schema.h	/^    bool Key(const Ch* str, SizeType len, bool copy) { return String(str, len, copy); }$/;"	f	class:internal::Hasher
Key	include/rapidjson/schema.h	/^    bool Key(const Ch* str, SizeType len, bool copy) {$/;"	f	class:GenericSchemaValidator
Key	include/rapidjson/writer.h	/^    bool Key(const Ch* const& str) { return Key(str, internal::StrLen(str)); }$/;"	f	class:Writer
Key	include/rapidjson/writer.h	/^    bool Key(const Ch* str, SizeType length, bool copy = false) { return String(str, length, copy); }$/;"	f	class:Writer
Key	include/rapidjson/writer.h	/^    bool Key(const std::basic_string<Ch>& str)$/;"	f	class:Writer
LCCSCF_ALLOW_EXPIRED	include/libwebsockets/lws-client.h	/^	LCCSCF_ALLOW_EXPIRED			= (1 << 3),$/;"	e	enum:lws_client_connect_ssl_connection_flags
LCCSCF_ALLOW_SELFSIGNED	include/libwebsockets/lws-client.h	/^	LCCSCF_ALLOW_SELFSIGNED			= (1 << 1),$/;"	e	enum:lws_client_connect_ssl_connection_flags
LCCSCF_PIPELINE	include/libwebsockets/lws-client.h	/^	LCCSCF_PIPELINE				= (1 << 16),$/;"	e	enum:lws_client_connect_ssl_connection_flags
LCCSCF_SKIP_SERVER_CERT_HOSTNAME_CHECK	include/libwebsockets/lws-client.h	/^	LCCSCF_SKIP_SERVER_CERT_HOSTNAME_CHECK	= (1 << 2),$/;"	e	enum:lws_client_connect_ssl_connection_flags
LCCSCF_USE_SSL	include/libwebsockets/lws-client.h	/^	LCCSCF_USE_SSL 				= (1 << 0),$/;"	e	enum:lws_client_connect_ssl_connection_flags
LCHS_CR1	include/libwebsockets/lws-cgi.h	/^	LCHS_CR1,$/;"	e	enum:lws_cgi_hdr_state
LCHS_CR2	include/libwebsockets/lws-cgi.h	/^	LCHS_CR2,$/;"	e	enum:lws_cgi_hdr_state
LCHS_HEADER	include/libwebsockets/lws-cgi.h	/^	LCHS_HEADER,$/;"	e	enum:lws_cgi_hdr_state
LCHS_LF1	include/libwebsockets/lws-cgi.h	/^	LCHS_LF1,$/;"	e	enum:lws_cgi_hdr_state
LCHS_LF2	include/libwebsockets/lws-cgi.h	/^	LCHS_LF2,$/;"	e	enum:lws_cgi_hdr_state
LCHS_SINGLE_0A	include/libwebsockets/lws-cgi.h	/^	LCHS_SINGLE_0A,$/;"	e	enum:lws_cgi_hdr_state
LEJPCB_ARRAY_END	include/libwebsockets/lws-lejp.h	/^	LEJPCB_ARRAY_END	= 15,$/;"	e	enum:lejp_callbacks
LEJPCB_ARRAY_START	include/libwebsockets/lws-lejp.h	/^	LEJPCB_ARRAY_START	= 14,$/;"	e	enum:lejp_callbacks
LEJPCB_COMPLETE	include/libwebsockets/lws-lejp.h	/^	LEJPCB_COMPLETE		= 3,$/;"	e	enum:lejp_callbacks
LEJPCB_CONSTRUCTED	include/libwebsockets/lws-lejp.h	/^	LEJPCB_CONSTRUCTED	= 0,$/;"	e	enum:lejp_callbacks
LEJPCB_DESTRUCTED	include/libwebsockets/lws-lejp.h	/^	LEJPCB_DESTRUCTED	= 1,$/;"	e	enum:lejp_callbacks
LEJPCB_FAILED	include/libwebsockets/lws-lejp.h	/^	LEJPCB_FAILED		= 4,$/;"	e	enum:lejp_callbacks
LEJPCB_OBJECT_END	include/libwebsockets/lws-lejp.h	/^	LEJPCB_OBJECT_END	= 17$/;"	e	enum:lejp_callbacks
LEJPCB_OBJECT_START	include/libwebsockets/lws-lejp.h	/^	LEJPCB_OBJECT_START	= 16,$/;"	e	enum:lejp_callbacks
LEJPCB_PAIR_NAME	include/libwebsockets/lws-lejp.h	/^	LEJPCB_PAIR_NAME	= 5,$/;"	e	enum:lejp_callbacks
LEJPCB_START	include/libwebsockets/lws-lejp.h	/^	LEJPCB_START		= 2,$/;"	e	enum:lejp_callbacks
LEJPCB_VAL_FALSE	include/libwebsockets/lws-lejp.h	/^	LEJPCB_VAL_FALSE	= LEJP_FLAG_CB_IS_VALUE | 7,$/;"	e	enum:lejp_callbacks
LEJPCB_VAL_NULL	include/libwebsockets/lws-lejp.h	/^	LEJPCB_VAL_NULL		= LEJP_FLAG_CB_IS_VALUE | 8,$/;"	e	enum:lejp_callbacks
LEJPCB_VAL_NUM_FLOAT	include/libwebsockets/lws-lejp.h	/^	LEJPCB_VAL_NUM_FLOAT	= LEJP_FLAG_CB_IS_VALUE | 10,$/;"	e	enum:lejp_callbacks
LEJPCB_VAL_NUM_INT	include/libwebsockets/lws-lejp.h	/^	LEJPCB_VAL_NUM_INT	= LEJP_FLAG_CB_IS_VALUE | 9,$/;"	e	enum:lejp_callbacks
LEJPCB_VAL_STR_CHUNK	include/libwebsockets/lws-lejp.h	/^	LEJPCB_VAL_STR_CHUNK	= LEJP_FLAG_CB_IS_VALUE | 12,$/;"	e	enum:lejp_callbacks
LEJPCB_VAL_STR_END	include/libwebsockets/lws-lejp.h	/^	LEJPCB_VAL_STR_END	= LEJP_FLAG_CB_IS_VALUE | 13,$/;"	e	enum:lejp_callbacks
LEJPCB_VAL_STR_START	include/libwebsockets/lws-lejp.h	/^	LEJPCB_VAL_STR_START	= 11, \/* notice handle separately *\/$/;"	e	enum:lejp_callbacks
LEJPCB_VAL_TRUE	include/libwebsockets/lws-lejp.h	/^	LEJPCB_VAL_TRUE		= LEJP_FLAG_CB_IS_VALUE | 6,$/;"	e	enum:lejp_callbacks
LEJP_CONTINUE	include/libwebsockets/lws-lejp.h	/^	LEJP_CONTINUE = -1,$/;"	e	enum:lejp_reasons
LEJP_FLAG_CB_IS_VALUE	include/libwebsockets/lws-lejp.h	84;"	d
LEJP_FLAG_WS_COMMENTLINE	include/libwebsockets/lws-lejp.h	37;"	d
LEJP_FLAG_WS_KEEP	include/libwebsockets/lws-lejp.h	36;"	d
LEJP_IDLE	include/libwebsockets/lws-lejp.h	/^	LEJP_IDLE = 0,$/;"	e	enum:lejp_states
LEJP_MAX_DEPTH	include/libwebsockets/lws-lejp.h	177;"	d
LEJP_MAX_INDEX_DEPTH	include/libwebsockets/lws-lejp.h	180;"	d
LEJP_MAX_PATH	include/libwebsockets/lws-lejp.h	183;"	d
LEJP_MEMBERS	include/libwebsockets/lws-lejp.h	/^	LEJP_MEMBERS = 1,$/;"	e	enum:lejp_states
LEJP_MP_ARRAY_END	include/libwebsockets/lws-lejp.h	/^	LEJP_MP_ARRAY_END = 15,$/;"	e	enum:lejp_states
LEJP_MP_COMMA_OR_END	include/libwebsockets/lws-lejp.h	/^	LEJP_MP_COMMA_OR_END = 14,$/;"	e	enum:lejp_states
LEJP_MP_DELIM	include/libwebsockets/lws-lejp.h	/^	LEJP_MP_DELIM = 9,$/;"	e	enum:lejp_states
LEJP_MP_STRING	include/libwebsockets/lws-lejp.h	/^	LEJP_MP_STRING = LEJP_FLAG_WS_KEEP | 3,$/;"	e	enum:lejp_states
LEJP_MP_STRING_ESC	include/libwebsockets/lws-lejp.h	/^	LEJP_MP_STRING_ESC = LEJP_FLAG_WS_KEEP | 4,$/;"	e	enum:lejp_states
LEJP_MP_STRING_ESC_U1	include/libwebsockets/lws-lejp.h	/^	LEJP_MP_STRING_ESC_U1 = LEJP_FLAG_WS_KEEP | 5,$/;"	e	enum:lejp_states
LEJP_MP_STRING_ESC_U2	include/libwebsockets/lws-lejp.h	/^	LEJP_MP_STRING_ESC_U2 = LEJP_FLAG_WS_KEEP | 6,$/;"	e	enum:lejp_states
LEJP_MP_STRING_ESC_U3	include/libwebsockets/lws-lejp.h	/^	LEJP_MP_STRING_ESC_U3 = LEJP_FLAG_WS_KEEP | 7,$/;"	e	enum:lejp_states
LEJP_MP_STRING_ESC_U4	include/libwebsockets/lws-lejp.h	/^	LEJP_MP_STRING_ESC_U4 = LEJP_FLAG_WS_KEEP | 8,$/;"	e	enum:lejp_states
LEJP_MP_VALUE	include/libwebsockets/lws-lejp.h	/^	LEJP_MP_VALUE = 10,$/;"	e	enum:lejp_states
LEJP_MP_VALUE_NUM_EXP	include/libwebsockets/lws-lejp.h	/^	LEJP_MP_VALUE_NUM_EXP = LEJP_FLAG_WS_KEEP | 12,$/;"	e	enum:lejp_states
LEJP_MP_VALUE_NUM_INT	include/libwebsockets/lws-lejp.h	/^	LEJP_MP_VALUE_NUM_INT = LEJP_FLAG_WS_KEEP | 11,$/;"	e	enum:lejp_states
LEJP_MP_VALUE_TOK	include/libwebsockets/lws-lejp.h	/^	LEJP_MP_VALUE_TOK = LEJP_FLAG_WS_KEEP | 13,$/;"	e	enum:lejp_states
LEJP_M_P	include/libwebsockets/lws-lejp.h	/^	LEJP_M_P = 2,$/;"	e	enum:lejp_states
LEJP_REJECT_CALLBACK	include/libwebsockets/lws-lejp.h	/^	LEJP_REJECT_CALLBACK = -23$/;"	e	enum:lejp_reasons
LEJP_REJECT_IDLE_NO_BRACE	include/libwebsockets/lws-lejp.h	/^	LEJP_REJECT_IDLE_NO_BRACE = -2,$/;"	e	enum:lejp_reasons
LEJP_REJECT_ILLEGAL_HEX	include/libwebsockets/lws-lejp.h	/^	LEJP_REJECT_ILLEGAL_HEX = -8,$/;"	e	enum:lejp_reasons
LEJP_REJECT_MEMBERS_NO_CLOSE	include/libwebsockets/lws-lejp.h	/^	LEJP_REJECT_MEMBERS_NO_CLOSE = -3,$/;"	e	enum:lejp_reasons
LEJP_REJECT_MP_ARRAY_END_MISSING	include/libwebsockets/lws-lejp.h	/^	LEJP_REJECT_MP_ARRAY_END_MISSING = -17,$/;"	e	enum:lejp_reasons
LEJP_REJECT_MP_C_OR_E_NEITHER	include/libwebsockets/lws-lejp.h	/^	LEJP_REJECT_MP_C_OR_E_NEITHER = -21,$/;"	e	enum:lejp_reasons
LEJP_REJECT_MP_C_OR_E_NOTARRAY	include/libwebsockets/lws-lejp.h	/^	LEJP_REJECT_MP_C_OR_E_NOTARRAY = -16,$/;"	e	enum:lejp_reasons
LEJP_REJECT_MP_C_OR_E_UNDERF	include/libwebsockets/lws-lejp.h	/^	LEJP_REJECT_MP_C_OR_E_UNDERF = -15,$/;"	e	enum:lejp_reasons
LEJP_REJECT_MP_DELIM_BAD_VALUE_START	include/libwebsockets/lws-lejp.h	/^	LEJP_REJECT_MP_DELIM_BAD_VALUE_START = -10,$/;"	e	enum:lejp_reasons
LEJP_REJECT_MP_DELIM_ISTACK	include/libwebsockets/lws-lejp.h	/^	LEJP_REJECT_MP_DELIM_ISTACK = -19,$/;"	e	enum:lejp_reasons
LEJP_REJECT_MP_DELIM_MISSING_COLON	include/libwebsockets/lws-lejp.h	/^	LEJP_REJECT_MP_DELIM_MISSING_COLON = -9,$/;"	e	enum:lejp_reasons
LEJP_REJECT_MP_ILLEGAL_CTRL	include/libwebsockets/lws-lejp.h	/^	LEJP_REJECT_MP_ILLEGAL_CTRL = -6,$/;"	e	enum:lejp_reasons
LEJP_REJECT_MP_NO_OPEN_QUOTE	include/libwebsockets/lws-lejp.h	/^	LEJP_REJECT_MP_NO_OPEN_QUOTE = -4,$/;"	e	enum:lejp_reasons
LEJP_REJECT_MP_STRING_ESC_ILLEGAL_ESC	include/libwebsockets/lws-lejp.h	/^	LEJP_REJECT_MP_STRING_ESC_ILLEGAL_ESC = -7,$/;"	e	enum:lejp_reasons
LEJP_REJECT_MP_STRING_UNDERRUN	include/libwebsockets/lws-lejp.h	/^	LEJP_REJECT_MP_STRING_UNDERRUN = -5,$/;"	e	enum:lejp_reasons
LEJP_REJECT_MP_VAL_NUM_EXP_BAD_EXP	include/libwebsockets/lws-lejp.h	/^	LEJP_REJECT_MP_VAL_NUM_EXP_BAD_EXP = -13,$/;"	e	enum:lejp_reasons
LEJP_REJECT_MP_VAL_NUM_FORMAT	include/libwebsockets/lws-lejp.h	/^	LEJP_REJECT_MP_VAL_NUM_FORMAT = -12,$/;"	e	enum:lejp_reasons
LEJP_REJECT_MP_VAL_NUM_INT_NO_FRAC	include/libwebsockets/lws-lejp.h	/^	LEJP_REJECT_MP_VAL_NUM_INT_NO_FRAC = -11,$/;"	e	enum:lejp_reasons
LEJP_REJECT_MP_VAL_TOK_UNKNOWN	include/libwebsockets/lws-lejp.h	/^	LEJP_REJECT_MP_VAL_TOK_UNKNOWN = -14,$/;"	e	enum:lejp_reasons
LEJP_REJECT_NUM_TOO_LONG	include/libwebsockets/lws-lejp.h	/^	LEJP_REJECT_NUM_TOO_LONG = -20,$/;"	e	enum:lejp_reasons
LEJP_REJECT_STACK_OVERFLOW	include/libwebsockets/lws-lejp.h	/^	LEJP_REJECT_STACK_OVERFLOW = -18,$/;"	e	enum:lejp_reasons
LEJP_REJECT_UNKNOWN	include/libwebsockets/lws-lejp.h	/^	LEJP_REJECT_UNKNOWN = -22,$/;"	e	enum:lejp_reasons
LEJP_SEEN_EXP	include/libwebsockets/lws-lejp.h	/^	LEJP_SEEN_EXP = (1 << 3)$/;"	e	enum:num_flags
LEJP_SEEN_MINUS	include/libwebsockets/lws-lejp.h	/^	LEJP_SEEN_MINUS = (1 << 0),$/;"	e	enum:num_flags
LEJP_SEEN_POINT	include/libwebsockets/lws-lejp.h	/^	LEJP_SEEN_POINT = (1 << 1),$/;"	e	enum:num_flags
LEJP_SEEN_POST_POINT	include/libwebsockets/lws-lejp.h	/^	LEJP_SEEN_POST_POINT = (1 << 2),$/;"	e	enum:num_flags
LEJP_STRING_CHUNK	include/libwebsockets/lws-lejp.h	187;"	d
LGSSMTP_CONNECTED	include/libwebsockets/lws-misc.h	/^	LGSSMTP_CONNECTED, \/**< tcp connection to MTA is connected *\/$/;"	e	enum:lwsgs_smtp_states
LGSSMTP_CONNECTING	include/libwebsockets/lws-misc.h	/^	LGSSMTP_CONNECTING, \/**< opening tcp connection to MTA *\/$/;"	e	enum:lwsgs_smtp_states
LGSSMTP_IDLE	include/libwebsockets/lws-misc.h	/^	LGSSMTP_IDLE, \/**< awaiting new email *\/$/;"	e	enum:lwsgs_smtp_states
LGSSMTP_SENT_BODY	include/libwebsockets/lws-misc.h	/^	LGSSMTP_SENT_BODY, \/**< sent the email body *\/$/;"	e	enum:lwsgs_smtp_states
LGSSMTP_SENT_DATA	include/libwebsockets/lws-misc.h	/^	LGSSMTP_SENT_DATA, \/**< sent DATA request *\/$/;"	e	enum:lwsgs_smtp_states
LGSSMTP_SENT_FROM	include/libwebsockets/lws-misc.h	/^	LGSSMTP_SENT_FROM, \/**< sent FROM *\/$/;"	e	enum:lwsgs_smtp_states
LGSSMTP_SENT_HELO	include/libwebsockets/lws-misc.h	/^	LGSSMTP_SENT_HELO, \/**< sent the HELO *\/$/;"	e	enum:lwsgs_smtp_states
LGSSMTP_SENT_QUIT	include/libwebsockets/lws-misc.h	/^	LGSSMTP_SENT_QUIT, \/**< sent the session quit *\/$/;"	e	enum:lwsgs_smtp_states
LGSSMTP_SENT_TO	include/libwebsockets/lws-misc.h	/^	LGSSMTP_SENT_TO, \/**< sent TO *\/$/;"	e	enum:lwsgs_smtp_states
LHCS_DUMP_HEADERS	include/libwebsockets/lws-cgi.h	/^	LHCS_DUMP_HEADERS,$/;"	e	enum:lws_cgi_hdr_state
LHCS_PAYLOAD	include/libwebsockets/lws-cgi.h	/^	LHCS_PAYLOAD,$/;"	e	enum:lws_cgi_hdr_state
LHCS_RESPONSE	include/libwebsockets/lws-cgi.h	/^	LHCS_RESPONSE,$/;"	e	enum:lws_cgi_hdr_state
LIBWEBSOCKET_H_3060898B846849FF9F88F5DB59B5950C	include/libwebsockets.h	25;"	d
LLL_CLIENT	include/libwebsockets/lws-logs.h	/^	LLL_CLIENT = 1 << 8,$/;"	e	enum:lws_log_levels
LLL_COUNT	include/libwebsockets/lws-logs.h	/^	LLL_COUNT = 12 \/* set to count of valid flags *\/$/;"	e	enum:lws_log_levels
LLL_DEBUG	include/libwebsockets/lws-logs.h	/^	LLL_DEBUG = 1 << 4,$/;"	e	enum:lws_log_levels
LLL_ERR	include/libwebsockets/lws-logs.h	/^	LLL_ERR = 1 << 0,$/;"	e	enum:lws_log_levels
LLL_EXT	include/libwebsockets/lws-logs.h	/^	LLL_EXT = 1 << 7,$/;"	e	enum:lws_log_levels
LLL_HEADER	include/libwebsockets/lws-logs.h	/^	LLL_HEADER = 1 << 6,$/;"	e	enum:lws_log_levels
LLL_INFO	include/libwebsockets/lws-logs.h	/^	LLL_INFO = 1 << 3,$/;"	e	enum:lws_log_levels
LLL_LATENCY	include/libwebsockets/lws-logs.h	/^	LLL_LATENCY = 1 << 9,$/;"	e	enum:lws_log_levels
LLL_NOTICE	include/libwebsockets/lws-logs.h	/^	LLL_NOTICE = 1 << 2,$/;"	e	enum:lws_log_levels
LLL_PARSER	include/libwebsockets/lws-logs.h	/^	LLL_PARSER = 1 << 5,$/;"	e	enum:lws_log_levels
LLL_THREAD	include/libwebsockets/lws-logs.h	/^	LLL_THREAD = 1 << 11,$/;"	e	enum:lws_log_levels
LLL_USER	include/libwebsockets/lws-logs.h	/^	LLL_USER = 1 << 10,$/;"	e	enum:lws_log_levels
LLL_WARN	include/libwebsockets/lws-logs.h	/^	LLL_WARN = 1 << 1,$/;"	e	enum:lws_log_levels
LWSAHH_CODE_MASK	include/libwebsockets/lws-http.h	430;"	d
LWSAHH_FLAG_NO_SERVER_NAME	include/libwebsockets/lws-http.h	431;"	d
LWSESP32_GENLED__CONN_AP	include/libwebsockets/lws-esp32.h	/^	LWSESP32_GENLED__CONN_AP,$/;"	e	enum:genled_state
LWSESP32_GENLED__GOT_IP	include/libwebsockets/lws-esp32.h	/^	LWSESP32_GENLED__GOT_IP,$/;"	e	enum:genled_state
LWSESP32_GENLED__INIT	include/libwebsockets/lws-esp32.h	/^	LWSESP32_GENLED__INIT,$/;"	e	enum:genled_state
LWSESP32_GENLED__LOST_NETWORK	include/libwebsockets/lws-esp32.h	/^	LWSESP32_GENLED__LOST_NETWORK,$/;"	e	enum:genled_state
LWSESP32_GENLED__NO_NETWORK	include/libwebsockets/lws-esp32.h	/^	LWSESP32_GENLED__NO_NETWORK,$/;"	e	enum:genled_state
LWSESP32_GENLED__OK	include/libwebsockets/lws-esp32.h	/^	LWSESP32_GENLED__OK,$/;"	e	enum:genled_state
LWSGSE_CREATED	include/libwebsockets/lws-plugin-generic-sessions.h	/^	LWSGSE_CREATED, \/**< a new user was created *\/$/;"	e	enum:lws_gs_event
LWSGSE_DELETED	include/libwebsockets/lws-plugin-generic-sessions.h	/^	LWSGSE_DELETED  \/**< an existing user was deleted *\/$/;"	e	enum:lws_gs_event
LWSGS_AUTH_ADMIN	include/libwebsockets/lws-plugin-generic-sessions.h	/^	LWSGS_AUTH_ADMIN = 2,	\/**< logged in as the admin user *\/$/;"	e	enum:lwsgs_auth_bits
LWSGS_AUTH_FORGOT_FLOW	include/libwebsockets/lws-plugin-generic-sessions.h	/^	LWSGS_AUTH_FORGOT_FLOW = 8,	\/**< he just completed "forgot password" flow *\/$/;"	e	enum:lwsgs_auth_bits
LWSGS_AUTH_LOGGED_IN	include/libwebsockets/lws-plugin-generic-sessions.h	/^	LWSGS_AUTH_LOGGED_IN = 1, \/**< user is logged in as somebody *\/$/;"	e	enum:lwsgs_auth_bits
LWSGS_AUTH_VERIFIED	include/libwebsockets/lws-plugin-generic-sessions.h	/^	LWSGS_AUTH_VERIFIED = 4,  \/**< user has verified his email *\/$/;"	e	enum:lwsgs_auth_bits
LWSGS_EMAIL_CONTENT_SIZE	include/libwebsockets/lws-plugin-generic-sessions.h	34;"	d
LWSMPRO_CALLBACK	include/libwebsockets/lws-context-vhost.h	/^	LWSMPRO_CALLBACK	= 6, \/**< hand by named protocol's callback *\/$/;"	e	enum:lws_mount_protocols
LWSMPRO_CGI	include/libwebsockets/lws-context-vhost.h	/^	LWSMPRO_CGI		= 3, \/**< pass to CGI to handle *\/$/;"	e	enum:lws_mount_protocols
LWSMPRO_FILE	include/libwebsockets/lws-context-vhost.h	/^	LWSMPRO_FILE		= 2, \/**< serve from filesystem directory *\/$/;"	e	enum:lws_mount_protocols
LWSMPRO_HTTP	include/libwebsockets/lws-context-vhost.h	/^	LWSMPRO_HTTP		= 0, \/**< http reverse proxy *\/$/;"	e	enum:lws_mount_protocols
LWSMPRO_HTTPS	include/libwebsockets/lws-context-vhost.h	/^	LWSMPRO_HTTPS		= 1, \/**< https reverse proxy *\/$/;"	e	enum:lws_mount_protocols
LWSMPRO_REDIR_HTTP	include/libwebsockets/lws-context-vhost.h	/^	LWSMPRO_REDIR_HTTP	= 4, \/**< redirect to http:\/\/ url *\/$/;"	e	enum:lws_mount_protocols
LWSMPRO_REDIR_HTTPS	include/libwebsockets/lws-context-vhost.h	/^	LWSMPRO_REDIR_HTTPS	= 5, \/**< redirect to https:\/\/ url *\/$/;"	e	enum:lws_mount_protocols
LWSSTATS_B_PARTIALS_ACCEPTED_PARTS	include/libwebsockets/lws-stats.h	/^	LWSSTATS_B_PARTIALS_ACCEPTED_PARTS, \/**< aggreate of size of accepted write data from new partials *\/$/;"	e	enum:__anon4
LWSSTATS_B_READ	include/libwebsockets/lws-stats.h	/^	LWSSTATS_B_READ, \/**< aggregate bytes read *\/$/;"	e	enum:__anon4
LWSSTATS_B_WRITE	include/libwebsockets/lws-stats.h	/^	LWSSTATS_B_WRITE, \/**< aggregate bytes written *\/$/;"	e	enum:__anon4
LWSSTATS_C_API_CLOSE	include/libwebsockets/lws-stats.h	/^	LWSSTATS_C_API_CLOSE, \/**< count calls to close api *\/$/;"	e	enum:__anon4
LWSSTATS_C_API_LWS_WRITE	include/libwebsockets/lws-stats.h	/^	LWSSTATS_C_API_LWS_WRITE, \/**< count calls to lws_write API *\/$/;"	e	enum:__anon4
LWSSTATS_C_API_READ	include/libwebsockets/lws-stats.h	/^	LWSSTATS_C_API_READ, \/**< count calls to read from socket api *\/$/;"	e	enum:__anon4
LWSSTATS_C_API_WRITE	include/libwebsockets/lws-stats.h	/^	LWSSTATS_C_API_WRITE, \/**< count calls to write API *\/$/;"	e	enum:__anon4
LWSSTATS_C_CONNECTIONS	include/libwebsockets/lws-stats.h	/^	LWSSTATS_C_CONNECTIONS, \/**< count incoming connections *\/$/;"	e	enum:__anon4
LWSSTATS_C_PEER_LIMIT_AH_DENIED	include/libwebsockets/lws-stats.h	/^	LWSSTATS_C_PEER_LIMIT_AH_DENIED, \/**< number of times we would have given an ah but for the peer limit *\/$/;"	e	enum:__anon4
LWSSTATS_C_PEER_LIMIT_WSI_DENIED	include/libwebsockets/lws-stats.h	/^	LWSSTATS_C_PEER_LIMIT_WSI_DENIED, \/**< number of times we would have given a wsi but for the peer limit *\/$/;"	e	enum:__anon4
LWSSTATS_C_SERVICE_ENTRY	include/libwebsockets/lws-stats.h	/^	LWSSTATS_C_SERVICE_ENTRY, \/**< count of entries to lws service loop *\/$/;"	e	enum:__anon4
LWSSTATS_C_SSL_CONNECTIONS_ACCEPTED	include/libwebsockets/lws-stats.h	/^	LWSSTATS_C_SSL_CONNECTIONS_ACCEPTED, \/**< count of accepted SSL connections *\/$/;"	e	enum:__anon4
LWSSTATS_C_SSL_CONNECTIONS_ACCEPT_SPIN	include/libwebsockets/lws-stats.h	/^	LWSSTATS_C_SSL_CONNECTIONS_ACCEPT_SPIN, \/**< count of SSL_accept() attempts *\/$/;"	e	enum:__anon4
LWSSTATS_C_SSL_CONNECTIONS_FAILED	include/libwebsockets/lws-stats.h	/^	LWSSTATS_C_SSL_CONNECTIONS_FAILED, \/**< count of failed SSL connections *\/$/;"	e	enum:__anon4
LWSSTATS_C_SSL_CONNS_HAD_RX	include/libwebsockets/lws-stats.h	/^	LWSSTATS_C_SSL_CONNS_HAD_RX, \/**< count of accepted SSL conns that have had some RX *\/$/;"	e	enum:__anon4
LWSSTATS_C_TIMEOUTS	include/libwebsockets/lws-stats.h	/^	LWSSTATS_C_TIMEOUTS, \/**< count of timed-out connections *\/$/;"	e	enum:__anon4
LWSSTATS_C_WRITEABLE_CB	include/libwebsockets/lws-stats.h	/^	LWSSTATS_C_WRITEABLE_CB, \/**< count of writable callbacks *\/$/;"	e	enum:__anon4
LWSSTATS_C_WRITEABLE_CB_EFF_REQ	include/libwebsockets/lws-stats.h	/^	LWSSTATS_C_WRITEABLE_CB_EFF_REQ, \/**< count of effective writable callback requests *\/$/;"	e	enum:__anon4
LWSSTATS_C_WRITEABLE_CB_REQ	include/libwebsockets/lws-stats.h	/^	LWSSTATS_C_WRITEABLE_CB_REQ, \/**< count of writable callback requests *\/$/;"	e	enum:__anon4
LWSSTATS_C_WRITE_PARTIALS	include/libwebsockets/lws-stats.h	/^	LWSSTATS_C_WRITE_PARTIALS, \/**< count of partial writes *\/$/;"	e	enum:__anon4
LWSSTATS_MS_SSL_CONNECTIONS_ACCEPTED_DELAY	include/libwebsockets/lws-stats.h	/^	LWSSTATS_MS_SSL_CONNECTIONS_ACCEPTED_DELAY, \/**< aggregate delay in accepting connection *\/$/;"	e	enum:__anon4
LWSSTATS_MS_SSL_RX_DELAY	include/libwebsockets/lws-stats.h	/^	LWSSTATS_MS_SSL_RX_DELAY, \/**< aggregate delay between ssl accept complete and first RX *\/$/;"	e	enum:__anon4
LWSSTATS_MS_WORST_WRITABLE_DELAY	include/libwebsockets/lws-stats.h	/^	LWSSTATS_MS_WORST_WRITABLE_DELAY, \/**< single worst delay between asking for writable and getting cb *\/$/;"	e	enum:__anon4
LWSSTATS_MS_WRITABLE_DELAY	include/libwebsockets/lws-stats.h	/^	LWSSTATS_MS_WRITABLE_DELAY, \/**< aggregate delay between asking for writable and getting cb *\/$/;"	e	enum:__anon4
LWSSTATS_SIZE	include/libwebsockets/lws-stats.h	/^	LWSSTATS_SIZE$/;"	e	enum:__anon4
LWS_ADOPT_ALLOW_SSL	include/libwebsockets/lws-adopt.h	/^	LWS_ADOPT_ALLOW_SSL = 4,	\/* flag: if set requires LWS_ADOPT_SOCKET *\/$/;"	e	enum:__anon7
LWS_ADOPT_FLAG_UDP	include/libwebsockets/lws-adopt.h	/^	LWS_ADOPT_FLAG_UDP = 16,	\/* flag: socket is UDP *\/$/;"	e	enum:__anon7
LWS_ADOPT_HTTP	include/libwebsockets/lws-adopt.h	/^	LWS_ADOPT_HTTP = 1,		\/* flag: absent implies RAW *\/$/;"	e	enum:__anon7
LWS_ADOPT_RAW_FILE_DESC	include/libwebsockets/lws-adopt.h	/^	LWS_ADOPT_RAW_FILE_DESC = 0,	\/* convenience constant *\/$/;"	e	enum:__anon7
LWS_ADOPT_RAW_SOCKET_UDP	include/libwebsockets/lws-adopt.h	/^	LWS_ADOPT_RAW_SOCKET_UDP = LWS_ADOPT_SOCKET | LWS_ADOPT_FLAG_UDP,$/;"	e	enum:__anon7
LWS_ADOPT_SOCKET	include/libwebsockets/lws-adopt.h	/^	LWS_ADOPT_SOCKET = 2,		\/* flag: absent implies file descr *\/$/;"	e	enum:__anon7
LWS_ARRAY_SIZE	include/libwebsockets/lws-lejp.h	34;"	d
LWS_BUILD_HASH	include/lws_config.h	43;"	d
LWS_CALLBACK_ADD_HEADERS	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_ADD_HEADERS				= 53,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_ADD_POLL_FD	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_ADD_POLL_FD				= 32,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CGI	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CGI					= 40,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CGI_PROCESS_ATTACH	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CGI_PROCESS_ATTACH				= 70,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CGI_STDIN_COMPLETED	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CGI_STDIN_COMPLETED			= 43,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CGI_STDIN_DATA	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CGI_STDIN_DATA				= 42,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CGI_TERMINATED	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CGI_TERMINATED				= 41,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CHANGE_MODE_POLL_FD	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CHANGE_MODE_POLL_FD			= 34,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CHECK_ACCESS_RIGHTS	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CHECK_ACCESS_RIGHTS			= 51,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CHILD_CLOSING	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CHILD_CLOSING				= 69,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CLIENT_APPEND_HANDSHAKE_HEADER	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CLIENT_APPEND_HANDSHAKE_HEADER		= 24,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CLIENT_CLOSED	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CLIENT_CLOSED				= 75,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CLIENT_CONFIRM_EXTENSION_SUPPORTED	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CLIENT_CONFIRM_EXTENSION_SUPPORTED		= 26,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CLIENT_CONNECTION_ERROR	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CLIENT_CONNECTION_ERROR			=  1,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CLIENT_ESTABLISHED	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CLIENT_ESTABLISHED				=  3,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CLIENT_FILTER_PRE_ESTABLISH	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CLIENT_FILTER_PRE_ESTABLISH		=  2,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CLIENT_HTTP_BIND_PROTOCOL	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CLIENT_HTTP_BIND_PROTOCOL			= 75,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CLIENT_HTTP_DROP_PROTOCOL	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CLIENT_HTTP_DROP_PROTOCOL			= 76,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CLIENT_HTTP_WRITEABLE	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CLIENT_HTTP_WRITEABLE			= 57,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CLIENT_RECEIVE	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CLIENT_RECEIVE				=  8,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CLIENT_RECEIVE_PONG	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CLIENT_RECEIVE_PONG			=  9,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CLIENT_WRITEABLE	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CLIENT_WRITEABLE				= 10,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CLOSED	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CLOSED					=  4,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CLOSED_CLIENT_HTTP	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CLOSED_CLIENT_HTTP				= 45,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CLOSED_HTTP	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CLOSED_HTTP				=  5,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_COMPLETED_CLIENT_HTTP	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_COMPLETED_CLIENT_HTTP			= 47,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_CONFIRM_EXTENSION_OKAY	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_CONFIRM_EXTENSION_OKAY			= 25,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_DEL_POLL_FD	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_DEL_POLL_FD				= 33,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_ESTABLISHED	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_ESTABLISHED				=  0,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_ESTABLISHED_CLIENT_HTTP	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_ESTABLISHED_CLIENT_HTTP			= 44,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_EVENT_WAIT_CANCELLED	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_EVENT_WAIT_CANCELLED			= 71,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_FILTER_HTTP_CONNECTION	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_FILTER_HTTP_CONNECTION			= 18,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_FILTER_NETWORK_CONNECTION	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_FILTER_NETWORK_CONNECTION			= 17,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_FILTER_PROTOCOL_CONNECTION	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_FILTER_PROTOCOL_CONNECTION			= 20,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_GET_THREAD_ID	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_GET_THREAD_ID				= 31,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_GS_EVENT	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_GS_EVENT					= 55,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_HTTP	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_HTTP					= 12,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_HTTP_BIND_PROTOCOL	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_HTTP_BIND_PROTOCOL				= 49,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_HTTP_BODY	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_HTTP_BODY					= 13,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_HTTP_BODY_COMPLETION	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_HTTP_BODY_COMPLETION			= 14,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_HTTP_DROP_PROTOCOL	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_HTTP_DROP_PROTOCOL				= 50,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_HTTP_FILE_COMPLETION	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_HTTP_FILE_COMPLETION			= 15,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_HTTP_PMO	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_HTTP_PMO					= 56,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_HTTP_WRITEABLE	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_HTTP_WRITEABLE				= 16,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_LOCK_POLL	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_LOCK_POLL					= 35,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_OPENSSL_CONTEXT_REQUIRES_PRIVATE_KEY	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_OPENSSL_CONTEXT_REQUIRES_PRIVATE_KEY	= 37,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_OPENSSL_LOAD_EXTRA_CLIENT_VERIFY_CERTS	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_OPENSSL_LOAD_EXTRA_CLIENT_VERIFY_CERTS	= 21,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_OPENSSL_LOAD_EXTRA_SERVER_VERIFY_CERTS	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_OPENSSL_LOAD_EXTRA_SERVER_VERIFY_CERTS	= 22,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_OPENSSL_PERFORM_CLIENT_CERT_VERIFICATION	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_OPENSSL_PERFORM_CLIENT_CERT_VERIFICATION	= 23,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_OPENSSL_PERFORM_SERVER_CERT_VERIFICATION	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_OPENSSL_PERFORM_SERVER_CERT_VERIFICATION = 58,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_PROCESS_HTML	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_PROCESS_HTML				= 52,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_PROTOCOL_DESTROY	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_PROTOCOL_DESTROY				= 28,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_PROTOCOL_INIT	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_PROTOCOL_INIT				= 27,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_RAW_ADOPT	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_RAW_ADOPT					= 62,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_RAW_ADOPT_FILE	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_RAW_ADOPT_FILE				= 63,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_RAW_CLOSE	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_RAW_CLOSE					= 60,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_RAW_CLOSE_FILE	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_RAW_CLOSE_FILE				= 66,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_RAW_FILE_BIND_PROTOCOL	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_RAW_FILE_BIND_PROTOCOL			= 83,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_RAW_FILE_DROP_PROTOCOL	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_RAW_FILE_DROP_PROTOCOL			= 84,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_RAW_RX	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_RAW_RX					= 59,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_RAW_RX_FILE	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_RAW_RX_FILE				= 64,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_RAW_SKT_BIND_PROTOCOL	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_RAW_SKT_BIND_PROTOCOL			= 81,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_RAW_SKT_DROP_PROTOCOL	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_RAW_SKT_DROP_PROTOCOL			= 82,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_RAW_WRITEABLE	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_RAW_WRITEABLE				= 61,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_RAW_WRITEABLE_FILE	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_RAW_WRITEABLE_FILE				= 65,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_RECEIVE	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_RECEIVE					=  6,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_RECEIVE_CLIENT_HTTP	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_RECEIVE_CLIENT_HTTP			= 46,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_RECEIVE_CLIENT_HTTP_READ	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_RECEIVE_CLIENT_HTTP_READ			= 48,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_RECEIVE_PONG	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_RECEIVE_PONG				=  7,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_SERVER_NEW_CLIENT_INSTANTIATED	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_SERVER_NEW_CLIENT_INSTANTIATED		= 19,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_SERVER_WRITEABLE	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_SERVER_WRITEABLE				= 11,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_SESSION_INFO	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_SESSION_INFO				= 54,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_SSL_INFO	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_SSL_INFO					= 67,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_TIMER	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_TIMER					= 73,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_UNLOCK_POLL	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_UNLOCK_POLL				= 36,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_USER	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_USER = 1000,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_VHOST_CERT_AGING	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_VHOST_CERT_AGING				= 72,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_VHOST_CERT_UPDATE	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_VHOST_CERT_UPDATE				= 74,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_WSI_CREATE	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_WSI_CREATE					= 29,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_WSI_DESTROY	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_WSI_DESTROY				= 30,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_WS_CLIENT_BIND_PROTOCOL	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_WS_CLIENT_BIND_PROTOCOL			= 79,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_WS_CLIENT_DROP_PROTOCOL	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_WS_CLIENT_DROP_PROTOCOL			= 80,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_WS_EXT_DEFAULTS	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_WS_EXT_DEFAULTS				= 39,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_WS_PEER_INITIATED_CLOSE	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_WS_PEER_INITIATED_CLOSE			= 38,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_WS_SERVER_BIND_PROTOCOL	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_WS_SERVER_BIND_PROTOCOL			= 77,$/;"	e	enum:lws_callback_reasons
LWS_CALLBACK_WS_SERVER_DROP_PROTOCOL	include/libwebsockets/lws-callbacks.h	/^	LWS_CALLBACK_WS_SERVER_DROP_PROTOCOL			= 78,$/;"	e	enum:lws_callback_reasons
LWS_CAUDP_BIND	include/libwebsockets/lws-adopt.h	167;"	d
LWS_CB_REASON_AUX_BF__CGI	include/libwebsockets/lws-callbacks.h	787;"	d
LWS_CB_REASON_AUX_BF__CGI_CHUNK_END	include/libwebsockets/lws-callbacks.h	789;"	d
LWS_CB_REASON_AUX_BF__CGI_HEADERS	include/libwebsockets/lws-callbacks.h	790;"	d
LWS_CB_REASON_AUX_BF__PROXY	include/libwebsockets/lws-callbacks.h	788;"	d
LWS_CB_REASON_AUX_BF__PROXY_HEADERS	include/libwebsockets/lws-callbacks.h	792;"	d
LWS_CB_REASON_AUX_BF__PROXY_TRANS_END	include/libwebsockets/lws-callbacks.h	791;"	d
LWS_CLOSE_STATUS_ABNORMAL_CLOSE	include/libwebsockets/lws-ws-close.h	/^	LWS_CLOSE_STATUS_ABNORMAL_CLOSE				= 1006,$/;"	e	enum:lws_close_status
LWS_CLOSE_STATUS_CLIENT_TRANSACTION_DONE	include/libwebsockets/lws-ws-close.h	/^	LWS_CLOSE_STATUS_CLIENT_TRANSACTION_DONE		= 2000,$/;"	e	enum:lws_close_status
LWS_CLOSE_STATUS_EXTENSION_REQUIRED	include/libwebsockets/lws-ws-close.h	/^	LWS_CLOSE_STATUS_EXTENSION_REQUIRED			= 1010,$/;"	e	enum:lws_close_status
LWS_CLOSE_STATUS_GOINGAWAY	include/libwebsockets/lws-ws-close.h	/^	LWS_CLOSE_STATUS_GOINGAWAY				= 1001,$/;"	e	enum:lws_close_status
LWS_CLOSE_STATUS_INVALID_PAYLOAD	include/libwebsockets/lws-ws-close.h	/^	LWS_CLOSE_STATUS_INVALID_PAYLOAD			= 1007,$/;"	e	enum:lws_close_status
LWS_CLOSE_STATUS_MESSAGE_TOO_LARGE	include/libwebsockets/lws-ws-close.h	/^	LWS_CLOSE_STATUS_MESSAGE_TOO_LARGE			= 1009,$/;"	e	enum:lws_close_status
LWS_CLOSE_STATUS_NORMAL	include/libwebsockets/lws-ws-close.h	/^	LWS_CLOSE_STATUS_NORMAL					= 1000,$/;"	e	enum:lws_close_status
LWS_CLOSE_STATUS_NOSTATUS	include/libwebsockets/lws-ws-close.h	/^	LWS_CLOSE_STATUS_NOSTATUS				=    0,$/;"	e	enum:lws_close_status
LWS_CLOSE_STATUS_NOSTATUS_CONTEXT_DESTROY	include/libwebsockets/lws-ws-close.h	/^	LWS_CLOSE_STATUS_NOSTATUS_CONTEXT_DESTROY		= 9999,$/;"	e	enum:lws_close_status
LWS_CLOSE_STATUS_NO_STATUS	include/libwebsockets/lws-ws-close.h	/^	LWS_CLOSE_STATUS_NO_STATUS				= 1005,$/;"	e	enum:lws_close_status
LWS_CLOSE_STATUS_POLICY_VIOLATION	include/libwebsockets/lws-ws-close.h	/^	LWS_CLOSE_STATUS_POLICY_VIOLATION			= 1008,$/;"	e	enum:lws_close_status
LWS_CLOSE_STATUS_PROTOCOL_ERR	include/libwebsockets/lws-ws-close.h	/^	LWS_CLOSE_STATUS_PROTOCOL_ERR				= 1002,$/;"	e	enum:lws_close_status
LWS_CLOSE_STATUS_RESERVED	include/libwebsockets/lws-ws-close.h	/^	LWS_CLOSE_STATUS_RESERVED				= 1004,$/;"	e	enum:lws_close_status
LWS_CLOSE_STATUS_TLS_FAILURE	include/libwebsockets/lws-ws-close.h	/^	LWS_CLOSE_STATUS_TLS_FAILURE				= 1015,$/;"	e	enum:lws_close_status
LWS_CLOSE_STATUS_UNACCEPTABLE_OPCODE	include/libwebsockets/lws-ws-close.h	/^	LWS_CLOSE_STATUS_UNACCEPTABLE_OPCODE			= 1003,$/;"	e	enum:lws_close_status
LWS_CLOSE_STATUS_UNEXPECTED_CONDITION	include/libwebsockets/lws-ws-close.h	/^	LWS_CLOSE_STATUS_UNEXPECTED_CONDITION			= 1011,$/;"	e	enum:lws_close_status
LWS_COUNT_RSA_ELEMENTS	include/libwebsockets/lws-genrsa.h	48;"	d
LWS_CUS_AUTH	include/libwebsockets/lws-callbacks.h	/^	LWS_CUS_AUTH,$/;"	e	enum:lws_cert_update_state
LWS_CUS_CHALLENGE	include/libwebsockets/lws-callbacks.h	/^	LWS_CUS_CHALLENGE,$/;"	e	enum:lws_cert_update_state
LWS_CUS_CONFIRM	include/libwebsockets/lws-callbacks.h	/^	LWS_CUS_CONFIRM,$/;"	e	enum:lws_cert_update_state
LWS_CUS_CREATE_KEYS	include/libwebsockets/lws-callbacks.h	/^	LWS_CUS_CREATE_KEYS,$/;"	e	enum:lws_cert_update_state
LWS_CUS_CREATE_REQ	include/libwebsockets/lws-callbacks.h	/^	LWS_CUS_CREATE_REQ,$/;"	e	enum:lws_cert_update_state
LWS_CUS_FAILED	include/libwebsockets/lws-callbacks.h	/^	LWS_CUS_FAILED,$/;"	e	enum:lws_cert_update_state
LWS_CUS_IDLE	include/libwebsockets/lws-callbacks.h	/^	LWS_CUS_IDLE,$/;"	e	enum:lws_cert_update_state
LWS_CUS_ISSUE	include/libwebsockets/lws-callbacks.h	/^	LWS_CUS_ISSUE,$/;"	e	enum:lws_cert_update_state
LWS_CUS_REG	include/libwebsockets/lws-callbacks.h	/^	LWS_CUS_REG,$/;"	e	enum:lws_cert_update_state
LWS_CUS_REQ	include/libwebsockets/lws-callbacks.h	/^	LWS_CUS_REQ,$/;"	e	enum:lws_cert_update_state
LWS_CUS_STARTING	include/libwebsockets/lws-callbacks.h	/^	LWS_CUS_STARTING,$/;"	e	enum:lws_cert_update_state
LWS_CUS_SUCCESS	include/libwebsockets/lws-callbacks.h	/^	LWS_CUS_SUCCESS,$/;"	e	enum:lws_cert_update_state
LWS_DLL	protocol_lws_minimal_server_echo.c	14;"	d	file:
LWS_EXTERN	include/libwebsockets.h	171;"	d
LWS_EXTERN	include/libwebsockets.h	78;"	d
LWS_EXTERN	include/libwebsockets.h	80;"	d
LWS_EXTERN	include/libwebsockets.h	83;"	d
LWS_EXT_CB_CLIENT_CONSTRUCT	include/libwebsockets/lws-ws-ext.h	/^	LWS_EXT_CB_CLIENT_CONSTRUCT			=  5,$/;"	e	enum:lws_extension_callback_reasons
LWS_EXT_CB_CONSTRUCT	include/libwebsockets/lws-ws-ext.h	/^	LWS_EXT_CB_CONSTRUCT				=  4,$/;"	e	enum:lws_extension_callback_reasons
LWS_EXT_CB_DESTROY	include/libwebsockets/lws-ws-ext.h	/^	LWS_EXT_CB_DESTROY				=  8,$/;"	e	enum:lws_extension_callback_reasons
LWS_EXT_CB_NAMED_OPTION_SET	include/libwebsockets/lws-ws-ext.h	/^	LWS_EXT_CB_NAMED_OPTION_SET			= 26,$/;"	e	enum:lws_extension_callback_reasons
LWS_EXT_CB_OPTION_CONFIRM	include/libwebsockets/lws-ws-ext.h	/^	LWS_EXT_CB_OPTION_CONFIRM			= 25,$/;"	e	enum:lws_extension_callback_reasons
LWS_EXT_CB_OPTION_DEFAULT	include/libwebsockets/lws-ws-ext.h	/^	LWS_EXT_CB_OPTION_DEFAULT			= 23,$/;"	e	enum:lws_extension_callback_reasons
LWS_EXT_CB_OPTION_SET	include/libwebsockets/lws-ws-ext.h	/^	LWS_EXT_CB_OPTION_SET				= 24,$/;"	e	enum:lws_extension_callback_reasons
LWS_EXT_CB_PACKET_TX_PRESEND	include/libwebsockets/lws-ws-ext.h	/^	LWS_EXT_CB_PACKET_TX_PRESEND			= 12,$/;"	e	enum:lws_extension_callback_reasons
LWS_EXT_CB_PAYLOAD_RX	include/libwebsockets/lws-ws-ext.h	/^	LWS_EXT_CB_PAYLOAD_RX				= 22,$/;"	e	enum:lws_extension_callback_reasons
LWS_EXT_CB_PAYLOAD_TX	include/libwebsockets/lws-ws-ext.h	/^	LWS_EXT_CB_PAYLOAD_TX				= 21,$/;"	e	enum:lws_extension_callback_reasons
LWS_FEATURE_FOPS	include/libwebsockets.h	307;"	d
LWS_FEATURE_PROTOCOLS_HAS_ID_FIELD	include/libwebsockets.h	298;"	d
LWS_FEATURE_PROTOCOLS_HAS_PEER_WRITE_ALLOWANCE	include/libwebsockets.h	301;"	d
LWS_FEATURE_SERVE_HTTP_FILE_HAS_OTHER_HEADERS_ARG	include/libwebsockets.h	295;"	d
LWS_FEATURE_SERVE_HTTP_FILE_HAS_OTHER_HEADERS_LEN	include/libwebsockets.h	304;"	d
LWS_FOP_CLOSE	include/libwebsockets/lws-vfs.h	/^	int (*LWS_FOP_CLOSE)(lws_fop_fd_t *fop_fd);$/;"	m	struct:lws_plat_file_ops
LWS_FOP_CLOSE	include/libwebsockets/lws-vfs.h	50;"	d
LWS_FOP_CLOSE	include/libwebsockets/lws-vfs.h	56;"	d
LWS_FOP_FLAGS_MASK	include/libwebsockets/lws-vfs.h	62;"	d
LWS_FOP_FLAG_COMPR_ACCEPTABLE_GZIP	include/libwebsockets/lws-vfs.h	63;"	d
LWS_FOP_FLAG_COMPR_IS_GZIP	include/libwebsockets/lws-vfs.h	64;"	d
LWS_FOP_FLAG_MOD_TIME_VALID	include/libwebsockets/lws-vfs.h	65;"	d
LWS_FOP_FLAG_VIRTUAL	include/libwebsockets/lws-vfs.h	66;"	d
LWS_FOP_OPEN	include/libwebsockets/lws-vfs.h	/^	lws_fop_fd_t (*LWS_FOP_OPEN)(const struct lws_plat_file_ops *fops,$/;"	m	struct:lws_plat_file_ops
LWS_FOP_OPEN	include/libwebsockets/lws-vfs.h	49;"	d
LWS_FOP_OPEN	include/libwebsockets/lws-vfs.h	55;"	d
LWS_FOP_READ	include/libwebsockets/lws-vfs.h	/^	int (*LWS_FOP_READ)(lws_fop_fd_t fop_fd, lws_filepos_t *amount,$/;"	m	struct:lws_plat_file_ops
LWS_FOP_READ	include/libwebsockets/lws-vfs.h	52;"	d
LWS_FOP_READ	include/libwebsockets/lws-vfs.h	58;"	d
LWS_FOP_SEEK_CUR	include/libwebsockets/lws-vfs.h	/^	lws_fileofs_t (*LWS_FOP_SEEK_CUR)(lws_fop_fd_t fop_fd,$/;"	m	struct:lws_plat_file_ops
LWS_FOP_SEEK_CUR	include/libwebsockets/lws-vfs.h	51;"	d
LWS_FOP_SEEK_CUR	include/libwebsockets/lws-vfs.h	57;"	d
LWS_FOP_WRITE	include/libwebsockets/lws-vfs.h	/^	int (*LWS_FOP_WRITE)(lws_fop_fd_t fop_fd, lws_filepos_t *amount,$/;"	m	struct:lws_plat_file_ops
LWS_FOP_WRITE	include/libwebsockets/lws-vfs.h	53;"	d
LWS_FOP_WRITE	include/libwebsockets/lws-vfs.h	59;"	d
LWS_FORMAT	include/libwebsockets.h	138;"	d
LWS_FORMAT	include/libwebsockets.h	143;"	d
LWS_FORMAT	include/libwebsockets.h	73;"	d
LWS_GENHASH_LARGEST	include/libwebsockets/lws-genhash.h	48;"	d
LWS_GENHASH_TYPE_SHA1	include/libwebsockets/lws-genhash.h	/^	LWS_GENHASH_TYPE_SHA1,$/;"	e	enum:lws_genhash_types
LWS_GENHASH_TYPE_SHA256	include/libwebsockets/lws-genhash.h	/^	LWS_GENHASH_TYPE_SHA256,$/;"	e	enum:lws_genhash_types
LWS_GENHASH_TYPE_SHA384	include/libwebsockets/lws-genhash.h	/^	LWS_GENHASH_TYPE_SHA384,$/;"	e	enum:lws_genhash_types
LWS_GENHASH_TYPE_SHA512	include/libwebsockets/lws-genhash.h	/^	LWS_GENHASH_TYPE_SHA512,$/;"	e	enum:lws_genhash_types
LWS_GENHMAC_TYPE_SHA256	include/libwebsockets/lws-genhash.h	/^	LWS_GENHMAC_TYPE_SHA256,$/;"	e	enum:lws_genhmac_types
LWS_GENHMAC_TYPE_SHA384	include/libwebsockets/lws-genhash.h	/^	LWS_GENHMAC_TYPE_SHA384,$/;"	e	enum:lws_genhmac_types
LWS_GENHMAC_TYPE_SHA512	include/libwebsockets/lws-genhash.h	/^	LWS_GENHMAC_TYPE_SHA512,$/;"	e	enum:lws_genhmac_types
LWS_GROUP_FLAG_SELF	include/libwebsockets/lws-esp32.h	149;"	d
LWS_HAS_INTPTR_T	include/lws_config.h	181;"	d
LWS_HAVE_ATOLL	include/lws_config.h	160;"	d
LWS_HAVE_MALLOC_H	include/lws_config.h	168;"	d
LWS_HAVE_OPENSSL_ECDH_H	include/lws_config.h	119;"	d
LWS_HAVE_PIPE2	include/lws_config.h	170;"	d
LWS_HAVE_PTHREAD_H	include/lws_config.h	113;"	d
LWS_HAVE_SSL_CTX_get0_certificate	include/lws_config.h	109;"	d
LWS_HAVE_SSL_CTX_set1_param	include/lws_config.h	105;"	d
LWS_HAVE_SSL_EXTRA_CHAIN_CERTS	include/lws_config.h	177;"	d
LWS_HAVE_SSL_SET_INFO_CALLBACK	include/lws_config.h	176;"	d
LWS_HAVE_SSL_get0_alpn_selected	include/lws_config.h	178;"	d
LWS_HAVE_SSL_set_alpn_protos	include/lws_config.h	179;"	d
LWS_HAVE_STDINT_H	include/lws_config.h	148;"	d
LWS_HAVE_TLSV1_2_CLIENT_METHOD	include/lws_config.h	175;"	d
LWS_HAVE_X509_VERIFY_PARAM_set1_host	include/lws_config.h	106;"	d
LWS_ILLEGAL_HTTP_CONTENT_LEN	include/libwebsockets/lws-http.h	526;"	d
LWS_INLINE	include/libwebsockets.h	108;"	d
LWS_INLINE	include/libwebsockets.h	69;"	d
LWS_INSTALL_DATADIR	include/lws_config.h	9;"	d
LWS_INTERNAL	protocol_lws_minimal_server_echo.c	15;"	d	file:
LWS_INVALID_FILE	include/libwebsockets.h	117;"	d
LWS_INVALID_FILE	include/libwebsockets.h	121;"	d
LWS_INVALID_FILE	include/libwebsockets.h	123;"	d
LWS_INVALID_FILE	include/libwebsockets.h	87;"	d
LWS_ITOSA_NOT_EXIST	include/libwebsockets/lws-network-helper.h	75;"	d
LWS_ITOSA_NOT_USABLE	include/libwebsockets/lws-network-helper.h	76;"	d
LWS_ITOSA_USABLE	include/libwebsockets/lws-network-helper.h	77;"	d
LWS_LIBRARY_VERSION	include/lws_config.h	34;"	d
LWS_LIBRARY_VERSION_MAJOR	include/lws_config.h	36;"	d
LWS_LIBRARY_VERSION_MINOR	include/lws_config.h	37;"	d
LWS_LIBRARY_VERSION_NUMBER	include/lws_config.h	40;"	d
LWS_LIBRARY_VERSION_PATCH	include/lws_config.h	38;"	d
LWS_MAGIC_REBOOT_TYPE_ADS	include/libwebsockets/lws-esp32.h	108;"	d
LWS_MAGIC_REBOOT_TYPE_FORCED_FACTORY	include/libwebsockets/lws-esp32.h	110;"	d
LWS_MAGIC_REBOOT_TYPE_FORCED_FACTORY_BUTTON	include/libwebsockets/lws-esp32.h	111;"	d
LWS_MAGIC_REBOOT_TYPE_REQ_FACTORY	include/libwebsockets/lws-esp32.h	109;"	d
LWS_MAGIC_REBOOT_TYPE_REQ_FACTORY_ERASE_OTA	include/libwebsockets/lws-esp32.h	112;"	d
LWS_MAX_SMP	include/lws_config.h	135;"	d
LWS_NO_DAEMONIZE	include/lws_config.h	86;"	d
LWS_OPENSSL_CLIENT_CERTS	include/lws_config.h	53;"	d
LWS_OPENSSL_SUPPORT	include/lws_config.h	46;"	d
LWS_O_CREAT	include/libwebsockets.h	111;"	d
LWS_O_CREAT	include/libwebsockets.h	90;"	d
LWS_O_RDONLY	include/libwebsockets.h	109;"	d
LWS_O_RDONLY	include/libwebsockets.h	88;"	d
LWS_O_TRUNC	include/libwebsockets.h	112;"	d
LWS_O_TRUNC	include/libwebsockets.h	91;"	d
LWS_O_WRONLY	include/libwebsockets.h	110;"	d
LWS_O_WRONLY	include/libwebsockets.h	89;"	d
LWS_PLUGIN_API_MAGIC	include/libwebsockets/lws-protocols-plugins.h	199;"	d
LWS_PLUGIN_PROTOCOL_MINIMAL	junk/protocol_lws_minimal.c	165;"	d	file:
LWS_PLUGIN_PROTOCOL_MINIMAL_SERVER_ECHO	protocol_lws_minimal_server_echo.c	107;"	d	file:
LWS_PLUGIN_STATIC	include/libwebsockets/lws-esp32.h	107;"	d
LWS_PLUGIN_STATIC	junk/minimal-ws-server.c	21;"	d	file:
LWS_PLUGIN_STATIC	minimal-ws-server-echo.c	12;"	d	file:
LWS_PLUGIN_STATIC	test_main.cpp	23;"	d	file:
LWS_POLLHUP	include/libwebsockets.h	321;"	d
LWS_POLLHUP	include/libwebsockets.h	335;"	d
LWS_POLLIN	include/libwebsockets.h	322;"	d
LWS_POLLIN	include/libwebsockets.h	336;"	d
LWS_POLLOUT	include/libwebsockets.h	323;"	d
LWS_POLLOUT	include/libwebsockets.h	337;"	d
LWS_PRE	include/libwebsockets/lws-write.h	41;"	d
LWS_ROLE_H1	include/lws_config.h	11;"	d
LWS_ROLE_RAW	include/lws_config.h	13;"	d
LWS_ROLE_WS	include/lws_config.h	12;"	d
LWS_RXFLOW_REASON_APPLIES	include/libwebsockets/lws-misc.h	/^	LWS_RXFLOW_REASON_APPLIES		= (1 << 14),$/;"	e	enum:__anon9
LWS_RXFLOW_REASON_APPLIES_DISABLE	include/libwebsockets/lws-misc.h	/^	LWS_RXFLOW_REASON_APPLIES_DISABLE	= LWS_RXFLOW_REASON_APPLIES,$/;"	e	enum:__anon9
LWS_RXFLOW_REASON_APPLIES_ENABLE	include/libwebsockets/lws-misc.h	/^	LWS_RXFLOW_REASON_APPLIES_ENABLE	= LWS_RXFLOW_REASON_APPLIES |$/;"	e	enum:__anon9
LWS_RXFLOW_REASON_APPLIES_ENABLE_BIT	include/libwebsockets/lws-misc.h	/^	LWS_RXFLOW_REASON_APPLIES_ENABLE_BIT	= (1 << 13),$/;"	e	enum:__anon9
LWS_RXFLOW_REASON_FLAG_PROCESS_NOW	include/libwebsockets/lws-misc.h	/^	LWS_RXFLOW_REASON_FLAG_PROCESS_NOW	= (1 << 12),$/;"	e	enum:__anon9
LWS_RXFLOW_REASON_H2_PPS_PENDING	include/libwebsockets/lws-misc.h	/^	LWS_RXFLOW_REASON_H2_PPS_PENDING	= (1 << 7),$/;"	e	enum:__anon9
LWS_RXFLOW_REASON_HTTP_RXBUFFER	include/libwebsockets/lws-misc.h	/^	LWS_RXFLOW_REASON_HTTP_RXBUFFER		= (1 << 6),$/;"	e	enum:__anon9
LWS_RXFLOW_REASON_USER_BOOL	include/libwebsockets/lws-misc.h	/^	LWS_RXFLOW_REASON_USER_BOOL		= (1 << 0),$/;"	e	enum:__anon9
LWS_SEND_BUFFER_POST_PADDING	include/libwebsockets/lws-write.h	44;"	d
LWS_SEND_BUFFER_PRE_PADDING	include/libwebsockets/lws-write.h	43;"	d
LWS_SERVER_OPTION_ALLOW_LISTEN_SHARE	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_ALLOW_LISTEN_SHARE			= (1 << 23),$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_ALLOW_NON_SSL_ON_SSL_PORT	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_ALLOW_NON_SSL_ON_SSL_PORT		= (1 << 3) |$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_CREATE_VHOST_SSL_CTX	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_CREATE_VHOST_SSL_CTX			= (1 << 24),$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_DISABLE_IPV6	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_DISABLE_IPV6				= (1 << 5),$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_DISABLE_OS_CA_CERTS	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_DISABLE_OS_CA_CERTS			= (1 << 6),$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_DO_SSL_GLOBAL_INIT	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_DO_SSL_GLOBAL_INIT			= (1 << 12),$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_EXPLICIT_VHOSTS	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_EXPLICIT_VHOSTS			= (1 << 13),$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_FALLBACK_TO_RAW	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_FALLBACK_TO_RAW			= (1 << 20),$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_IGNORE_MISSING_CERT	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_IGNORE_MISSING_CERT			= (1 << 26),$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_IPV6_V6ONLY_MODIFY	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_IPV6_V6ONLY_MODIFY			= (1 << 16),$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_IPV6_V6ONLY_VALUE	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_IPV6_V6ONLY_VALUE			= (1 << 17),$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_JUST_USE_RAW_ORIGIN	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_JUST_USE_RAW_ORIGIN			= (1 << 19),$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_LIBEV	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_LIBEV					= (1 << 4),$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_LIBEVENT	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_LIBEVENT				= (1 << 21),$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_LIBUV	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_LIBUV					= (1 << 10),$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_ONLY_RAW	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_ONLY_RAW				= (1 << 22),$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_PEER_CERT_NOT_REQUIRED	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_PEER_CERT_NOT_REQUIRED		= (1 << 7),$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_REDIRECT_HTTP_TO_HTTPS	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_REDIRECT_HTTP_TO_HTTPS		= (1 << 11) |$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_REQUIRE_VALID_OPENSSL_CLIENT_CERT	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_REQUIRE_VALID_OPENSSL_CLIENT_CERT	= (1 << 1) |$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_SKIP_PROTOCOL_INIT	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_SKIP_PROTOCOL_INIT			= (1 << 25),$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_SKIP_SERVER_CANONICAL_NAME	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_SKIP_SERVER_CANONICAL_NAME		= (1 << 2),$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_SSL_ECDH	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_SSL_ECDH				= (1 << 9) |$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_STS	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_STS					= (1 << 15),$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_UNIX_SOCK	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_UNIX_SOCK				= (1 << 14),$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_UV_NO_SIGSEGV_SIGFPE_SPIN	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_UV_NO_SIGSEGV_SIGFPE_SPIN		= (1 << 18),$/;"	e	enum:lws_context_options
LWS_SERVER_OPTION_VALIDATE_UTF8	include/libwebsockets/lws-context-vhost.h	/^	LWS_SERVER_OPTION_VALIDATE_UTF8				= (1 << 8),$/;"	e	enum:lws_context_options
LWS_SET_TIMER_USEC_CANCEL	include/libwebsockets/lws-timeout-timer.h	101;"	d
LWS_SIZEOFPTR	include/libwebsockets/lws-write.h	30;"	d
LWS_SSL_CLIENT_USE_OS_CA_CERTS	include/lws_config.h	50;"	d
LWS_STDERR	include/libwebsockets/lws-cgi.h	/^	LWS_STDERR = 2,$/;"	e	enum:lws_enum_stdinouterr
LWS_STDIN	include/libwebsockets/lws-cgi.h	/^	LWS_STDIN = 0,$/;"	e	enum:lws_enum_stdinouterr
LWS_STDOUT	include/libwebsockets/lws-cgi.h	/^	LWS_STDOUT = 1,$/;"	e	enum:lws_enum_stdinouterr
LWS_SYSTEM_GROUP_MEMBER_ADD	include/libwebsockets/lws-esp32.h	145;"	d
LWS_SYSTEM_GROUP_MEMBER_CHANGE	include/libwebsockets/lws-esp32.h	146;"	d
LWS_SYSTEM_GROUP_MEMBER_REMOVE	include/libwebsockets/lws-esp32.h	147;"	d
LWS_TLS_CERT_INFO_COMMON_NAME	include/libwebsockets/lws-x509.h	/^	LWS_TLS_CERT_INFO_COMMON_NAME,$/;"	e	enum:lws_tls_cert_info
LWS_TLS_CERT_INFO_ISSUER_NAME	include/libwebsockets/lws-x509.h	/^	LWS_TLS_CERT_INFO_ISSUER_NAME,$/;"	e	enum:lws_tls_cert_info
LWS_TLS_CERT_INFO_OPAQUE_PUBLIC_KEY	include/libwebsockets/lws-x509.h	/^	LWS_TLS_CERT_INFO_OPAQUE_PUBLIC_KEY,$/;"	e	enum:lws_tls_cert_info
LWS_TLS_CERT_INFO_USAGE	include/libwebsockets/lws-x509.h	/^	LWS_TLS_CERT_INFO_USAGE,$/;"	e	enum:lws_tls_cert_info
LWS_TLS_CERT_INFO_VALIDITY_FROM	include/libwebsockets/lws-x509.h	/^	LWS_TLS_CERT_INFO_VALIDITY_FROM,$/;"	e	enum:lws_tls_cert_info
LWS_TLS_CERT_INFO_VALIDITY_TO	include/libwebsockets/lws-x509.h	/^	LWS_TLS_CERT_INFO_VALIDITY_TO,$/;"	e	enum:lws_tls_cert_info
LWS_TLS_CERT_INFO_VERIFIED	include/libwebsockets/lws-x509.h	/^	LWS_TLS_CERT_INFO_VERIFIED,$/;"	e	enum:lws_tls_cert_info
LWS_TLS_REQ_ELEMENT_COMMON_NAME	include/libwebsockets/lws-callbacks.h	/^	LWS_TLS_REQ_ELEMENT_COMMON_NAME,$/;"	e	enum:__anon5
LWS_TLS_REQ_ELEMENT_COUNT	include/libwebsockets/lws-callbacks.h	/^	LWS_TLS_REQ_ELEMENT_COUNT,$/;"	e	enum:__anon5
LWS_TLS_REQ_ELEMENT_COUNTRY	include/libwebsockets/lws-callbacks.h	/^	LWS_TLS_REQ_ELEMENT_COUNTRY,$/;"	e	enum:__anon5
LWS_TLS_REQ_ELEMENT_EMAIL	include/libwebsockets/lws-callbacks.h	/^	LWS_TLS_REQ_ELEMENT_EMAIL,$/;"	e	enum:__anon5
LWS_TLS_REQ_ELEMENT_LOCALITY	include/libwebsockets/lws-callbacks.h	/^	LWS_TLS_REQ_ELEMENT_LOCALITY,$/;"	e	enum:__anon5
LWS_TLS_REQ_ELEMENT_ORGANIZATION	include/libwebsockets/lws-callbacks.h	/^	LWS_TLS_REQ_ELEMENT_ORGANIZATION,$/;"	e	enum:__anon5
LWS_TLS_REQ_ELEMENT_STATE	include/libwebsockets/lws-callbacks.h	/^	LWS_TLS_REQ_ELEMENT_STATE,$/;"	e	enum:__anon5
LWS_TLS_SET_AUTH_PATH	include/libwebsockets/lws-callbacks.h	/^	LWS_TLS_SET_AUTH_PATH,$/;"	e	enum:__anon5
LWS_TLS_SET_CERT_PATH	include/libwebsockets/lws-callbacks.h	/^	LWS_TLS_SET_CERT_PATH,$/;"	e	enum:__anon5
LWS_TLS_SET_DIR_URL	include/libwebsockets/lws-callbacks.h	/^	LWS_TLS_SET_DIR_URL = LWS_TLS_REQ_ELEMENT_COUNT,$/;"	e	enum:__anon5
LWS_TLS_SET_KEY_PATH	include/libwebsockets/lws-callbacks.h	/^	LWS_TLS_SET_KEY_PATH,$/;"	e	enum:__anon5
LWS_TLS_TOTAL_COUNT	include/libwebsockets/lws-callbacks.h	/^	LWS_TLS_TOTAL_COUNT$/;"	e	enum:__anon5
LWS_TO_KILL_ASYNC	include/libwebsockets/lws-timeout-timer.h	73;"	d
LWS_TO_KILL_SYNC	include/libwebsockets/lws-timeout-timer.h	80;"	d
LWS_TP_RETURN_CHECKING_IN	include/libwebsockets/lws-threadpool.h	/^	LWS_TP_RETURN_CHECKING_IN,$/;"	e	enum:lws_threadpool_task_return
LWS_TP_RETURN_FINISHED	include/libwebsockets/lws-threadpool.h	/^	LWS_TP_RETURN_FINISHED,$/;"	e	enum:lws_threadpool_task_return
LWS_TP_RETURN_STOPPED	include/libwebsockets/lws-threadpool.h	/^	LWS_TP_RETURN_STOPPED$/;"	e	enum:lws_threadpool_task_return
LWS_TP_RETURN_SYNC	include/libwebsockets/lws-threadpool.h	/^	LWS_TP_RETURN_SYNC,$/;"	e	enum:lws_threadpool_task_return
LWS_TP_STATUS_FINISHED	include/libwebsockets/lws-threadpool.h	/^	LWS_TP_STATUS_FINISHED, \/* lws_threadpool_task_status() frees task *\/$/;"	e	enum:lws_threadpool_task_status
LWS_TP_STATUS_QUEUED	include/libwebsockets/lws-threadpool.h	/^	LWS_TP_STATUS_QUEUED,$/;"	e	enum:lws_threadpool_task_status
LWS_TP_STATUS_RUNNING	include/libwebsockets/lws-threadpool.h	/^	LWS_TP_STATUS_RUNNING,$/;"	e	enum:lws_threadpool_task_status
LWS_TP_STATUS_STOPPED	include/libwebsockets/lws-threadpool.h	/^	LWS_TP_STATUS_STOPPED, \/* lws_threadpool_task_status() frees task *\/$/;"	e	enum:lws_threadpool_task_status
LWS_TP_STATUS_STOPPING	include/libwebsockets/lws-threadpool.h	/^	LWS_TP_STATUS_STOPPING,$/;"	e	enum:lws_threadpool_task_status
LWS_TP_STATUS_SYNCING	include/libwebsockets/lws-threadpool.h	/^	LWS_TP_STATUS_SYNCING,$/;"	e	enum:lws_threadpool_task_status
LWS_UFS_CONTENT	include/libwebsockets/lws-spa.h	/^	LWS_UFS_CONTENT,$/;"	e	enum:lws_spa_fileupload_states
LWS_UFS_FINAL_CONTENT	include/libwebsockets/lws-spa.h	/^	LWS_UFS_FINAL_CONTENT,$/;"	e	enum:lws_spa_fileupload_states
LWS_UFS_OPEN	include/libwebsockets/lws-spa.h	/^	LWS_UFS_OPEN$/;"	e	enum:lws_spa_fileupload_states
LWS_USEC_PER_SEC	include/libwebsockets/lws-timeout-timer.h	102;"	d
LWS_VISIBLE	include/libwebsockets.h	136;"	d
LWS_VISIBLE	include/libwebsockets.h	140;"	d
LWS_VISIBLE	include/libwebsockets.h	70;"	d
LWS_WARN_DEPRECATED	include/libwebsockets.h	137;"	d
LWS_WARN_DEPRECATED	include/libwebsockets.h	142;"	d
LWS_WARN_DEPRECATED	include/libwebsockets.h	72;"	d
LWS_WARN_UNUSED_RESULT	include/libwebsockets.h	131;"	d
LWS_WARN_UNUSED_RESULT	include/libwebsockets.h	133;"	d
LWS_WARN_UNUSED_RESULT	include/libwebsockets.h	141;"	d
LWS_WARN_UNUSED_RESULT	include/libwebsockets.h	71;"	d
LWS_WITHOUT_EXTENSIONS	include/lws_config.h	56;"	d
LWS_WITH_HTTP_PROXY	include/lws_config.h	122;"	d
LWS_WITH_LEJP	include/lws_config.h	138;"	d
LWS_WITH_POLL	include/lws_config.h	62;"	d
LWS_WITH_THREADPOOL	include/lws_config.h	185;"	d
LWS_WITH_TLS	include/lws_config.h	47;"	d
LWS_WITH_UNIX_SOCK	include/lws_config.h	77;"	d
LWS_WRITE_BINARY	include/libwebsockets/lws-write.h	/^	LWS_WRITE_BINARY					= 1,$/;"	e	enum:lws_write_protocol
LWS_WRITE_BUFLIST	include/libwebsockets/lws-write.h	/^	LWS_WRITE_BUFLIST = 0x20,$/;"	e	enum:lws_write_protocol
LWS_WRITE_CLIENT_IGNORE_XOR_MASK	include/libwebsockets/lws-write.h	/^	LWS_WRITE_CLIENT_IGNORE_XOR_MASK = 0x80$/;"	e	enum:lws_write_protocol
LWS_WRITE_CONTINUATION	include/libwebsockets/lws-write.h	/^	LWS_WRITE_CONTINUATION					= 2,$/;"	e	enum:lws_write_protocol
LWS_WRITE_H2_STREAM_END	include/libwebsockets/lws-write.h	/^	LWS_WRITE_H2_STREAM_END = 0x80,$/;"	e	enum:lws_write_protocol
LWS_WRITE_HTTP	include/libwebsockets/lws-write.h	/^	LWS_WRITE_HTTP						= 3,$/;"	e	enum:lws_write_protocol
LWS_WRITE_HTTP_FINAL	include/libwebsockets/lws-write.h	/^	LWS_WRITE_HTTP_FINAL					= 7,$/;"	e	enum:lws_write_protocol
LWS_WRITE_HTTP_HEADERS	include/libwebsockets/lws-write.h	/^	LWS_WRITE_HTTP_HEADERS					= 8,$/;"	e	enum:lws_write_protocol
LWS_WRITE_HTTP_HEADERS_CONTINUATION	include/libwebsockets/lws-write.h	/^	LWS_WRITE_HTTP_HEADERS_CONTINUATION			= 9,$/;"	e	enum:lws_write_protocol
LWS_WRITE_NO_FIN	include/libwebsockets/lws-write.h	/^	LWS_WRITE_NO_FIN = 0x40,$/;"	e	enum:lws_write_protocol
LWS_WRITE_PING	include/libwebsockets/lws-write.h	/^	LWS_WRITE_PING						= 5,$/;"	e	enum:lws_write_protocol
LWS_WRITE_PONG	include/libwebsockets/lws-write.h	/^	LWS_WRITE_PONG						= 6,$/;"	e	enum:lws_write_protocol
LWS_WRITE_RAW	include/libwebsockets/lws-write.h	46;"	d
LWS_WRITE_TEXT	include/libwebsockets/lws-write.h	/^	LWS_WRITE_TEXT						= 0,$/;"	e	enum:lws_write_protocol
LeftBracketToken	include/rapidjson/reader.h	/^        LeftBracketToken = 0,$/;"	e	enum:GenericReader::Token
LeftCurlyBracketToken	include/rapidjson/reader.h	/^        LeftCurlyBracketToken,$/;"	e	enum:GenericReader::Token
LenPos	include/rapidjson/document.h	/^        enum { MaxChars = sizeof(static_cast<Flag*>(0)->payload) \/ sizeof(Ch), MaxSize = MaxChars - 1, LenPos = MaxSize };$/;"	e	enum:GenericValue::ShortString::__anon24
Length	include/rapidjson/reader.h	/^        size_t Length() const { return length_; }$/;"	f	class:GenericReader::StackStream
Length	include/rapidjson/reader.h	/^        size_t Length() { return 0; }$/;"	f	class:GenericReader::NumberStream
Length	include/rapidjson/reader.h	/^        size_t Length() { return stackStream.Length(); }$/;"	f	class:GenericReader::NumberStream
Level	include/rapidjson/writer.h	/^        Level(bool inArray_) : valueCount(0), inArray(inArray_) {}$/;"	f	struct:Writer::Level
Level	include/rapidjson/writer.h	/^    struct Level {$/;"	s	class:Writer
MBEDTLS_CONFIG_FILE	include/libwebsockets.h	218;"	d
MBEDTLS_CONFIG_FILE	include/libwebsockets.h	219;"	d
Malloc	include/rapidjson/allocators.h	/^    void* Malloc(size_t size) { $/;"	f	class:CrtAllocator
Malloc	include/rapidjson/allocators.h	/^    void* Malloc(size_t size) {$/;"	f	class:MemoryPoolAllocator
MallocState	include/rapidjson/schema.h	/^    virtual void* MallocState(size_t size) {$/;"	f	class:GenericSchemaValidator
Match	include/rapidjson/internal/regex.h	/^    bool Match(InputStream& is) {$/;"	f	class:internal::GenericRegexSearch
Match	include/rapidjson/internal/regex.h	/^    bool Match(const Ch* s) {$/;"	f	class:internal::GenericRegexSearch
MatchRange	include/rapidjson/internal/regex.h	/^    bool MatchRange(SizeType rangeIndex, unsigned codepoint) const {$/;"	f	class:internal::GenericRegexSearch
MaxChars	include/rapidjson/document.h	/^        enum { MaxChars = sizeof(static_cast<Flag*>(0)->payload) \/ sizeof(Ch), MaxSize = MaxChars - 1, LenPos = MaxSize };$/;"	e	enum:GenericValue::ShortString::__anon24
MaxSize	include/rapidjson/document.h	/^        enum { MaxChars = sizeof(static_cast<Flag*>(0)->payload) \/ sizeof(Ch), MaxSize = MaxChars - 1, LenPos = MaxSize };$/;"	e	enum:GenericValue::ShortString::__anon24
MaybeAddConst	include/rapidjson/internal/meta.h	/^template <bool Constify, typename T> struct MaybeAddConst : SelectIfCond<Constify, const T, T> {};$/;"	s	namespace:internal
Member	include/rapidjson/document.h	/^    typedef GenericMember<Encoding, Allocator> Member;$/;"	t	class:GenericValue
MemberBegin	include/rapidjson/document.h	/^    ConstMemberIterator MemberBegin() const { RAPIDJSON_ASSERT(IsObject()); return ConstMemberIterator(GetMembersPointer()); }$/;"	f	class:GenericValue
MemberBegin	include/rapidjson/document.h	/^    MemberIterator MemberBegin()            { RAPIDJSON_ASSERT(IsObject()); return MemberIterator(GetMembersPointer()); }$/;"	f	class:GenericValue
MemberBegin	include/rapidjson/document.h	/^    MemberIterator MemberBegin() const { return value_.MemberBegin(); }$/;"	f	class:GenericObject
MemberCapacity	include/rapidjson/document.h	/^    SizeType MemberCapacity() const { RAPIDJSON_ASSERT(IsObject()); return data_.o.capacity; }$/;"	f	class:GenericValue
MemberCapacity	include/rapidjson/document.h	/^    SizeType MemberCapacity() const { return value_.MemberCapacity(); }$/;"	f	class:GenericObject
MemberCount	include/rapidjson/document.h	/^    SizeType MemberCount() const { RAPIDJSON_ASSERT(IsObject()); return data_.o.size; }$/;"	f	class:GenericValue
MemberCount	include/rapidjson/document.h	/^    SizeType MemberCount() const { return value_.MemberCount(); }$/;"	f	class:GenericObject
MemberEnd	include/rapidjson/document.h	/^    ConstMemberIterator MemberEnd() const   { RAPIDJSON_ASSERT(IsObject()); return ConstMemberIterator(GetMembersPointer() + data_.o.size); }$/;"	f	class:GenericValue
MemberEnd	include/rapidjson/document.h	/^    MemberIterator MemberEnd()              { RAPIDJSON_ASSERT(IsObject()); return MemberIterator(GetMembersPointer() + data_.o.size); }$/;"	f	class:GenericValue
MemberEnd	include/rapidjson/document.h	/^    MemberIterator MemberEnd() const { return value_.MemberEnd(); }$/;"	f	class:GenericObject
MemberIterator	include/rapidjson/document.h	/^    typedef GenericMemberIterator<Const, typename ValueT::EncodingType, typename ValueT::AllocatorType> MemberIterator;  \/\/ This may be const or non-const iterator$/;"	t	class:GenericObject
MemberIterator	include/rapidjson/document.h	/^    typedef typename GenericMemberIterator<false,Encoding,Allocator>::Iterator MemberIterator;  \/\/!< Member iterator for iterating in object.$/;"	t	class:GenericValue
MemberReserve	include/rapidjson/document.h	/^    GenericObject MemberReserve(SizeType newCapacity, AllocatorType &allocator) const { value_.MemberReserve(newCapacity, allocator); return *this; }$/;"	f	class:GenericObject
MemberReserve	include/rapidjson/document.h	/^    GenericValue& MemberReserve(SizeType newCapacity, Allocator &allocator) {$/;"	f	class:GenericValue
MemoryBuffer	include/rapidjson/fwd.h	/^typedef GenericMemoryBuffer<CrtAllocator> MemoryBuffer;$/;"	t
MemoryBuffer	include/rapidjson/memorybuffer.h	/^typedef GenericMemoryBuffer<> MemoryBuffer;$/;"	t
MemoryPoolAllocator	include/rapidjson/allocators.h	/^    MemoryPoolAllocator(size_t chunkSize = kDefaultChunkCapacity, BaseAllocator* baseAllocator = 0) : $/;"	f	class:MemoryPoolAllocator
MemoryPoolAllocator	include/rapidjson/allocators.h	/^    MemoryPoolAllocator(void *buffer, size_t size, size_t chunkSize = kDefaultChunkCapacity, BaseAllocator* baseAllocator = 0) :$/;"	f	class:MemoryPoolAllocator
MemoryPoolAllocator	include/rapidjson/allocators.h	/^class MemoryPoolAllocator {$/;"	c
MemoryStream	include/rapidjson/memorystream.h	/^    MemoryStream(const Ch *src, size_t size) : src_(src), begin_(src), end_(src + size), size_(size) {}$/;"	f	struct:MemoryStream
MemoryStream	include/rapidjson/memorystream.h	/^struct MemoryStream {$/;"	s
MergeError	include/rapidjson/schema.h	/^    void MergeError(ValueType& other) {$/;"	f	class:GenericSchemaValidator
Min	include/rapidjson/internal/regex.h	/^    static SizeType Min(SizeType a, SizeType b) { return a < b ? a : b; }$/;"	f	class:internal::GenericRegex
Min3	include/rapidjson/internal/strtod.h	/^inline T Min3(T a, T b, T c) {$/;"	f	namespace:internal
MulAdd64	include/rapidjson/internal/biginteger.h	/^    static uint64_t MulAdd64(uint64_t a, uint64_t b, uint64_t k, uint64_t* outHigh) {$/;"	f	class:internal::BigInteger
MultiplyPow5	include/rapidjson/internal/biginteger.h	/^    BigInteger& MultiplyPow5(unsigned exp) {$/;"	f	class:internal::BigInteger
N	include/rapidjson/reader.h	1804;"	d
N	include/rapidjson/reader.h	1818;"	d
N16	include/rapidjson/reader.h	1805;"	d
N16	include/rapidjson/reader.h	1819;"	d
NO_PENDING_TIMEOUT	include/libwebsockets/lws-timeout-timer.h	/^	NO_PENDING_TIMEOUT					=  0,$/;"	e	enum:pending_timeout
NeedPercentEncode	include/rapidjson/pointer.h	/^    bool NeedPercentEncode(Ch c) const {$/;"	f	class:GenericPointer
NewRange	include/rapidjson/internal/regex.h	/^    SizeType NewRange(unsigned codepoint) {$/;"	f	class:internal::GenericRegex
NewState	include/rapidjson/internal/regex.h	/^    SizeType NewState(SizeType out, SizeType out1, unsigned codepoint) {$/;"	f	class:internal::GenericRegex
NextPositiveDouble	include/rapidjson/internal/ieee754.h	/^    double NextPositiveDouble() const {$/;"	f	class:internal::Double
No	include/rapidjson/internal/meta.h	/^    typedef char (&No) [2];$/;"	t	struct:internal::IsBaseOfImpl
NonConstIterator	include/rapidjson/document.h	/^    typedef GenericMemberIterator<false,Encoding,Allocator> NonConstIterator;$/;"	t	class:GenericMemberIterator
NoneOf	include/rapidjson/schema.h	/^    void NoneOf(ISchemaValidator** subvalidators, SizeType count) {$/;"	f	class:GenericSchemaValidator
Normalize	include/rapidjson/internal/diyfp.h	/^    DiyFp Normalize() const {$/;"	f	struct:internal::DiyFp
NormalizeBoundary	include/rapidjson/internal/diyfp.h	/^    DiyFp NormalizeBoundary() const {$/;"	f	struct:internal::DiyFp
NormalizedBoundaries	include/rapidjson/internal/diyfp.h	/^    void NormalizedBoundaries(DiyFp* minus, DiyFp* plus) const {$/;"	f	struct:internal::DiyFp
NotAllOf	include/rapidjson/schema.h	/^    void NotAllOf(ISchemaValidator** subvalidators, SizeType count) {$/;"	f	class:GenericSchemaValidator
NotExpr	include/rapidjson/internal/meta.h	/^template <typename C> struct NotExpr  : SelectIf<C,FalseType,TrueType>::Type {};$/;"	s	namespace:internal
NotMultipleOf	include/rapidjson/schema.h	/^    void NotMultipleOf(double actual, const SValue& expected) {$/;"	f	class:GenericSchemaValidator
NotMultipleOf	include/rapidjson/schema.h	/^    void NotMultipleOf(int64_t actual, const SValue& expected) {$/;"	f	class:GenericSchemaValidator
NotMultipleOf	include/rapidjson/schema.h	/^    void NotMultipleOf(uint64_t actual, const SValue& expected) {$/;"	f	class:GenericSchemaValidator
NotNullStrLen	include/rapidjson/document.h	/^    SizeType NotNullStrLen(const CharType* str) {$/;"	f	struct:GenericStringRef
NotOneOf	include/rapidjson/schema.h	/^    void NotOneOf(ISchemaValidator** subvalidators, SizeType count) {$/;"	f	class:GenericSchemaValidator
Null	include/rapidjson/document.h	/^    bool Null() { new (stack_.template Push<ValueType>()) ValueType(); return true; }$/;"	f	class:GenericDocument
Null	include/rapidjson/prettywriter.h	/^    bool Null()                 { PrettyPrefix(kNullType);   return Base::EndValue(Base::WriteNull()); }$/;"	f	class:PrettyWriter
Null	include/rapidjson/reader.h	/^    bool Null() { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Null	include/rapidjson/schema.h	/^    bool Null()             { RAPIDJSON_SCHEMA_HANDLE_VALUE_(Null,   (CurrentContext()), ( )); }$/;"	f	class:GenericSchemaValidator
Null	include/rapidjson/schema.h	/^    bool Null() { return WriteType(kNullType); }$/;"	f	class:internal::Hasher
Null	include/rapidjson/schema.h	/^    bool Null(Context& context) const {$/;"	f	class:internal::Schema
Null	include/rapidjson/writer.h	/^    bool Null()                 { Prefix(kNullType);   return EndValue(WriteNull()); }$/;"	f	class:Writer
NullToken	include/rapidjson/reader.h	/^        NullToken,$/;"	e	enum:GenericReader::Token
Number	include/rapidjson/document.h	/^    union Number {$/;"	u	class:GenericValue
Number	include/rapidjson/schema.h	/^    struct Number {$/;"	s	class:internal::Hasher
NumberStream	include/rapidjson/reader.h	/^        NumberStream(GenericReader& reader, InputStream& is) : Base(reader, is) {}$/;"	f	class:GenericReader::NumberStream
NumberStream	include/rapidjson/reader.h	/^        NumberStream(GenericReader& reader, InputStream& is) : Base(reader, is), stackStream(reader.stack_) {}$/;"	f	class:GenericReader::NumberStream
NumberStream	include/rapidjson/reader.h	/^        NumberStream(GenericReader& reader, InputStream& s) : is(s) { (void)reader;  }$/;"	f	class:GenericReader::NumberStream
NumberStream	include/rapidjson/reader.h	/^    class NumberStream<InputStream, false, false> {$/;"	c	class:GenericReader
NumberStream	include/rapidjson/reader.h	/^    class NumberStream<InputStream, true, false> : public NumberStream<InputStream, false, false> {$/;"	c	class:GenericReader
NumberStream	include/rapidjson/reader.h	/^    class NumberStream<InputStream, true, true> : public NumberStream<InputStream, true, false> {$/;"	c	class:GenericReader
NumberToken	include/rapidjson/reader.h	/^        NumberToken,$/;"	e	enum:GenericReader::Token
OStreamWrapper	include/rapidjson/ostreamwrapper.h	/^typedef BasicOStreamWrapper<std::ostream> OStreamWrapper;$/;"	t
O_RDONLY	include/libwebsockets.h	66;"	d
Object	include/rapidjson/document.h	/^    typedef GenericObject<false, ValueT> Object;$/;"	t	class:GenericObject
Object	include/rapidjson/document.h	/^    typedef GenericObject<false, ValueType> Object;$/;"	t	class:GenericValue
ObjectData	include/rapidjson/document.h	/^    struct ObjectData {$/;"	s	class:GenericValue
ObjectEmpty	include/rapidjson/document.h	/^    bool ObjectEmpty() const { RAPIDJSON_ASSERT(IsObject()); return data_.o.size == 0; }$/;"	f	class:GenericValue
ObjectEmpty	include/rapidjson/document.h	/^    bool ObjectEmpty() const { return value_.ObjectEmpty(); }$/;"	f	class:GenericObject
ObjectType	include/rapidjson/document.h	/^    typedef typename ValueType::ConstObject ObjectType;$/;"	t	struct:internal::TypeHelper
ObjectType	include/rapidjson/document.h	/^    typedef typename ValueType::Object ObjectType;$/;"	t	struct:internal::TypeHelper
Offset	include/rapidjson/error/error.h	/^    size_t Offset() const { return offset_; }$/;"	f	struct:ParseResult
Operator	include/rapidjson/internal/regex.h	/^    enum Operator {$/;"	g	class:internal::GenericRegex
OrExpr	include/rapidjson/internal/meta.h	/^template <typename C1, typename C2> struct OrExpr  : OrExprCond<C1::Value, C2::Value>::Type {};$/;"	s	namespace:internal
OrExprCond	include/rapidjson/internal/meta.h	/^template <> struct OrExprCond<false, false> : FalseType {};$/;"	s	namespace:internal
OrExprCond	include/rapidjson/internal/meta.h	/^template <bool Cond1, bool Cond2> struct OrExprCond : TrueType {};$/;"	s	namespace:internal
Override	include/rapidjson/reader.h	/^    typedef typename internal::SelectIf<internal::IsSame<Derived, void>, BaseReaderHandler, Derived>::Type Override;$/;"	t	struct:BaseReaderHandler
PENDING_FLUSH_STORED_SEND_BEFORE_CLOSE	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_FLUSH_STORED_SEND_BEFORE_CLOSE			= 12,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_AWAITING_CLIENT_HS_SEND	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_AWAITING_CLIENT_HS_SEND			= 11,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_AWAITING_CONNECT_RESPONSE	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_AWAITING_CONNECT_RESPONSE		=  2,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_AWAITING_PING	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_AWAITING_PING				=  5,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_AWAITING_PROXY_RESPONSE	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_AWAITING_PROXY_RESPONSE			=  1,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_AWAITING_SERVER_RESPONSE	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_AWAITING_SERVER_RESPONSE		=  4,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_AWAITING_SOCKS_AUTH_REPLY	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_AWAITING_SOCKS_AUTH_REPLY		= 21,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_AWAITING_SOCKS_CONNECT_REPLY	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_AWAITING_SOCKS_CONNECT_REPLY		= 20,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_AWAITING_SOCKS_GREETING_REPLY	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_AWAITING_SOCKS_GREETING_REPLY	        = 19,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_CGI	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_CGI					= 14,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_CLIENT_CONN_IDLE	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_CLIENT_CONN_IDLE			= 27,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_CLIENT_ISSUE_PAYLOAD	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_CLIENT_ISSUE_PAYLOAD			= 18,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_CLOSE_ACK	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_CLOSE_ACK				=  6,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_CLOSE_SEND	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_CLOSE_SEND				= 24,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_ESTABLISH_WITH_SERVER	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_ESTABLISH_WITH_SERVER			=  3,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_HOLDING_AH	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_HOLDING_AH				= 25,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_HTTP_CONTENT	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_HTTP_CONTENT				= 10,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_HTTP_KEEPALIVE_IDLE	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_HTTP_KEEPALIVE_IDLE			= 15,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_KILLED_BY_PARENT	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_KILLED_BY_PARENT			= 23,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_KILLED_BY_PROXY_CLIENT_CLOSE	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_KILLED_BY_PROXY_CLIENT_CLOSE		= 31,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_KILLED_BY_SSL_INFO	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_KILLED_BY_SSL_INFO			= 22,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_LAGGING	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_LAGGING					= 28,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_SENT_CLIENT_HANDSHAKE	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_SENT_CLIENT_HANDSHAKE			=  8,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_SHUTDOWN_FLUSH	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_SHUTDOWN_FLUSH				= 13,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_SSL_ACCEPT	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_SSL_ACCEPT				=  9,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_THREADPOOL	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_THREADPOOL				= 29,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_THREADPOOL_TASK	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_THREADPOOL_TASK				= 30,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_UDP_IDLE	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_UDP_IDLE				= 26,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_UNUSED1	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_UNUSED1					=  7,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_USER_REASON_BASE	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_USER_REASON_BASE			= 1000$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_WS_PONG_CHECK_GET_PONG	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_WS_PONG_CHECK_GET_PONG			= 17,$/;"	e	enum:pending_timeout
PENDING_TIMEOUT_WS_PONG_CHECK_SEND_PING	include/libwebsockets/lws-timeout-timer.h	/^	PENDING_TIMEOUT_WS_PONG_CHECK_SEND_PING			= 16,$/;"	e	enum:pending_timeout
POLLERR	include/libwebsockets/lws-esp32.h	35;"	d
POLLHUP	include/libwebsockets/lws-esp32.h	36;"	d
POLLIN	include/libwebsockets/lws-esp32.h	32;"	d
POLLNVAL	include/libwebsockets/lws-esp32.h	37;"	d
POLLOUT	include/libwebsockets/lws-esp32.h	34;"	d
POLLPRI	include/libwebsockets/lws-esp32.h	33;"	d
PRIX16	include/rapidjson/msinttypes/inttypes.h	118;"	d
PRIX32	include/rapidjson/msinttypes/inttypes.h	131;"	d
PRIX64	include/rapidjson/msinttypes/inttypes.h	144;"	d
PRIX8	include/rapidjson/msinttypes/inttypes.h	105;"	d
PRIXFAST16	include/rapidjson/msinttypes/inttypes.h	126;"	d
PRIXFAST32	include/rapidjson/msinttypes/inttypes.h	139;"	d
PRIXFAST64	include/rapidjson/msinttypes/inttypes.h	152;"	d
PRIXFAST8	include/rapidjson/msinttypes/inttypes.h	113;"	d
PRIXLEAST16	include/rapidjson/msinttypes/inttypes.h	122;"	d
PRIXLEAST32	include/rapidjson/msinttypes/inttypes.h	135;"	d
PRIXLEAST64	include/rapidjson/msinttypes/inttypes.h	148;"	d
PRIXLEAST8	include/rapidjson/msinttypes/inttypes.h	109;"	d
PRIXMAX	include/rapidjson/msinttypes/inttypes.h	157;"	d
PRIXPTR	include/rapidjson/msinttypes/inttypes.h	162;"	d
PRId16	include/rapidjson/msinttypes/inttypes.h	74;"	d
PRId32	include/rapidjson/msinttypes/inttypes.h	81;"	d
PRId64	include/rapidjson/msinttypes/inttypes.h	88;"	d
PRId8	include/rapidjson/msinttypes/inttypes.h	67;"	d
PRIdFAST16	include/rapidjson/msinttypes/inttypes.h	78;"	d
PRIdFAST32	include/rapidjson/msinttypes/inttypes.h	85;"	d
PRIdFAST64	include/rapidjson/msinttypes/inttypes.h	92;"	d
PRIdFAST8	include/rapidjson/msinttypes/inttypes.h	71;"	d
PRIdLEAST16	include/rapidjson/msinttypes/inttypes.h	76;"	d
PRIdLEAST32	include/rapidjson/msinttypes/inttypes.h	83;"	d
PRIdLEAST64	include/rapidjson/msinttypes/inttypes.h	90;"	d
PRIdLEAST8	include/rapidjson/msinttypes/inttypes.h	69;"	d
PRIdMAX	include/rapidjson/msinttypes/inttypes.h	95;"	d
PRIdPTR	include/rapidjson/msinttypes/inttypes.h	98;"	d
PRIi16	include/rapidjson/msinttypes/inttypes.h	75;"	d
PRIi32	include/rapidjson/msinttypes/inttypes.h	82;"	d
PRIi64	include/rapidjson/msinttypes/inttypes.h	89;"	d
PRIi8	include/rapidjson/msinttypes/inttypes.h	68;"	d
PRIiFAST16	include/rapidjson/msinttypes/inttypes.h	79;"	d
PRIiFAST32	include/rapidjson/msinttypes/inttypes.h	86;"	d
PRIiFAST64	include/rapidjson/msinttypes/inttypes.h	93;"	d
PRIiFAST8	include/rapidjson/msinttypes/inttypes.h	72;"	d
PRIiLEAST16	include/rapidjson/msinttypes/inttypes.h	77;"	d
PRIiLEAST32	include/rapidjson/msinttypes/inttypes.h	84;"	d
PRIiLEAST64	include/rapidjson/msinttypes/inttypes.h	91;"	d
PRIiLEAST8	include/rapidjson/msinttypes/inttypes.h	70;"	d
PRIiMAX	include/rapidjson/msinttypes/inttypes.h	96;"	d
PRIiPTR	include/rapidjson/msinttypes/inttypes.h	99;"	d
PRIo16	include/rapidjson/msinttypes/inttypes.h	115;"	d
PRIo32	include/rapidjson/msinttypes/inttypes.h	128;"	d
PRIo64	include/rapidjson/msinttypes/inttypes.h	141;"	d
PRIo8	include/rapidjson/msinttypes/inttypes.h	102;"	d
PRIoFAST16	include/rapidjson/msinttypes/inttypes.h	123;"	d
PRIoFAST32	include/rapidjson/msinttypes/inttypes.h	136;"	d
PRIoFAST64	include/rapidjson/msinttypes/inttypes.h	149;"	d
PRIoFAST8	include/rapidjson/msinttypes/inttypes.h	110;"	d
PRIoLEAST16	include/rapidjson/msinttypes/inttypes.h	119;"	d
PRIoLEAST32	include/rapidjson/msinttypes/inttypes.h	132;"	d
PRIoLEAST64	include/rapidjson/msinttypes/inttypes.h	145;"	d
PRIoLEAST8	include/rapidjson/msinttypes/inttypes.h	106;"	d
PRIoMAX	include/rapidjson/msinttypes/inttypes.h	154;"	d
PRIoPTR	include/rapidjson/msinttypes/inttypes.h	159;"	d
PRIu16	include/rapidjson/msinttypes/inttypes.h	116;"	d
PRIu32	include/rapidjson/msinttypes/inttypes.h	129;"	d
PRIu64	include/rapidjson/msinttypes/inttypes.h	142;"	d
PRIu8	include/rapidjson/msinttypes/inttypes.h	103;"	d
PRIuFAST16	include/rapidjson/msinttypes/inttypes.h	124;"	d
PRIuFAST32	include/rapidjson/msinttypes/inttypes.h	137;"	d
PRIuFAST64	include/rapidjson/msinttypes/inttypes.h	150;"	d
PRIuFAST8	include/rapidjson/msinttypes/inttypes.h	111;"	d
PRIuLEAST16	include/rapidjson/msinttypes/inttypes.h	120;"	d
PRIuLEAST32	include/rapidjson/msinttypes/inttypes.h	133;"	d
PRIuLEAST64	include/rapidjson/msinttypes/inttypes.h	146;"	d
PRIuLEAST8	include/rapidjson/msinttypes/inttypes.h	107;"	d
PRIuMAX	include/rapidjson/msinttypes/inttypes.h	155;"	d
PRIuPTR	include/rapidjson/msinttypes/inttypes.h	160;"	d
PRIx16	include/rapidjson/msinttypes/inttypes.h	117;"	d
PRIx32	include/rapidjson/msinttypes/inttypes.h	130;"	d
PRIx64	include/rapidjson/msinttypes/inttypes.h	143;"	d
PRIx8	include/rapidjson/msinttypes/inttypes.h	104;"	d
PRIxFAST16	include/rapidjson/msinttypes/inttypes.h	125;"	d
PRIxFAST32	include/rapidjson/msinttypes/inttypes.h	138;"	d
PRIxFAST64	include/rapidjson/msinttypes/inttypes.h	151;"	d
PRIxFAST8	include/rapidjson/msinttypes/inttypes.h	112;"	d
PRIxLEAST16	include/rapidjson/msinttypes/inttypes.h	121;"	d
PRIxLEAST32	include/rapidjson/msinttypes/inttypes.h	134;"	d
PRIxLEAST64	include/rapidjson/msinttypes/inttypes.h	147;"	d
PRIxLEAST8	include/rapidjson/msinttypes/inttypes.h	108;"	d
PRIxMAX	include/rapidjson/msinttypes/inttypes.h	156;"	d
PRIxPTR	include/rapidjson/msinttypes/inttypes.h	161;"	d
PTRDIFF_MAX	include/rapidjson/msinttypes/stdint.h	239;"	d
PTRDIFF_MAX	include/rapidjson/msinttypes/stdint.h	242;"	d
PTRDIFF_MIN	include/rapidjson/msinttypes/stdint.h	238;"	d
PTRDIFF_MIN	include/rapidjson/msinttypes/stdint.h	241;"	d
Parse	include/rapidjson/document.h	/^    GenericDocument& Parse(const Ch* str) {$/;"	f	class:GenericDocument
Parse	include/rapidjson/document.h	/^    GenericDocument& Parse(const Ch* str, size_t length) {$/;"	f	class:GenericDocument
Parse	include/rapidjson/document.h	/^    GenericDocument& Parse(const std::basic_string<Ch>& str) {$/;"	f	class:GenericDocument
Parse	include/rapidjson/document.h	/^    GenericDocument& Parse(const std::basic_string<typename SourceEncoding::Ch>& str) {$/;"	f	class:GenericDocument
Parse	include/rapidjson/document.h	/^    GenericDocument& Parse(const typename SourceEncoding::Ch* str) {$/;"	f	class:GenericDocument
Parse	include/rapidjson/document.h	/^    GenericDocument& Parse(const typename SourceEncoding::Ch* str, size_t length) {$/;"	f	class:GenericDocument
Parse	include/rapidjson/internal/regex.h	/^    void Parse(DecodedStream<InputStream, Encoding>& ds) {$/;"	f	class:internal::GenericRegex
Parse	include/rapidjson/pointer.h	/^    void Parse(const Ch* source, size_t length) {$/;"	f	class:GenericPointer
Parse	include/rapidjson/reader.h	/^    ParseResult Parse(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseArray	include/rapidjson/reader.h	/^    void ParseArray(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseErrorCode	include/rapidjson/error/error.h	/^enum ParseErrorCode {$/;"	g
ParseFalse	include/rapidjson/reader.h	/^    void ParseFalse(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseFlag	include/rapidjson/reader.h	/^enum ParseFlag {$/;"	g
ParseHex4	include/rapidjson/reader.h	/^    unsigned ParseHex4(InputStream& is, size_t escapeOffset) {$/;"	f	class:GenericReader
ParseInsitu	include/rapidjson/document.h	/^    GenericDocument& ParseInsitu(Ch* str) {$/;"	f	class:GenericDocument
ParseNull	include/rapidjson/reader.h	/^    void ParseNull(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseNumber	include/rapidjson/reader.h	/^    void ParseNumber(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseObject	include/rapidjson/reader.h	/^    void ParseObject(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseRange	include/rapidjson/internal/regex.h	/^    bool ParseRange(DecodedStream<InputStream, Encoding>& ds, SizeType* range) {$/;"	f	class:internal::GenericRegex
ParseResult	include/rapidjson/error/error.h	/^    ParseResult() : code_(kParseErrorNone), offset_(0) {}$/;"	f	struct:ParseResult
ParseResult	include/rapidjson/error/error.h	/^    ParseResult(ParseErrorCode code, size_t offset) : code_(code), offset_(offset) {}$/;"	f	struct:ParseResult
ParseResult	include/rapidjson/error/error.h	/^struct ParseResult {$/;"	s
ParseStream	include/rapidjson/document.h	/^    GenericDocument& ParseStream(InputStream& is) {$/;"	f	class:GenericDocument
ParseString	include/rapidjson/reader.h	/^    void ParseString(InputStream& is, Handler& handler, bool isKey = false) {$/;"	f	class:GenericReader
ParseStringToStream	include/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE void ParseStringToStream(InputStream& is, OutputStream& os) {$/;"	f	class:GenericReader
ParseTrue	include/rapidjson/reader.h	/^    void ParseTrue(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseUint64	include/rapidjson/internal/biginteger.h	/^    static uint64_t ParseUint64(const char* begin, const char* end) {$/;"	f	class:internal::BigInteger
ParseUnsigned	include/rapidjson/internal/regex.h	/^    bool ParseUnsigned(DecodedStream<InputStream, Encoding>& ds, unsigned* u) {$/;"	f	class:internal::GenericRegex
ParseValue	include/rapidjson/reader.h	/^    void ParseValue(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
Patch	include/rapidjson/internal/regex.h	/^    void Patch(SizeType l, SizeType s) {$/;"	f	class:internal::GenericRegex
PatternProperty	include/rapidjson/schema.h	/^        PatternProperty() : schema(), pattern() {}$/;"	f	struct:internal::Schema::PatternProperty
PatternProperty	include/rapidjson/schema.h	/^    struct PatternProperty {$/;"	s	class:internal::Schema
PatternValidatorType	include/rapidjson/schema.h	/^    enum PatternValidatorType {$/;"	g	struct:internal::SchemaValidationContext
Peek	include/rapidjson/encodedstream.h	/^    Ch Peek() const { RAPIDJSON_ASSERT(false); return 0;}$/;"	f	class:AutoUTFOutputStream
Peek	include/rapidjson/encodedstream.h	/^    Ch Peek() const { RAPIDJSON_ASSERT(false); return 0;}$/;"	f	class:EncodedOutputStream
Peek	include/rapidjson/encodedstream.h	/^    Ch Peek() const { return current_; }$/;"	f	class:AutoUTFInputStream
Peek	include/rapidjson/encodedstream.h	/^    Ch Peek() const { return current_; }$/;"	f	class:EncodedInputStream
Peek	include/rapidjson/encodedstream.h	/^    Ch Peek() const { return is_.Peek(); }$/;"	f	class:EncodedInputStream
Peek	include/rapidjson/filereadstream.h	/^    Ch Peek() const { return *current_; }$/;"	f	class:FileReadStream
Peek	include/rapidjson/filewritestream.h	/^    char Peek() const { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
Peek	include/rapidjson/internal/regex.h	/^    unsigned Peek() { return codepoint_; }$/;"	f	class:internal::DecodedStream
Peek	include/rapidjson/istreamwrapper.h	/^    Ch Peek() const { $/;"	f	class:BasicIStreamWrapper
Peek	include/rapidjson/memorystream.h	/^    Ch Peek() const { return RAPIDJSON_UNLIKELY(src_ == end_) ? '\\0' : *src_; }$/;"	f	struct:MemoryStream
Peek	include/rapidjson/ostreamwrapper.h	/^    char Peek() const { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:BasicOStreamWrapper
Peek	include/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE Ch Peek() const { return is.Peek(); }$/;"	f	class:GenericReader::NumberStream
Peek	include/rapidjson/stream.h	/^    Ch Peek() const { return *src_; }$/;"	f	struct:GenericStringStream
Peek	include/rapidjson/stream.h	/^    Ch Peek() const { return is_.Peek(); }$/;"	f	class:GenericStreamWrapper
Peek	include/rapidjson/stream.h	/^    Ch Peek() { return *src_; }$/;"	f	struct:GenericInsituStringStream
Peek4	include/rapidjson/filereadstream.h	/^    const Ch* Peek4() const {$/;"	f	class:FileReadStream
Peek4	include/rapidjson/istreamwrapper.h	/^    const Ch* Peek4() const {$/;"	f	class:BasicIStreamWrapper
Peek4	include/rapidjson/memorystream.h	/^    const Ch* Peek4() const {$/;"	f	struct:MemoryStream
Peek4	include/rapidjson/stream.h	/^    const Ch* Peek4() const { return is_.Peek4(); }$/;"	f	class:GenericStreamWrapper
PercentDecodeStream	include/rapidjson/pointer.h	/^        PercentDecodeStream(const Ch* source, const Ch* end) : src_(source), head_(source), end_(end), valid_(true) {}$/;"	f	class:GenericPointer::PercentDecodeStream
PercentDecodeStream	include/rapidjson/pointer.h	/^    class PercentDecodeStream {$/;"	c	class:GenericPointer
PercentEncodeStream	include/rapidjson/pointer.h	/^        PercentEncodeStream(OutputStream& os) : os_(os) {}$/;"	f	class:GenericPointer::PercentEncodeStream
PercentEncodeStream	include/rapidjson/pointer.h	/^    class PercentEncodeStream {$/;"	c	class:GenericPointer
PlainType	include/rapidjson/document.h	/^    typedef GenericMember<Encoding,Allocator> PlainType;$/;"	t	class:GenericMemberIterator
PlainType	include/rapidjson/document.h	/^    typedef ValueT PlainType;$/;"	t	class:GenericArray
PlainType	include/rapidjson/document.h	/^    typedef ValueT PlainType;$/;"	t	class:GenericObject
Pointer	include/rapidjson/document.h	/^    typedef pointer         Pointer;$/;"	t	class:GenericMemberIterator
Pointer	include/rapidjson/fwd.h	/^typedef GenericPointer<Value, CrtAllocator> Pointer;$/;"	t
Pointer	include/rapidjson/pointer.h	/^typedef GenericPointer<Value> Pointer;$/;"	t
PointerParseErrorCode	include/rapidjson/pointer.h	/^enum PointerParseErrorCode {$/;"	g
PointerType	include/rapidjson/schema.h	/^    typedef GenericPointer<ValueType, Allocator> PointerType;$/;"	t	class:GenericSchemaDocument
PointerType	include/rapidjson/schema.h	/^    typedef typename SchemaDocumentType::PointerType PointerType;$/;"	t	class:GenericSchemaValidator
PointerType	include/rapidjson/schema.h	/^    typedef typename SchemaDocumentType::PointerType PointerType;$/;"	t	class:SchemaValidatingReader
PointerType	include/rapidjson/schema.h	/^    typedef typename SchemaDocumentType::PointerType PointerType;$/;"	t	class:internal::Schema
Pop	include/rapidjson/internal/stack.h	/^    T* Pop(size_t count) {$/;"	f	class:internal::Stack
Pop	include/rapidjson/memorybuffer.h	/^    void Pop(size_t count) { stack_.template Pop<Ch>(count); }$/;"	f	struct:GenericMemoryBuffer
Pop	include/rapidjson/reader.h	/^        Ch* Pop() {$/;"	f	class:GenericReader::StackStream
Pop	include/rapidjson/reader.h	/^        const char* Pop() { return 0; }$/;"	f	class:GenericReader::NumberStream
Pop	include/rapidjson/reader.h	/^        const char* Pop() {$/;"	f	class:GenericReader::NumberStream
Pop	include/rapidjson/stream.h	/^    void Pop(size_t count) { dst_ -= count; }$/;"	f	struct:GenericInsituStringStream
Pop	include/rapidjson/stringbuffer.h	/^    void Pop(size_t count) { stack_.template Pop<Ch>(count); }$/;"	f	class:GenericStringBuffer
PopBack	include/rapidjson/document.h	/^    GenericArray PopBack() const { value_.PopBack(); return *this; }$/;"	f	class:GenericArray
PopBack	include/rapidjson/document.h	/^    GenericValue& PopBack() {$/;"	f	class:GenericValue
PopSchema	include/rapidjson/schema.h	/^    RAPIDJSON_FORCEINLINE void PopSchema() {$/;"	f	class:GenericSchemaValidator
Populate	include/rapidjson/document.h	/^    GenericDocument& Populate(Generator& g) {$/;"	f	class:GenericDocument
Pow10	include/rapidjson/internal/pow10.h	/^inline double Pow10(int n) {$/;"	f	namespace:internal
Predict	include/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE IterativeParsingState Predict(IterativeParsingState state, Token token) const {$/;"	f	class:GenericReader
Prefix	include/rapidjson/writer.h	/^    void Prefix(Type type) {$/;"	f	class:Writer
Prettify	include/rapidjson/internal/dtoa.h	/^inline char* Prettify(char* buffer, int length, int k, int maxDecimalPlaces) {$/;"	f	namespace:internal
PrettyFormatOptions	include/rapidjson/prettywriter.h	/^enum PrettyFormatOptions {$/;"	g
PrettyPrefix	include/rapidjson/prettywriter.h	/^    void PrettyPrefix(Type type) {$/;"	f	class:PrettyWriter
PrettyWriter	include/rapidjson/prettywriter.h	/^    PrettyWriter(PrettyWriter&& rhs) :$/;"	f	class:PrettyWriter
PrettyWriter	include/rapidjson/prettywriter.h	/^    explicit PrettyWriter(OutputStream& os, StackAllocator* allocator = 0, size_t levelDepth = Base::kDefaultLevelDepth) : $/;"	f	class:PrettyWriter
PrettyWriter	include/rapidjson/prettywriter.h	/^    explicit PrettyWriter(StackAllocator* allocator = 0, size_t levelDepth = Base::kDefaultLevelDepth) : $/;"	f	class:PrettyWriter
PrettyWriter	include/rapidjson/prettywriter.h	/^class PrettyWriter : public Writer<OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags> {$/;"	c
PrintInvalidDocument	include/rapidjson/schema.h	/^inline void PrintInvalidDocument(const char* document) {$/;"	f	namespace:internal
PrintInvalidDocument	include/rapidjson/schema.h	/^inline void PrintInvalidDocument(const wchar_t* document) {$/;"	f	namespace:internal
PrintInvalidKeyword	include/rapidjson/schema.h	/^inline void PrintInvalidKeyword(const char* keyword) {$/;"	f	namespace:internal
PrintInvalidKeyword	include/rapidjson/schema.h	/^inline void PrintInvalidKeyword(const wchar_t* keyword) {$/;"	f	namespace:internal
PrintValidatorPointers	include/rapidjson/schema.h	/^inline void PrintValidatorPointers(unsigned depth, const char* s, const char* d) {$/;"	f	namespace:internal
PrintValidatorPointers	include/rapidjson/schema.h	/^inline void PrintValidatorPointers(unsigned depth, const wchar_t* s, const wchar_t* d) {$/;"	f	namespace:internal
Property	include/rapidjson/schema.h	/^        Property() : schema(), dependenciesSchema(), dependenciesValidatorIndex(), dependencies(), required(false) {}$/;"	f	struct:internal::Schema::Property
Property	include/rapidjson/schema.h	/^    struct Property {$/;"	s	class:internal::Schema
PropertyViolations	include/rapidjson/schema.h	/^    void PropertyViolations(ISchemaValidator** subvalidators, SizeType count) {$/;"	f	class:GenericSchemaValidator
Push	include/rapidjson/internal/stack.h	/^    RAPIDJSON_FORCEINLINE T* Push(size_t count = 1) {$/;"	f	class:internal::Stack
Push	include/rapidjson/memorybuffer.h	/^    Ch* Push(size_t count) { return stack_.template Push<Ch>(count); }$/;"	f	struct:GenericMemoryBuffer
Push	include/rapidjson/reader.h	/^		  RAPIDJSON_FORCEINLINE void Push(char) {}$/;"	f	class:GenericReader::NumberStream
Push	include/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE void Push(char c) {$/;"	f	class:GenericReader::NumberStream
Push	include/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE void* Push(SizeType count) {$/;"	f	class:GenericReader::StackStream
Push	include/rapidjson/stream.h	/^    Ch* Push(size_t count) { Ch* begin = dst_; dst_ += count; return begin; }$/;"	f	struct:GenericInsituStringStream
Push	include/rapidjson/stringbuffer.h	/^    Ch* Push(size_t count) { return stack_.template Push<Ch>(count); }$/;"	f	class:GenericStringBuffer
PushBack	include/rapidjson/document.h	/^    GenericArray PushBack(StringRefType value, AllocatorType& allocator) const { value_.PushBack(value, allocator); return *this; }$/;"	f	class:GenericArray
PushBack	include/rapidjson/document.h	/^    GenericArray PushBack(ValueType& value, AllocatorType& allocator) const { value_.PushBack(value, allocator); return *this; }$/;"	f	class:GenericArray
PushBack	include/rapidjson/document.h	/^    GenericArray PushBack(ValueType&& value, AllocatorType& allocator) const { value_.PushBack(value, allocator); return *this; }$/;"	f	class:GenericArray
PushBack	include/rapidjson/document.h	/^    GenericValue& PushBack(GenericValue& value, Allocator& allocator) {$/;"	f	class:GenericValue
PushBack	include/rapidjson/document.h	/^    GenericValue& PushBack(GenericValue&& value, Allocator& allocator) {$/;"	f	class:GenericValue
PushBack	include/rapidjson/document.h	/^    GenericValue& PushBack(StringRefType value, Allocator& allocator) {$/;"	f	class:GenericValue
PushBack	include/rapidjson/document.h	/^    PushBack(T value, Allocator& allocator) {$/;"	f	class:GenericValue
PushBack	include/rapidjson/document.h	/^    template <typename T> RAPIDJSON_DISABLEIF_RETURN((internal::OrExpr<internal::IsPointer<T>, internal::IsGenericValue<T> >), (const GenericArray&)) PushBack(T value, AllocatorType& allocator) const { value_.PushBack(value, allocator); return *this; }$/;"	f	class:GenericArray
PushBack	include/rapidjson/internal/biginteger.h	/^    void PushBack(Type digit) {$/;"	f	class:internal::BigInteger
PushOperand	include/rapidjson/internal/regex.h	/^    void PushOperand(Stack<Allocator>& operandStack, unsigned codepoint) {$/;"	f	class:internal::GenericRegex
PushSchema	include/rapidjson/schema.h	/^    RAPIDJSON_FORCEINLINE void PushSchema(const SchemaType& schema) { new (schemaStack_.template Push<Context>()) Context(*this, *this, &schema); }$/;"	f	class:GenericSchemaValidator
PushUnsafe	include/rapidjson/internal/stack.h	/^    RAPIDJSON_FORCEINLINE T* PushUnsafe(size_t count = 1) {$/;"	f	class:internal::Stack
PushUnsafe	include/rapidjson/stringbuffer.h	/^    Ch* PushUnsafe(size_t count) { return stack_.template PushUnsafe<Ch>(count); }$/;"	f	class:GenericStringBuffer
Put	include/rapidjson/encodedstream.h	/^    void Put(Ch c) { Encoding::Put(os_, c);  }$/;"	f	class:EncodedOutputStream
Put	include/rapidjson/encodedstream.h	/^    void Put(Ch c) { putFunc_(*os_, c); }$/;"	f	class:AutoUTFOutputStream
Put	include/rapidjson/encodedstream.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	class:AutoUTFInputStream
Put	include/rapidjson/encodedstream.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	class:EncodedInputStream
Put	include/rapidjson/encodedstream.h	/^    void Put(Ch) {}$/;"	f	class:EncodedInputStream
Put	include/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, Ch c) {$/;"	f	struct:ASCII
Put	include/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, Ch c) {$/;"	f	struct:UTF8
Put	include/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, CharType c) {$/;"	f	struct:UTF16BE
Put	include/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, CharType c) {$/;"	f	struct:UTF16LE
Put	include/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, CharType c) {$/;"	f	struct:UTF32BE
Put	include/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, CharType c) {$/;"	f	struct:UTF32LE
Put	include/rapidjson/filereadstream.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	class:FileReadStream
Put	include/rapidjson/filewritestream.h	/^    void Put(char c) { $/;"	f	class:FileWriteStream
Put	include/rapidjson/istreamwrapper.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	class:BasicIStreamWrapper
Put	include/rapidjson/memorybuffer.h	/^    void Put(Ch c) { *stack_.template Push<Ch>() = c; }$/;"	f	struct:GenericMemoryBuffer
Put	include/rapidjson/memorystream.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	struct:MemoryStream
Put	include/rapidjson/ostreamwrapper.h	/^    void Put(Ch c) {$/;"	f	class:BasicOStreamWrapper
Put	include/rapidjson/pointer.h	/^        void Put(char c) { \/\/ UTF-8 must be byte$/;"	f	class:GenericPointer::PercentEncodeStream
Put	include/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE void Put(Ch c) {$/;"	f	class:GenericReader::StackStream
Put	include/rapidjson/stream.h	/^    void Put(Ch c) { RAPIDJSON_ASSERT(dst_ != 0); *dst_++ = c; }$/;"	f	struct:GenericInsituStringStream
Put	include/rapidjson/stream.h	/^    void Put(Ch ch) { is_.Put(ch); }$/;"	f	class:GenericStreamWrapper
Put	include/rapidjson/stream.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	struct:GenericStringStream
Put	include/rapidjson/stringbuffer.h	/^    void Put(Ch c) { *stack_.template Push<Ch>() = c; }$/;"	f	class:GenericStringBuffer
PutBOM	include/rapidjson/encodedstream.h	/^    void PutBOM() { $/;"	f	class:AutoUTFOutputStream
PutBOM	include/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:ASCII
PutBOM	include/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF16BE
PutBOM	include/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF16LE
PutBOM	include/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF32BE
PutBOM	include/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF32LE
PutBOM	include/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF8
PutBegin	include/rapidjson/encodedstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFInputStream
PutBegin	include/rapidjson/encodedstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFOutputStream
PutBegin	include/rapidjson/encodedstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:EncodedInputStream
PutBegin	include/rapidjson/encodedstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:EncodedOutputStream
PutBegin	include/rapidjson/encodedstream.h	/^    Ch* PutBegin() { return 0; }$/;"	f	class:EncodedInputStream
PutBegin	include/rapidjson/filereadstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileReadStream
PutBegin	include/rapidjson/filewritestream.h	/^    char* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
PutBegin	include/rapidjson/istreamwrapper.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:BasicIStreamWrapper
PutBegin	include/rapidjson/memorystream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	struct:MemoryStream
PutBegin	include/rapidjson/ostreamwrapper.h	/^    char* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:BasicOStreamWrapper
PutBegin	include/rapidjson/stream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	struct:GenericStringStream
PutBegin	include/rapidjson/stream.h	/^    Ch* PutBegin() { return dst_ = src_; }$/;"	f	struct:GenericInsituStringStream
PutBegin	include/rapidjson/stream.h	/^    Ch* PutBegin() { return is_.PutBegin(); }$/;"	f	class:GenericStreamWrapper
PutEnd	include/rapidjson/encodedstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFInputStream
PutEnd	include/rapidjson/encodedstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFOutputStream
PutEnd	include/rapidjson/encodedstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:EncodedInputStream
PutEnd	include/rapidjson/encodedstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:EncodedOutputStream
PutEnd	include/rapidjson/encodedstream.h	/^    size_t PutEnd(Ch*) { return 0; }$/;"	f	class:EncodedInputStream
PutEnd	include/rapidjson/filereadstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileReadStream
PutEnd	include/rapidjson/filewritestream.h	/^    size_t PutEnd(char*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
PutEnd	include/rapidjson/istreamwrapper.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:BasicIStreamWrapper
PutEnd	include/rapidjson/memorystream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	struct:MemoryStream
PutEnd	include/rapidjson/ostreamwrapper.h	/^    size_t PutEnd(char*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:BasicOStreamWrapper
PutEnd	include/rapidjson/stream.h	/^    size_t PutEnd(Ch* begin) { return static_cast<size_t>(dst_ - begin); }$/;"	f	struct:GenericInsituStringStream
PutEnd	include/rapidjson/stream.h	/^    size_t PutEnd(Ch* ch) { return is_.PutEnd(ch); }$/;"	f	class:GenericStreamWrapper
PutEnd	include/rapidjson/stream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	struct:GenericStringStream
PutFunc	include/rapidjson/encodedstream.h	/^    typedef void (*PutFunc)(OutputByteStream&, Ch);$/;"	t	class:AutoUTFOutputStream
PutN	include/rapidjson/filewritestream.h	/^    void PutN(char c, size_t n) {$/;"	f	class:FileWriteStream
PutN	include/rapidjson/filewritestream.h	/^inline void PutN(FileWriteStream& stream, char c, size_t n) {$/;"	f
PutN	include/rapidjson/memorybuffer.h	/^inline void PutN(MemoryBuffer& memoryBuffer, char c, size_t n) {$/;"	f
PutN	include/rapidjson/stream.h	/^inline void PutN(Stream& stream, Ch c, size_t n) {$/;"	f
PutN	include/rapidjson/stringbuffer.h	/^inline void PutN(GenericStringBuffer<UTF8<> >& stream, char c, size_t n) {$/;"	f
PutReserve	include/rapidjson/stream.h	/^inline void PutReserve(Stream& stream, size_t count) {$/;"	f
PutReserve	include/rapidjson/stringbuffer.h	/^inline void PutReserve(GenericStringBuffer<Encoding, Allocator>& stream, size_t count) {$/;"	f
PutUnsafe	include/rapidjson/stream.h	/^inline void PutUnsafe(Stream& stream, typename Stream::Ch c) {$/;"	f
PutUnsafe	include/rapidjson/stringbuffer.h	/^    void PutUnsafe(Ch c) { *stack_.template PushUnsafe<Ch>() = c; }$/;"	f	class:GenericStringBuffer
PutUnsafe	include/rapidjson/stringbuffer.h	/^inline void PutUnsafe(GenericStringBuffer<Encoding, Allocator>& stream, typename Encoding::Ch c) {$/;"	f
RAPIDJSON_48BITPOINTER_OPTIMIZATION	include/rapidjson/rapidjson.h	305;"	d
RAPIDJSON_48BITPOINTER_OPTIMIZATION	include/rapidjson/rapidjson.h	307;"	d
RAPIDJSON_64BIT	include/rapidjson/rapidjson.h	259;"	d
RAPIDJSON_64BIT	include/rapidjson/rapidjson.h	261;"	d
RAPIDJSON_ALIGN	include/rapidjson/rapidjson.h	276;"	d
RAPIDJSON_ALLOCATORS_H_	include/rapidjson/allocators.h	16;"	d
RAPIDJSON_ALLOCATOR_DEFAULT_CHUNK_CAPACITY	include/rapidjson/allocators.h	64;"	d
RAPIDJSON_ASSERT	include/rapidjson/rapidjson.h	406;"	d
RAPIDJSON_BIGENDIAN	include/rapidjson/rapidjson.h	199;"	d
RAPIDJSON_BIGINTEGER_H_	include/rapidjson/internal/biginteger.h	16;"	d
RAPIDJSON_COPY	include/rapidjson/encodings.h	147;"	d
RAPIDJSON_COPY	include/rapidjson/encodings.h	173;"	d
RAPIDJSON_COPY	include/rapidjson/encodings.h	180;"	d
RAPIDJSON_COPY	include/rapidjson/encodings.h	199;"	d
RAPIDJSON_CURSORSTREAMWRAPPER_H_	include/rapidjson/cursorstreamwrapper.h	16;"	d
RAPIDJSON_DELETE	include/rapidjson/rapidjson.h	629;"	d
RAPIDJSON_DIAG_OFF	include/rapidjson/rapidjson.h	505;"	d
RAPIDJSON_DIAG_POP	include/rapidjson/rapidjson.h	511;"	d
RAPIDJSON_DIAG_PRAGMA	include/rapidjson/rapidjson.h	504;"	d
RAPIDJSON_DIAG_PUSH	include/rapidjson/rapidjson.h	510;"	d
RAPIDJSON_DISABLEIF	include/rapidjson/internal/meta.h	160;"	d
RAPIDJSON_DISABLEIF_RETURN	include/rapidjson/internal/meta.h	169;"	d
RAPIDJSON_DIYFP_H_	include/rapidjson/internal/diyfp.h	20;"	d
RAPIDJSON_DOCUMENT_H_	include/rapidjson/document.h	16;"	d
RAPIDJSON_DO_JOIN	include/rapidjson/rapidjson.h	55;"	d
RAPIDJSON_DO_JOIN2	include/rapidjson/rapidjson.h	56;"	d
RAPIDJSON_DO_STRINGIFY	include/rapidjson/rapidjson.h	51;"	d
RAPIDJSON_DTOA_	include/rapidjson/internal/dtoa.h	20;"	d
RAPIDJSON_ENABLEIF	include/rapidjson/internal/meta.h	156;"	d
RAPIDJSON_ENABLEIF_RETURN	include/rapidjson/internal/meta.h	164;"	d
RAPIDJSON_ENCODEDSTREAM_H_	include/rapidjson/encodedstream.h	16;"	d
RAPIDJSON_ENCODINGS_FUNC	include/rapidjson/encodedstream.h	127;"	d
RAPIDJSON_ENCODINGS_FUNC	include/rapidjson/encodedstream.h	287;"	d
RAPIDJSON_ENCODINGS_FUNC	include/rapidjson/encodings.h	620;"	d
RAPIDJSON_ENCODINGS_FUNC	include/rapidjson/encodings.h	650;"	d
RAPIDJSON_ENCODINGS_H_	include/rapidjson/encodings.h	16;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	218;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	220;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	228;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	230;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	236;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	238;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	241;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	243;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	245;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	247;"	d
RAPIDJSON_ERROR_CHARTYPE	include/rapidjson/error/error.h	39;"	d
RAPIDJSON_ERROR_EN_H_	include/rapidjson/error/en.h	16;"	d
RAPIDJSON_ERROR_ERROR_H_	include/rapidjson/error/error.h	16;"	d
RAPIDJSON_ERROR_STRING	include/rapidjson/error/error.h	52;"	d
RAPIDJSON_FILEREADSTREAM_H_	include/rapidjson/filereadstream.h	16;"	d
RAPIDJSON_FILEWRITESTREAM_H_	include/rapidjson/filewritestream.h	16;"	d
RAPIDJSON_FORCEINLINE	include/rapidjson/rapidjson.h	187;"	d
RAPIDJSON_FORCEINLINE	include/rapidjson/rapidjson.h	189;"	d
RAPIDJSON_FORCEINLINE	include/rapidjson/rapidjson.h	191;"	d
RAPIDJSON_FWD_H_	include/rapidjson/fwd.h	16;"	d
RAPIDJSON_GETPOINTER	include/rapidjson/rapidjson.h	316;"	d
RAPIDJSON_GETPOINTER	include/rapidjson/rapidjson.h	319;"	d
RAPIDJSON_GNUC	include/rapidjson/rapidjson.h	497;"	d
RAPIDJSON_HAS_CXX11_NOEXCEPT	include/rapidjson/rapidjson.h	558;"	d
RAPIDJSON_HAS_CXX11_RANGE_FOR	include/rapidjson/rapidjson.h	584;"	d
RAPIDJSON_HAS_CXX11_RVALUE_REFS	include/rapidjson/rapidjson.h	542;"	d
RAPIDJSON_HAS_CXX11_TYPETRAITS	include/rapidjson/rapidjson.h	576;"	d
RAPIDJSON_HAS_STDSTRING	include/rapidjson/rapidjson.h	132;"	d
RAPIDJSON_HAS_STDSTRING	include/rapidjson/rapidjson.h	134;"	d
RAPIDJSON_IEEE754_	include/rapidjson/internal/ieee754.h	16;"	d
RAPIDJSON_INTERNAL_META_H_	include/rapidjson/internal/meta.h	16;"	d
RAPIDJSON_INTERNAL_REGEX_H_	include/rapidjson/internal/regex.h	16;"	d
RAPIDJSON_INTERNAL_STACK_H_	include/rapidjson/internal/stack.h	16;"	d
RAPIDJSON_INTERNAL_STRFUNC_H_	include/rapidjson/internal/strfunc.h	16;"	d
RAPIDJSON_INTERNAL_SWAP_H_	include/rapidjson/internal/swap.h	16;"	d
RAPIDJSON_INVALID_KEYWORD_RETURN	include/rapidjson/schema.h	116;"	d
RAPIDJSON_INVALID_KEYWORD_VERBOSE	include/rapidjson/schema.h	111;"	d
RAPIDJSON_ISTREAMWRAPPER_H_	include/rapidjson/istreamwrapper.h	16;"	d
RAPIDJSON_ITOA_	include/rapidjson/internal/itoa.h	16;"	d
RAPIDJSON_JOIN	include/rapidjson/rapidjson.h	54;"	d
RAPIDJSON_LIKELY	include/rapidjson/rapidjson.h	461;"	d
RAPIDJSON_LITTLEENDIAN	include/rapidjson/rapidjson.h	198;"	d
RAPIDJSON_MAJOR_VERSION	include/rapidjson/rapidjson.h	75;"	d
RAPIDJSON_MEMORYBUFFER_H_	include/rapidjson/memorybuffer.h	16;"	d
RAPIDJSON_MEMORYSTREAM_H_	include/rapidjson/memorystream.h	16;"	d
RAPIDJSON_MINOR_VERSION	include/rapidjson/rapidjson.h	76;"	d
RAPIDJSON_MULTILINEMACRO_BEGIN	include/rapidjson/rapidjson.h	485;"	d
RAPIDJSON_MULTILINEMACRO_END	include/rapidjson/rapidjson.h	486;"	d
RAPIDJSON_NAMESPACE	include/rapidjson/rapidjson.h	118;"	d
RAPIDJSON_NAMESPACE_BEGIN	include/rapidjson/rapidjson.h	121;"	d
RAPIDJSON_NAMESPACE_END	include/rapidjson/rapidjson.h	124;"	d
RAPIDJSON_NEW	include/rapidjson/rapidjson.h	625;"	d
RAPIDJSON_NOEXCEPT	include/rapidjson/document.h	/^    GenericStringRef(const CharType (&str)[N]) RAPIDJSON_NOEXCEPT$/;"	m	struct:GenericStringRef
RAPIDJSON_NOEXCEPT	include/rapidjson/rapidjson.h	568;"	d
RAPIDJSON_NOEXCEPT_ASSERT	include/rapidjson/rapidjson.h	612;"	d
RAPIDJSON_NOTHING	include/rapidjson/reader.h	57;"	d
RAPIDJSON_NO_INT64DEFINE	include/rapidjson/rapidjson.h	177;"	d
RAPIDJSON_NO_SIZETYPEDEFINE	include/rapidjson/rapidjson.h	376;"	d
RAPIDJSON_OSTREAMWRAPPER_H_	include/rapidjson/ostreamwrapper.h	16;"	d
RAPIDJSON_PARSE_DEFAULT_FLAGS	include/rapidjson/reader.h	139;"	d
RAPIDJSON_PARSE_ERROR	include/rapidjson/reader.h	118;"	d
RAPIDJSON_PARSE_ERROR_EARLY_RETURN	include/rapidjson/reader.h	59;"	d
RAPIDJSON_PARSE_ERROR_EARLY_RETURN_VOID	include/rapidjson/reader.h	64;"	d
RAPIDJSON_PARSE_ERROR_NORETURN	include/rapidjson/reader.h	99;"	d
RAPIDJSON_PATCH_VERSION	include/rapidjson/rapidjson.h	77;"	d
RAPIDJSON_POINTER_H_	include/rapidjson/pointer.h	16;"	d
RAPIDJSON_POW10_	include/rapidjson/internal/pow10.h	16;"	d
RAPIDJSON_PRAGMA	include/rapidjson/rapidjson.h	503;"	d
RAPIDJSON_PRETTYWRITER_H_	include/rapidjson/prettywriter.h	16;"	d
RAPIDJSON_RAPIDJSON_H_	include/rapidjson/rapidjson.h	16;"	d
RAPIDJSON_READER_H_	include/rapidjson/reader.h	16;"	d
RAPIDJSON_REGEX_VERBOSE	include/rapidjson/internal/regex.h	41;"	d
RAPIDJSON_REMOVEFPTR_	include/rapidjson/internal/meta.h	152;"	d
RAPIDJSON_SCHEMA_HANDLE_BEGIN_	include/rapidjson/schema.h	2074;"	d
RAPIDJSON_SCHEMA_HANDLE_BEGIN_	include/rapidjson/schema.h	2148;"	d
RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_	include/rapidjson/schema.h	2064;"	d
RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_	include/rapidjson/schema.h	2147;"	d
RAPIDJSON_SCHEMA_HANDLE_END_	include/rapidjson/schema.h	2093;"	d
RAPIDJSON_SCHEMA_HANDLE_PARALLEL_	include/rapidjson/schema.h	2081;"	d
RAPIDJSON_SCHEMA_HANDLE_PARALLEL_	include/rapidjson/schema.h	2149;"	d
RAPIDJSON_SCHEMA_HANDLE_VALUE_	include/rapidjson/schema.h	2096;"	d
RAPIDJSON_SCHEMA_HANDLE_VALUE_	include/rapidjson/schema.h	2150;"	d
RAPIDJSON_SCHEMA_HAS_REGEX	include/rapidjson/schema.h	42;"	d
RAPIDJSON_SCHEMA_HAS_REGEX	include/rapidjson/schema.h	44;"	d
RAPIDJSON_SCHEMA_H_	include/rapidjson/schema.h	16;"	d
RAPIDJSON_SCHEMA_USE_INTERNALREGEX	include/rapidjson/schema.h	24;"	d
RAPIDJSON_SCHEMA_USE_INTERNALREGEX	include/rapidjson/schema.h	26;"	d
RAPIDJSON_SCHEMA_USE_STDREGEX	include/rapidjson/schema.h	30;"	d
RAPIDJSON_SCHEMA_USE_STDREGEX	include/rapidjson/schema.h	32;"	d
RAPIDJSON_SCHEMA_VERBOSE	include/rapidjson/schema.h	48;"	d
RAPIDJSON_SETPOINTER	include/rapidjson/rapidjson.h	315;"	d
RAPIDJSON_SETPOINTER	include/rapidjson/rapidjson.h	318;"	d
RAPIDJSON_SIMD	include/rapidjson/rapidjson.h	353;"	d
RAPIDJSON_STATIC_ASSERT	include/rapidjson/rapidjson.h	415;"	d
RAPIDJSON_STATIC_ASSERT	include/rapidjson/rapidjson.h	445;"	d
RAPIDJSON_STATIC_ASSERT_UNUSED_ATTRIBUTE	include/rapidjson/rapidjson.h	432;"	d
RAPIDJSON_STREAM_H_	include/rapidjson/stream.h	18;"	d
RAPIDJSON_STRINGBUFFER_H_	include/rapidjson/stringbuffer.h	16;"	d
RAPIDJSON_STRINGIFY	include/rapidjson/rapidjson.h	50;"	d
RAPIDJSON_STRING_	include/rapidjson/schema.h	1017;"	d
RAPIDJSON_STRING_	include/rapidjson/schema.h	1059;"	d
RAPIDJSON_STRING_	include/rapidjson/schema.h	2045;"	d
RAPIDJSON_STRING_	include/rapidjson/schema.h	2061;"	d
RAPIDJSON_STRTOD_	include/rapidjson/internal/strtod.h	16;"	d
RAPIDJSON_TAIL	include/rapidjson/encodings.h	149;"	d
RAPIDJSON_TAIL	include/rapidjson/encodings.h	175;"	d
RAPIDJSON_TAIL	include/rapidjson/encodings.h	182;"	d
RAPIDJSON_TAIL	include/rapidjson/encodings.h	201;"	d
RAPIDJSON_TRANS	include/rapidjson/encodings.h	148;"	d
RAPIDJSON_TRANS	include/rapidjson/encodings.h	174;"	d
RAPIDJSON_TRANS	include/rapidjson/encodings.h	181;"	d
RAPIDJSON_TRANS	include/rapidjson/encodings.h	200;"	d
RAPIDJSON_UINT64_C2	include/rapidjson/rapidjson.h	289;"	d
RAPIDJSON_UNLIKELY	include/rapidjson/rapidjson.h	474;"	d
RAPIDJSON_VERSION_CODE	include/rapidjson/rapidjson.h	490;"	d
RAPIDJSON_VERSION_STRING	include/rapidjson/rapidjson.h	78;"	d
RAPIDJSON_WRITER_H_	include/rapidjson/writer.h	16;"	d
RAPIDJSON_WRITE_DEFAULT_FLAGS	include/rapidjson/writer.h	61;"	d
Range	include/rapidjson/internal/regex.h	/^    struct Range {$/;"	s	class:internal::GenericRegex
Range	include/rapidjson/internal/regex.h	/^    typedef typename RegexType::Range Range;$/;"	t	class:internal::GenericRegexSearch
RawNumber	include/rapidjson/document.h	/^    bool RawNumber(const Ch* str, SizeType length, bool copy) { $/;"	f	class:GenericDocument
RawNumber	include/rapidjson/prettywriter.h	/^    bool RawNumber(const Ch* str, SizeType length, bool copy = false) {$/;"	f	class:PrettyWriter
RawNumber	include/rapidjson/reader.h	/^    bool RawNumber(const Ch* str, SizeType len, bool copy) { return static_cast<Override&>(*this).String(str, len, copy); }$/;"	f	struct:BaseReaderHandler
RawNumber	include/rapidjson/schema.h	/^    bool RawNumber(const Ch* str, SizeType len, bool) {$/;"	f	class:internal::Hasher
RawNumber	include/rapidjson/schema.h	/^    bool RawNumber(const Ch* str, SizeType length, bool copy)$/;"	f	class:GenericSchemaValidator
RawNumber	include/rapidjson/writer.h	/^    bool RawNumber(const Ch* str, SizeType length, bool copy = false) {$/;"	f	class:Writer
RawValue	include/rapidjson/prettywriter.h	/^    bool RawValue(const Ch* json, size_t length, Type type) {$/;"	f	class:PrettyWriter
RawValue	include/rapidjson/writer.h	/^    bool RawValue(const Ch* json, size_t length, Type type) {$/;"	f	class:Writer
Read	include/rapidjson/filereadstream.h	/^    void Read() {$/;"	f	class:FileReadStream
Reader	include/rapidjson/fwd.h	/^typedef GenericReader<UTF8<char>, UTF8<char>, CrtAllocator> Reader;$/;"	t
Reader	include/rapidjson/reader.h	/^typedef GenericReader<UTF8<>, UTF8<> > Reader;$/;"	t
Realloc	include/rapidjson/allocators.h	/^    void* Realloc(void* originalPtr, size_t originalSize, size_t newSize) {$/;"	f	class:CrtAllocator
Realloc	include/rapidjson/allocators.h	/^    void* Realloc(void* originalPtr, size_t originalSize, size_t newSize) {$/;"	f	class:MemoryPoolAllocator
Reference	include/rapidjson/document.h	/^    typedef reference       Reference;$/;"	t	class:GenericMemberIterator
Regex	include/rapidjson/internal/regex.h	/^typedef GenericRegex<UTF8<> > Regex;$/;"	t	namespace:internal
RegexSearch	include/rapidjson/internal/regex.h	/^typedef GenericRegexSearch<Regex> RegexSearch;$/;"	t	namespace:internal
RegexType	include/rapidjson/schema.h	/^        typedef char RegexType;$/;"	t	class:internal::Schema
RegexType	include/rapidjson/schema.h	/^        typedef internal::GenericRegex<EncodingType, AllocatorType> RegexType;$/;"	t	class:internal::Schema
RegexType	include/rapidjson/schema.h	/^        typedef std::basic_regex<Ch> RegexType;$/;"	t	class:internal::Schema
RemoveAllMembers	include/rapidjson/document.h	/^    void RemoveAllMembers() { value_.RemoveAllMembers(); }$/;"	f	class:GenericObject
RemoveAllMembers	include/rapidjson/document.h	/^    void RemoveAllMembers() {$/;"	f	class:GenericValue
RemoveConst	include/rapidjson/internal/meta.h	/^template <typename T> struct RemoveConst { typedef T Type; };$/;"	s	namespace:internal
RemoveConst	include/rapidjson/internal/meta.h	/^template <typename T> struct RemoveConst<const T> { typedef T Type; };$/;"	s	namespace:internal
RemoveMember	include/rapidjson/document.h	/^    MemberIterator RemoveMember(MemberIterator m) const { return value_.RemoveMember(m); }$/;"	f	class:GenericObject
RemoveMember	include/rapidjson/document.h	/^    MemberIterator RemoveMember(MemberIterator m) {$/;"	f	class:GenericValue
RemoveMember	include/rapidjson/document.h	/^    bool RemoveMember(const Ch* name) const { return value_.RemoveMember(name); }$/;"	f	class:GenericObject
RemoveMember	include/rapidjson/document.h	/^    bool RemoveMember(const Ch* name) {$/;"	f	class:GenericValue
RemoveMember	include/rapidjson/document.h	/^    bool RemoveMember(const GenericValue<Encoding, SourceAllocator>& name) {$/;"	f	class:GenericValue
RemoveMember	include/rapidjson/document.h	/^    bool RemoveMember(const std::basic_string<Ch>& name) const { return value_.RemoveMember(name); }$/;"	f	class:GenericObject
RemoveMember	include/rapidjson/document.h	/^    bool RemoveMember(const std::basic_string<Ch>& name) { return RemoveMember(GenericValue(StringRef(name))); }$/;"	f	class:GenericValue
RemoveMember	include/rapidjson/document.h	/^    template <typename SourceAllocator> bool RemoveMember(const GenericValue<EncodingType, SourceAllocator>& name) const { return value_.RemoveMember(name); }$/;"	f	class:GenericObject
RemoveSfinaeTag	include/rapidjson/internal/meta.h	/^template <typename T> struct RemoveSfinaeTag<SfinaeTag&(*)(T)> { typedef T Type; };$/;"	s	namespace:internal
Reserve	include/rapidjson/document.h	/^    GenericArray Reserve(SizeType newCapacity, AllocatorType &allocator) const { value_.Reserve(newCapacity, allocator); return *this; }$/;"	f	class:GenericArray
Reserve	include/rapidjson/document.h	/^    GenericValue& Reserve(SizeType newCapacity, Allocator &allocator) {$/;"	f	class:GenericValue
Reserve	include/rapidjson/internal/stack.h	/^    RAPIDJSON_FORCEINLINE void Reserve(size_t count = 1) {$/;"	f	class:internal::Stack
Reserve	include/rapidjson/stringbuffer.h	/^    void Reserve(size_t count) { stack_.template Reserve<Ch>(count); }$/;"	f	class:GenericStringBuffer
Reset	include/rapidjson/schema.h	/^    void Reset() {$/;"	f	class:GenericSchemaValidator
Reset	include/rapidjson/writer.h	/^    void Reset(OutputStream& os) {$/;"	f	class:Writer
Resize	include/rapidjson/internal/stack.h	/^    void Resize(size_t newCapacity) {$/;"	f	class:internal::Stack
RightBracketToken	include/rapidjson/reader.h	/^        RightBracketToken,$/;"	e	enum:GenericReader::Token
RightCurlyBracketToken	include/rapidjson/reader.h	/^        RightCurlyBracketToken,$/;"	e	enum:GenericReader::Token
SCNX16	include/rapidjson/msinttypes/inttypes.h	221;"	d
SCNX32	include/rapidjson/msinttypes/inttypes.h	234;"	d
SCNX64	include/rapidjson/msinttypes/inttypes.h	247;"	d
SCNX8	include/rapidjson/msinttypes/inttypes.h	208;"	d
SCNXFAST16	include/rapidjson/msinttypes/inttypes.h	229;"	d
SCNXFAST32	include/rapidjson/msinttypes/inttypes.h	242;"	d
SCNXFAST64	include/rapidjson/msinttypes/inttypes.h	255;"	d
SCNXFAST8	include/rapidjson/msinttypes/inttypes.h	216;"	d
SCNXLEAST16	include/rapidjson/msinttypes/inttypes.h	225;"	d
SCNXLEAST32	include/rapidjson/msinttypes/inttypes.h	238;"	d
SCNXLEAST64	include/rapidjson/msinttypes/inttypes.h	251;"	d
SCNXLEAST8	include/rapidjson/msinttypes/inttypes.h	212;"	d
SCNXMAX	include/rapidjson/msinttypes/inttypes.h	260;"	d
SCNXPTR	include/rapidjson/msinttypes/inttypes.h	266;"	d
SCNXPTR	include/rapidjson/msinttypes/inttypes.h	271;"	d
SCNd16	include/rapidjson/msinttypes/inttypes.h	172;"	d
SCNd32	include/rapidjson/msinttypes/inttypes.h	179;"	d
SCNd64	include/rapidjson/msinttypes/inttypes.h	186;"	d
SCNd8	include/rapidjson/msinttypes/inttypes.h	165;"	d
SCNdFAST16	include/rapidjson/msinttypes/inttypes.h	176;"	d
SCNdFAST32	include/rapidjson/msinttypes/inttypes.h	183;"	d
SCNdFAST64	include/rapidjson/msinttypes/inttypes.h	190;"	d
SCNdFAST8	include/rapidjson/msinttypes/inttypes.h	169;"	d
SCNdLEAST16	include/rapidjson/msinttypes/inttypes.h	174;"	d
SCNdLEAST32	include/rapidjson/msinttypes/inttypes.h	181;"	d
SCNdLEAST64	include/rapidjson/msinttypes/inttypes.h	188;"	d
SCNdLEAST8	include/rapidjson/msinttypes/inttypes.h	167;"	d
SCNdMAX	include/rapidjson/msinttypes/inttypes.h	193;"	d
SCNdPTR	include/rapidjson/msinttypes/inttypes.h	197;"	d
SCNdPTR	include/rapidjson/msinttypes/inttypes.h	200;"	d
SCNi16	include/rapidjson/msinttypes/inttypes.h	173;"	d
SCNi32	include/rapidjson/msinttypes/inttypes.h	180;"	d
SCNi64	include/rapidjson/msinttypes/inttypes.h	187;"	d
SCNi8	include/rapidjson/msinttypes/inttypes.h	166;"	d
SCNiFAST16	include/rapidjson/msinttypes/inttypes.h	177;"	d
SCNiFAST32	include/rapidjson/msinttypes/inttypes.h	184;"	d
SCNiFAST64	include/rapidjson/msinttypes/inttypes.h	191;"	d
SCNiFAST8	include/rapidjson/msinttypes/inttypes.h	170;"	d
SCNiLEAST16	include/rapidjson/msinttypes/inttypes.h	175;"	d
SCNiLEAST32	include/rapidjson/msinttypes/inttypes.h	182;"	d
SCNiLEAST64	include/rapidjson/msinttypes/inttypes.h	189;"	d
SCNiLEAST8	include/rapidjson/msinttypes/inttypes.h	168;"	d
SCNiMAX	include/rapidjson/msinttypes/inttypes.h	194;"	d
SCNiPTR	include/rapidjson/msinttypes/inttypes.h	198;"	d
SCNiPTR	include/rapidjson/msinttypes/inttypes.h	201;"	d
SCNo16	include/rapidjson/msinttypes/inttypes.h	218;"	d
SCNo32	include/rapidjson/msinttypes/inttypes.h	231;"	d
SCNo64	include/rapidjson/msinttypes/inttypes.h	244;"	d
SCNo8	include/rapidjson/msinttypes/inttypes.h	205;"	d
SCNoFAST16	include/rapidjson/msinttypes/inttypes.h	226;"	d
SCNoFAST32	include/rapidjson/msinttypes/inttypes.h	239;"	d
SCNoFAST64	include/rapidjson/msinttypes/inttypes.h	252;"	d
SCNoFAST8	include/rapidjson/msinttypes/inttypes.h	213;"	d
SCNoLEAST16	include/rapidjson/msinttypes/inttypes.h	222;"	d
SCNoLEAST32	include/rapidjson/msinttypes/inttypes.h	235;"	d
SCNoLEAST64	include/rapidjson/msinttypes/inttypes.h	248;"	d
SCNoLEAST8	include/rapidjson/msinttypes/inttypes.h	209;"	d
SCNoMAX	include/rapidjson/msinttypes/inttypes.h	257;"	d
SCNoPTR	include/rapidjson/msinttypes/inttypes.h	263;"	d
SCNoPTR	include/rapidjson/msinttypes/inttypes.h	268;"	d
SCNu16	include/rapidjson/msinttypes/inttypes.h	219;"	d
SCNu32	include/rapidjson/msinttypes/inttypes.h	232;"	d
SCNu64	include/rapidjson/msinttypes/inttypes.h	245;"	d
SCNu8	include/rapidjson/msinttypes/inttypes.h	206;"	d
SCNuFAST16	include/rapidjson/msinttypes/inttypes.h	227;"	d
SCNuFAST32	include/rapidjson/msinttypes/inttypes.h	240;"	d
SCNuFAST64	include/rapidjson/msinttypes/inttypes.h	253;"	d
SCNuFAST8	include/rapidjson/msinttypes/inttypes.h	214;"	d
SCNuLEAST16	include/rapidjson/msinttypes/inttypes.h	223;"	d
SCNuLEAST32	include/rapidjson/msinttypes/inttypes.h	236;"	d
SCNuLEAST64	include/rapidjson/msinttypes/inttypes.h	249;"	d
SCNuLEAST8	include/rapidjson/msinttypes/inttypes.h	210;"	d
SCNuMAX	include/rapidjson/msinttypes/inttypes.h	258;"	d
SCNuPTR	include/rapidjson/msinttypes/inttypes.h	264;"	d
SCNuPTR	include/rapidjson/msinttypes/inttypes.h	269;"	d
SCNx16	include/rapidjson/msinttypes/inttypes.h	220;"	d
SCNx32	include/rapidjson/msinttypes/inttypes.h	233;"	d
SCNx64	include/rapidjson/msinttypes/inttypes.h	246;"	d
SCNx8	include/rapidjson/msinttypes/inttypes.h	207;"	d
SCNxFAST16	include/rapidjson/msinttypes/inttypes.h	228;"	d
SCNxFAST32	include/rapidjson/msinttypes/inttypes.h	241;"	d
SCNxFAST64	include/rapidjson/msinttypes/inttypes.h	254;"	d
SCNxFAST8	include/rapidjson/msinttypes/inttypes.h	215;"	d
SCNxLEAST16	include/rapidjson/msinttypes/inttypes.h	224;"	d
SCNxLEAST32	include/rapidjson/msinttypes/inttypes.h	237;"	d
SCNxLEAST64	include/rapidjson/msinttypes/inttypes.h	250;"	d
SCNxLEAST8	include/rapidjson/msinttypes/inttypes.h	211;"	d
SCNxMAX	include/rapidjson/msinttypes/inttypes.h	259;"	d
SCNxPTR	include/rapidjson/msinttypes/inttypes.h	265;"	d
SCNxPTR	include/rapidjson/msinttypes/inttypes.h	270;"	d
SIG_ATOMIC_MAX	include/rapidjson/msinttypes/stdint.h	246;"	d
SIG_ATOMIC_MIN	include/rapidjson/msinttypes/stdint.h	245;"	d
SIZE_MAX	include/rapidjson/msinttypes/stdint.h	250;"	d
SIZE_MAX	include/rapidjson/msinttypes/stdint.h	252;"	d
SSOUND_CALL	include/ssound.h	15;"	d
SSOUND_CALL	include/ssound.h	18;"	d
SSOUND_CALL	include/ssound.h	8;"	d
SSOUND_GET_SERIAL_NUMBER	include/ssound.h	/^		SSOUND_GET_SERIAL_NUMBER,$/;"	e	enum:__anon3
SSOUND_H_	include/ssound.h	2;"	d
SSOUND_IMPORT_OR_EXPORT	include/ssound.h	10;"	d
SSOUND_IMPORT_OR_EXPORT	include/ssound.h	12;"	d
SSOUND_IMPORT_OR_EXPORT	include/ssound.h	16;"	d
SSOUND_IMPORT_OR_EXPORT	include/ssound.h	19;"	d
SSOUND_MESSAGE_TYPE_BIN	include/ssound.h	/^		SSOUND_MESSAGE_TYPE_BIN$/;"	e	enum:__anon2
SSOUND_MESSAGE_TYPE_JSON	include/ssound.h	/^		SSOUND_MESSAGE_TYPE_JSON = 1,$/;"	e	enum:__anon2
SSOUND_OPT_GET_MODULES	include/ssound.h	/^		SSOUND_OPT_GET_MODULES,$/;"	e	enum:__anon3
SSOUND_OPT_GET_PROVISION	include/ssound.h	/^		SSOUND_OPT_GET_PROVISION,$/;"	e	enum:__anon3
SSOUND_OPT_GET_TRAFFIC	include/ssound.h	/^		SSOUND_OPT_GET_TRAFFIC,$/;"	e	enum:__anon3
SSOUND_OPT_GET_VERSION	include/ssound.h	/^		SSOUND_OPT_GET_VERSION,$/;"	e	enum:__anon3
SSOUND_OPT_INVALID	include/ssound.h	/^		SSOUND_OPT_INVALID  = 0,$/;"	e	enum:__anon3
SSOUND_OPT_MAX	include/ssound.h	/^		SSOUND_OPT_MAX$/;"	e	enum:__anon3
SSOUND_SET_WIFI_STATUS	include/ssound.h	/^		SSOUND_SET_WIFI_STATUS,$/;"	e	enum:__anon3
SSOUND_VERSION	include/ssound.h	4;"	d
STATIC_ASSERTION_FAILURE	include/rapidjson/rapidjson.h	/^template <> struct STATIC_ASSERTION_FAILURE<true> { enum { value = 1 }; };$/;"	s
SValue	include/rapidjson/schema.h	/^    typedef GenericValue<EncodingType, AllocatorType> SValue;$/;"	t	class:internal::Schema
SValue	include/rapidjson/schema.h	/^    typedef typename SchemaType::SValue SValue;$/;"	t	class:GenericSchemaValidator
SValue	include/rapidjson/schema.h	/^    typedef typename SchemaType::SValue SValue;$/;"	t	class:internal::IValidationErrorHandler
ScanCopyUnescapedString	include/rapidjson/reader.h	/^    static RAPIDJSON_FORCEINLINE void ScanCopyUnescapedString(InputStream&, OutputStream&) {$/;"	f	class:GenericReader
ScanCopyUnescapedString	include/rapidjson/reader.h	/^    static RAPIDJSON_FORCEINLINE void ScanCopyUnescapedString(InsituStringStream& is, InsituStringStream& os) {$/;"	f	class:GenericReader
ScanCopyUnescapedString	include/rapidjson/reader.h	/^    static RAPIDJSON_FORCEINLINE void ScanCopyUnescapedString(StringStream& is, StackStream<char>& os) {$/;"	f	class:GenericReader
ScanWriteUnescapedString	include/rapidjson/writer.h	/^    bool ScanWriteUnescapedString(GenericStringStream<SourceEncoding>& is, size_t length) {$/;"	f	class:Writer
ScanWriteUnescapedString	include/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::ScanWriteUnescapedString(StringStream& is, size_t length) {$/;"	f	class:Writer
Schema	include/rapidjson/schema.h	/^    Schema(SchemaDocumentType* schemaDocument, const PointerType& p, const ValueType& value, const ValueType& document, AllocatorType* allocator) :$/;"	f	class:internal::Schema
Schema	include/rapidjson/schema.h	/^class Schema {$/;"	c	namespace:internal
SchemaArray	include/rapidjson/schema.h	/^        SchemaArray() : schemas(), count() {}$/;"	f	struct:internal::Schema::SchemaArray
SchemaArray	include/rapidjson/schema.h	/^    struct SchemaArray {$/;"	s	class:internal::Schema
SchemaDocument	include/rapidjson/fwd.h	/^typedef GenericSchemaDocument<Value, CrtAllocator> SchemaDocument;$/;"	t
SchemaDocument	include/rapidjson/schema.h	/^typedef GenericSchemaDocument<Value> SchemaDocument;$/;"	t
SchemaEntry	include/rapidjson/schema.h	/^        SchemaEntry(const PointerType& p, SchemaType* s, bool o, Allocator* allocator) : pointer(p, allocator), schema(s), owned(o) {}$/;"	f	struct:GenericSchemaDocument::SchemaEntry
SchemaEntry	include/rapidjson/schema.h	/^    struct SchemaEntry {$/;"	s	class:GenericSchemaDocument
SchemaRefEntry	include/rapidjson/schema.h	/^        SchemaRefEntry(const PointerType& s, const PointerType& t, const SchemaType** outSchema, Allocator *allocator) : source(s, allocator), target(t, allocator), schema(outSchema) {}$/;"	f	struct:GenericSchemaDocument::SchemaRefEntry
SchemaRefEntry	include/rapidjson/schema.h	/^    struct SchemaRefEntry {$/;"	s	class:GenericSchemaDocument
SchemaType	include/rapidjson/schema.h	/^    typedef Schema<SchemaDocumentType> SchemaType;$/;"	t	class:internal::Schema
SchemaType	include/rapidjson/schema.h	/^    typedef Schema<SchemaDocumentType> SchemaType;$/;"	t	struct:internal::SchemaValidationContext
SchemaType	include/rapidjson/schema.h	/^    typedef internal::Schema<GenericSchemaDocument> SchemaType;$/;"	t	class:GenericSchemaDocument
SchemaType	include/rapidjson/schema.h	/^    typedef typename SchemaDocumentType::SchemaType SchemaType;$/;"	t	class:GenericSchemaValidator
SchemaValidatingReader	include/rapidjson/schema.h	/^    SchemaValidatingReader(InputStream& is, const SchemaDocumentType& sd) : is_(is), sd_(sd), invalidSchemaKeyword_(), error_(kObjectType), isValid_(true) {}$/;"	f	class:SchemaValidatingReader
SchemaValidatingReader	include/rapidjson/schema.h	/^class SchemaValidatingReader {$/;"	c
SchemaValidationContext	include/rapidjson/schema.h	/^    SchemaValidationContext(SchemaValidatorFactoryType& f, ErrorHandlerType& eh, const SchemaType* s) :$/;"	f	struct:internal::SchemaValidationContext
SchemaValidationContext	include/rapidjson/schema.h	/^struct SchemaValidationContext {$/;"	s	namespace:internal
SchemaValidator	include/rapidjson/fwd.h	/^typedef GenericSchemaValidator<SchemaDocument, BaseReaderHandler<UTF8<char>, void>, CrtAllocator> SchemaValidator;$/;"	t
SchemaValidator	include/rapidjson/schema.h	/^typedef GenericSchemaValidator<SchemaDocument> SchemaValidator;$/;"	t
SchemaValidatorFactoryType	include/rapidjson/schema.h	/^    typedef ISchemaStateFactory<SchemaType> SchemaValidatorFactoryType;$/;"	t	struct:internal::SchemaValidationContext
SchemaValueType	include/rapidjson/schema.h	/^    enum SchemaValueType {$/;"	g	class:internal::Schema
Search	include/rapidjson/internal/regex.h	/^    bool Search(InputStream& is) {$/;"	f	class:internal::GenericRegexSearch
Search	include/rapidjson/internal/regex.h	/^    bool Search(const Ch* s) {$/;"	f	class:internal::GenericRegexSearch
SearchWithAnchoring	include/rapidjson/internal/regex.h	/^    bool SearchWithAnchoring(InputStream& is, bool anchorBegin, bool anchorEnd) {$/;"	f	class:internal::GenericRegexSearch
SelectIf	include/rapidjson/internal/meta.h	/^template <typename C, typename T1, typename T2> struct SelectIf : SelectIfCond<C::Value, T1, T2> {};$/;"	s	namespace:internal
SelectIfCond	include/rapidjson/internal/meta.h	/^template <bool C, typename T1, typename T2> struct SelectIfCond : SelectIfImpl<C>::template Apply<T1,T2> {};$/;"	s	namespace:internal
SelectIfImpl	include/rapidjson/internal/meta.h	/^template <> struct SelectIfImpl<false> { template <typename T1, typename T2> struct Apply { typedef T2 Type; }; };$/;"	s	namespace:internal
SelectIfImpl	include/rapidjson/internal/meta.h	/^template <bool C> struct SelectIfImpl { template <typename T1, typename T2> struct Apply { typedef T1 Type; }; };$/;"	s	namespace:internal
Set	include/rapidjson/document.h	/^    ValueType& Set(const T& data) { return internal::TypeHelper<ValueType, T>::Set(*this, data); }$/;"	f	class:GenericValue
Set	include/rapidjson/document.h	/^    ValueType& Set(const T& data, AllocatorType& allocator) { return internal::TypeHelper<ValueType, T>::Set(*this, data, allocator); }$/;"	f	class:GenericValue
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, ArrayType data) { return v = data; }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, ArrayType data, typename ValueType::AllocatorType&) { return v = data; }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, ObjectType data) { return v = data; }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, ObjectType data, typename ValueType::AllocatorType&) { return v = data; }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, bool data) { return v.SetBool(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, bool data, typename ValueType::AllocatorType&) { return v.SetBool(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, const StringType data) { return v.SetString(typename ValueType::StringRefType(data)); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, const StringType data, typename ValueType::AllocatorType& a) { return v.SetString(data, a); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, const StringType& data, typename ValueType::AllocatorType& a) { return v.SetString(data, a); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, double data) { return v.SetDouble(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, double data, typename ValueType::AllocatorType&) { return v.SetDouble(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, float data) { return v.SetFloat(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, float data, typename ValueType::AllocatorType&) { return v.SetFloat(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, int data) { return v.SetInt(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, int data, typename ValueType::AllocatorType&) { return v.SetInt(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, int64_t data) { return v.SetInt64(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, int64_t data, typename ValueType::AllocatorType&) { return v.SetInt64(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, long data) { return v.SetInt(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, long data, typename ValueType::AllocatorType&) { return v.SetInt(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, uint64_t data) { return v.SetUint64(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, uint64_t data, typename ValueType::AllocatorType&) { return v.SetUint64(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, unsigned data) { return v.SetUint(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, unsigned data, typename ValueType::AllocatorType&) { return v.SetUint(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, unsigned long data) { return v.SetUint(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, unsigned long data, typename ValueType::AllocatorType&) { return v.SetUint(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/error/error.h	/^    void Set(ParseErrorCode code, size_t offset = 0) { code_ = code; offset_ = offset; }$/;"	f	struct:ParseResult
Set	include/rapidjson/pointer.h	/^        Set(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, T value) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    Set(ValueType& root, T value, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, ValueType& value) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, const Ch* value) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, const ValueType& value) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, const std::basic_string<Ch>& value) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(ValueType& root, ValueType& value, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(ValueType& root, const Ch* value, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(ValueType& root, const ValueType& value, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(ValueType& root, const std::basic_string<Ch>& value, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
SetArray	include/rapidjson/document.h	/^    GenericValue& SetArray() { this->~GenericValue(); new (this) GenericValue(kArrayType); return *this; }$/;"	f	class:GenericValue
SetArrayRaw	include/rapidjson/document.h	/^    void SetArrayRaw(GenericValue* values, SizeType count, Allocator& allocator) {$/;"	f	class:GenericValue
SetBool	include/rapidjson/document.h	/^    GenericValue& SetBool(bool b) { this->~GenericValue(); new (this) GenericValue(b); return *this; }$/;"	f	class:GenericValue
SetDouble	include/rapidjson/document.h	/^    GenericValue& SetDouble(double d)       { this->~GenericValue(); new (this) GenericValue(d);    return *this; }$/;"	f	class:GenericValue
SetElementsPointer	include/rapidjson/document.h	/^    RAPIDJSON_FORCEINLINE GenericValue* SetElementsPointer(GenericValue* elements) { return RAPIDJSON_SETPOINTER(GenericValue, data_.a.elements, elements); }$/;"	f	class:GenericValue
SetFloat	include/rapidjson/document.h	/^    GenericValue& SetFloat(float f)         { this->~GenericValue(); new (this) GenericValue(static_cast<double>(f)); return *this; }$/;"	f	class:GenericValue
SetFormatOptions	include/rapidjson/prettywriter.h	/^    PrettyWriter& SetFormatOptions(PrettyFormatOptions options) {$/;"	f	class:PrettyWriter
SetIndent	include/rapidjson/prettywriter.h	/^    PrettyWriter& SetIndent(Ch indentChar, unsigned indentCharCount) {$/;"	f	class:PrettyWriter
SetInt	include/rapidjson/document.h	/^    GenericValue& SetInt(int i)             { this->~GenericValue(); new (this) GenericValue(i);    return *this; }$/;"	f	class:GenericValue
SetInt64	include/rapidjson/document.h	/^    GenericValue& SetInt64(int64_t i64)     { this->~GenericValue(); new (this) GenericValue(i64);  return *this; }$/;"	f	class:GenericValue
SetLength	include/rapidjson/document.h	/^        inline void     SetLength(SizeType len) { str[LenPos] = static_cast<Ch>(MaxSize -  len); }$/;"	f	struct:GenericValue::ShortString
SetMaxDecimalPlaces	include/rapidjson/writer.h	/^    void SetMaxDecimalPlaces(int maxDecimalPlaces) {$/;"	f	class:Writer
SetMembersPointer	include/rapidjson/document.h	/^    RAPIDJSON_FORCEINLINE Member* SetMembersPointer(Member* members) { return RAPIDJSON_SETPOINTER(Member, data_.o.members, members); }$/;"	f	class:GenericValue
SetNull	include/rapidjson/document.h	/^    GenericValue& SetNull() { this->~GenericValue(); new (this) GenericValue(); return *this; }$/;"	f	class:GenericValue
SetObject	include/rapidjson/document.h	/^    GenericValue& SetObject() { this->~GenericValue(); new (this) GenericValue(kObjectType); return *this; }$/;"	f	class:GenericValue
SetObjectRaw	include/rapidjson/document.h	/^    void SetObjectRaw(Member* members, SizeType count, Allocator& allocator) {$/;"	f	class:GenericValue
SetParseError	include/rapidjson/reader.h	/^    void SetParseError(ParseErrorCode code, size_t offset) { parseResult_.Set(code, offset); }$/;"	f	class:GenericReader
SetString	include/rapidjson/document.h	/^    GenericValue& SetString(StringRefType s) { this->~GenericValue(); SetStringRaw(s); return *this; }$/;"	f	class:GenericValue
SetString	include/rapidjson/document.h	/^    GenericValue& SetString(StringRefType s, Allocator& allocator) { this->~GenericValue(); SetStringRaw(s, allocator); return *this; }$/;"	f	class:GenericValue
SetString	include/rapidjson/document.h	/^    GenericValue& SetString(const Ch* s, Allocator& allocator) { return SetString(StringRef(s), allocator); }$/;"	f	class:GenericValue
SetString	include/rapidjson/document.h	/^    GenericValue& SetString(const Ch* s, SizeType length) { return SetString(StringRef(s, length)); }$/;"	f	class:GenericValue
SetString	include/rapidjson/document.h	/^    GenericValue& SetString(const Ch* s, SizeType length, Allocator& allocator) { return SetString(StringRef(s, length), allocator); }$/;"	f	class:GenericValue
SetString	include/rapidjson/document.h	/^    GenericValue& SetString(const std::basic_string<Ch>& s, Allocator& allocator) { return SetString(StringRef(s), allocator); }$/;"	f	class:GenericValue
SetStringPointer	include/rapidjson/document.h	/^    RAPIDJSON_FORCEINLINE const Ch* SetStringPointer(const Ch* str) { return RAPIDJSON_SETPOINTER(Ch, data_.s.str, str); }$/;"	f	class:GenericValue
SetStringRaw	include/rapidjson/document.h	/^    void SetStringRaw(StringRefType s, Allocator& allocator) {$/;"	f	class:GenericValue
SetUint	include/rapidjson/document.h	/^    GenericValue& SetUint(unsigned u)       { this->~GenericValue(); new (this) GenericValue(u);    return *this; }$/;"	f	class:GenericValue
SetUint64	include/rapidjson/document.h	/^    GenericValue& SetUint64(uint64_t u64)   { this->~GenericValue(); new (this) GenericValue(u64);  return *this; }$/;"	f	class:GenericValue
SetValueByPointer	include/rapidjson/pointer.h	/^SetValueByPointer(DocumentType& document, const CharType(&source)[N], T2 value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^SetValueByPointer(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, T2 value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^SetValueByPointer(T& root, const CharType(&source)[N], T2 value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^SetValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, T2 value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const CharType(&source)[N], const std::basic_string<typename DocumentType::Ch>& value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const CharType(&source)[N], const typename DocumentType::Ch* value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const CharType(&source)[N], const typename DocumentType::ValueType& value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const CharType(&source)[N], typename DocumentType::ValueType& value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, const std::basic_string<typename DocumentType::Ch>& value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, const typename DocumentType::Ch* value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, const typename DocumentType::ValueType& value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, typename DocumentType::ValueType& value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const CharType(&source)[N], const std::basic_string<typename T::Ch>& value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const CharType(&source)[N], const typename T::Ch* value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const CharType(&source)[N], const typename T::ValueType& value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const CharType(&source)[N], typename T::ValueType& value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, const std::basic_string<typename T::Ch>& value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, const typename T::Ch* value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, const typename T::ValueType& value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, typename T::ValueType& value, typename T::AllocatorType& a) {$/;"	f
SfinaeTag	include/rapidjson/internal/meta.h	/^struct SfinaeTag {};$/;"	s	namespace:internal
ShortString	include/rapidjson/document.h	/^    struct ShortString {$/;"	s	class:GenericValue
ShrinkToFit	include/rapidjson/internal/stack.h	/^    void ShrinkToFit() { $/;"	f	class:internal::Stack
ShrinkToFit	include/rapidjson/memorybuffer.h	/^    void ShrinkToFit() { stack_.ShrinkToFit(); }$/;"	f	struct:GenericMemoryBuffer
ShrinkToFit	include/rapidjson/stringbuffer.h	/^    void ShrinkToFit() {$/;"	f	class:GenericStringBuffer
Sign	include/rapidjson/internal/ieee754.h	/^    bool Sign() const { return (u_ & kSignMask) != 0; }$/;"	f	class:internal::Double
Significand	include/rapidjson/internal/ieee754.h	/^    uint64_t Significand() const { return u_ & kSignificandMask; }$/;"	f	class:internal::Double
Size	include/rapidjson/allocators.h	/^    size_t Size() const {$/;"	f	class:MemoryPoolAllocator
Size	include/rapidjson/document.h	/^    SizeType Size() const { RAPIDJSON_ASSERT(IsArray()); return data_.a.size; }$/;"	f	class:GenericValue
Size	include/rapidjson/document.h	/^    SizeType Size() const { return value_.Size(); }$/;"	f	class:GenericArray
SizeType	include/rapidjson/rapidjson.h	/^typedef unsigned SizeType;$/;"	t
SkipUnescapedString	include/rapidjson/reader.h	/^    static RAPIDJSON_FORCEINLINE void SkipUnescapedString(InsituStringStream& is) {$/;"	f	class:GenericReader
SkipWhitespace	include/rapidjson/reader.h	/^inline const char* SkipWhitespace(const char* p, const char* end) {$/;"	f
SkipWhitespace	include/rapidjson/reader.h	/^template<> inline void SkipWhitespace(EncodedInputStream<UTF8<>, MemoryStream>& is) {$/;"	f
SkipWhitespace	include/rapidjson/reader.h	/^template<> inline void SkipWhitespace(InsituStringStream& is) {$/;"	f
SkipWhitespace	include/rapidjson/reader.h	/^template<> inline void SkipWhitespace(StringStream& is) {$/;"	f
SkipWhitespace	include/rapidjson/reader.h	/^void SkipWhitespace(InputStream& is) {$/;"	f
SkipWhitespaceAndComments	include/rapidjson/reader.h	/^    void SkipWhitespaceAndComments(InputStream& is) {$/;"	f	class:GenericReader
SkipWhitespace_SIMD	include/rapidjson/reader.h	/^inline const char *SkipWhitespace_SIMD(const char* p) {$/;"	f
SkipWhitespace_SIMD	include/rapidjson/reader.h	/^inline const char *SkipWhitespace_SIMD(const char* p, const char* end) {$/;"	f
Stack	include/rapidjson/internal/stack.h	/^    Stack(Allocator* allocator, size_t stackCapacity) : allocator_(allocator), ownAllocator_(0), stack_(0), stackTop_(0), stackEnd_(0), initialCapacity_(stackCapacity) {$/;"	f	class:internal::Stack
Stack	include/rapidjson/internal/stack.h	/^    Stack(Stack&& rhs)$/;"	f	class:internal::Stack
Stack	include/rapidjson/internal/stack.h	/^class Stack {$/;"	c	namespace:internal
StackStream	include/rapidjson/reader.h	/^        StackStream(internal::Stack<StackAllocator>& stack) : stack_(stack), length_(0) {}$/;"	f	class:GenericReader::StackStream
StackStream	include/rapidjson/reader.h	/^    class StackStream {$/;"	c	class:GenericReader
StartArray	include/rapidjson/document.h	/^    bool StartArray() { new (stack_.template Push<ValueType>()) ValueType(kArrayType); return true; }$/;"	f	class:GenericDocument
StartArray	include/rapidjson/prettywriter.h	/^    bool StartArray() {$/;"	f	class:PrettyWriter
StartArray	include/rapidjson/reader.h	/^    bool StartArray() { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
StartArray	include/rapidjson/schema.h	/^    bool StartArray() { return true; }$/;"	f	class:internal::Hasher
StartArray	include/rapidjson/schema.h	/^    bool StartArray() {$/;"	f	class:GenericSchemaValidator
StartArray	include/rapidjson/schema.h	/^    bool StartArray(Context& context) const {$/;"	f	class:internal::Schema
StartArray	include/rapidjson/writer.h	/^    bool StartArray() {$/;"	f	class:Writer
StartDependencyErrors	include/rapidjson/schema.h	/^    void StartDependencyErrors() {$/;"	f	class:GenericSchemaValidator
StartDisallowedType	include/rapidjson/schema.h	/^    void StartDisallowedType() {$/;"	f	class:GenericSchemaValidator
StartMissingDependentProperties	include/rapidjson/schema.h	/^    void StartMissingDependentProperties() {$/;"	f	class:GenericSchemaValidator
StartMissingProperties	include/rapidjson/schema.h	/^    void StartMissingProperties() {$/;"	f	class:GenericSchemaValidator
StartObject	include/rapidjson/document.h	/^    bool StartObject() { new (stack_.template Push<ValueType>()) ValueType(kObjectType); return true; }$/;"	f	class:GenericDocument
StartObject	include/rapidjson/prettywriter.h	/^    bool StartObject() {$/;"	f	class:PrettyWriter
StartObject	include/rapidjson/reader.h	/^    bool StartObject() { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
StartObject	include/rapidjson/schema.h	/^    bool StartObject() { return true; }$/;"	f	class:internal::Hasher
StartObject	include/rapidjson/schema.h	/^    bool StartObject() {$/;"	f	class:GenericSchemaValidator
StartObject	include/rapidjson/schema.h	/^    bool StartObject(Context& context) const {$/;"	f	class:internal::Schema
StartObject	include/rapidjson/writer.h	/^    bool StartObject() {$/;"	f	class:Writer
State	include/rapidjson/internal/regex.h	/^    struct State {$/;"	s	class:internal::GenericRegex
State	include/rapidjson/internal/regex.h	/^    typedef typename RegexType::State State;$/;"	t	class:internal::GenericRegexSearch
StaticAssertTest	include/rapidjson/rapidjson.h	/^template <size_t x> struct StaticAssertTest {};$/;"	s
StrLen	include/rapidjson/internal/strfunc.h	/^inline SizeType StrLen(const Ch* s) {$/;"	f	namespace:internal
StrLen	include/rapidjson/internal/strfunc.h	/^inline SizeType StrLen(const char* s) {$/;"	f	namespace:internal
StrLen	include/rapidjson/internal/strfunc.h	/^inline SizeType StrLen(const wchar_t* s) {$/;"	f	namespace:internal
StreamLocalCopy	include/rapidjson/reader.h	/^    StreamLocalCopy(Stream& original) : s(original) {}$/;"	f	class:internal::StreamLocalCopy
StreamLocalCopy	include/rapidjson/reader.h	/^    StreamLocalCopy(Stream& original) : s(original), original_(original) {}$/;"	f	class:internal::StreamLocalCopy
StreamLocalCopy	include/rapidjson/reader.h	/^class StreamLocalCopy<Stream, 0> {$/;"	c	namespace:internal
StreamLocalCopy	include/rapidjson/reader.h	/^class StreamLocalCopy<Stream, 1> {$/;"	c	namespace:internal
StreamTraits	include/rapidjson/stream.h	/^struct StreamTraits {$/;"	s
StreamTraits	include/rapidjson/stream.h	/^struct StreamTraits<GenericInsituStringStream<Encoding> > {$/;"	s
StreamTraits	include/rapidjson/stream.h	/^struct StreamTraits<GenericStringStream<Encoding> > {$/;"	s
String	include/rapidjson/document.h	/^    bool String(const Ch* str, SizeType length, bool copy) { $/;"	f	class:GenericDocument
String	include/rapidjson/document.h	/^    struct String {$/;"	s	class:GenericValue
String	include/rapidjson/prettywriter.h	/^    bool String(const Ch* str) { return String(str, internal::StrLen(str)); }$/;"	f	class:PrettyWriter
String	include/rapidjson/prettywriter.h	/^    bool String(const Ch* str, SizeType length, bool copy = false) {$/;"	f	class:PrettyWriter
String	include/rapidjson/prettywriter.h	/^    bool String(const std::basic_string<Ch>& str) {$/;"	f	class:PrettyWriter
String	include/rapidjson/reader.h	/^    bool String(const Ch*, SizeType, bool) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
String	include/rapidjson/schema.h	/^    bool String(Context& context, const Ch* str, SizeType length, bool) const {$/;"	f	class:internal::Schema
String	include/rapidjson/schema.h	/^    bool String(const Ch* str, SizeType len, bool) {$/;"	f	class:internal::Hasher
String	include/rapidjson/schema.h	/^    bool String(const Ch* str, SizeType length, bool copy)$/;"	f	class:GenericSchemaValidator
String	include/rapidjson/writer.h	/^    bool String(const Ch* const& str) { return String(str, internal::StrLen(str)); }$/;"	f	class:Writer
String	include/rapidjson/writer.h	/^    bool String(const Ch* str, SizeType length, bool copy = false) {$/;"	f	class:Writer
String	include/rapidjson/writer.h	/^    bool String(const std::basic_string<Ch>& str) {$/;"	f	class:Writer
StringBuffer	include/rapidjson/fwd.h	/^typedef GenericStringBuffer<UTF8<char>, CrtAllocator> StringBuffer;$/;"	t
StringBuffer	include/rapidjson/stringbuffer.h	/^typedef GenericStringBuffer<UTF8<> > StringBuffer;$/;"	t
StringEqual	include/rapidjson/document.h	/^    bool StringEqual(const GenericValue<Encoding, SourceAllocator>& rhs) const {$/;"	f	class:GenericValue
StringRef	include/rapidjson/document.h	/^inline GenericStringRef<CharType> StringRef(const CharType* str) {$/;"	f
StringRef	include/rapidjson/document.h	/^inline GenericStringRef<CharType> StringRef(const CharType* str, size_t length) {$/;"	f
StringRef	include/rapidjson/document.h	/^inline GenericStringRef<CharType> StringRef(const std::basic_string<CharType>& str) {$/;"	f
StringRefType	include/rapidjson/document.h	/^    typedef GenericStringRef<Ch> StringRefType;     \/\/!< Reference to a constant string$/;"	t	class:GenericValue
StringRefType	include/rapidjson/document.h	/^    typedef typename ValueType::StringRefType StringRefType;$/;"	t	class:GenericArray
StringRefType	include/rapidjson/document.h	/^    typedef typename ValueType::StringRefType StringRefType;$/;"	t	class:GenericObject
StringRefType	include/rapidjson/schema.h	/^    typedef GenericStringRef<Ch> StringRefType;$/;"	t	class:GenericSchemaValidator
StringStream	include/rapidjson/fwd.h	/^typedef GenericStringStream<UTF8<char> > StringStream;$/;"	t
StringStream	include/rapidjson/stream.h	/^typedef GenericStringStream<UTF8<> > StringStream;$/;"	t
StringToken	include/rapidjson/reader.h	/^        StringToken,$/;"	e	enum:GenericReader::Token
StringType	include/rapidjson/document.h	/^    typedef const typename ValueType::Ch* StringType;$/;"	t	struct:internal::TypeHelper
StringType	include/rapidjson/document.h	/^    typedef std::basic_string<typename ValueType::Ch> StringType;$/;"	t	struct:internal::TypeHelper
Stringify	include/rapidjson/pointer.h	/^    bool Stringify(OutputStream& os) const {$/;"	f	class:GenericPointer
StringifyUriFragment	include/rapidjson/pointer.h	/^    bool StringifyUriFragment(OutputStream& os) const {$/;"	f	class:GenericPointer
StrtodBigInteger	include/rapidjson/internal/strtod.h	/^inline double StrtodBigInteger(double approx, const char* decimals, int dLen, int dExp) {$/;"	f	namespace:internal
StrtodDiyFp	include/rapidjson/internal/strtod.h	/^inline bool StrtodDiyFp(const char* decimals, int dLen, int dExp, double* result) {$/;"	f	namespace:internal
StrtodFast	include/rapidjson/internal/strtod.h	/^inline bool StrtodFast(double d, int p, double* result) {$/;"	f	namespace:internal
StrtodFullPrecision	include/rapidjson/internal/strtod.h	/^inline double StrtodFullPrecision(double d, int p, const char* decimals, size_t length, size_t decimalPosition, int exp) {$/;"	f	namespace:internal
StrtodNormalPrecision	include/rapidjson/internal/strtod.h	/^inline double StrtodNormalPrecision(double d, int p) {$/;"	f	namespace:internal
Swap	include/rapidjson/pointer.h	/^    ValueType& Swap(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, ValueType& value) const {$/;"	f	class:GenericPointer
Swap	include/rapidjson/pointer.h	/^    ValueType& Swap(ValueType& root, ValueType& value, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
SwapValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SwapValueByPointer(DocumentType& document, const CharType(&source)[N], typename DocumentType::ValueType& value) {$/;"	f
SwapValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SwapValueByPointer(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, typename DocumentType::ValueType& value) {$/;"	f
SwapValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SwapValueByPointer(T& root, const CharType(&source)[N], typename T::ValueType& value, typename T::AllocatorType& a) {$/;"	f
SwapValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SwapValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, typename T::ValueType& value, typename T::AllocatorType& a) {$/;"	f
Take	include/rapidjson/cursorstreamwrapper.h	/^    Ch Take() {$/;"	f	class:CursorStreamWrapper
Take	include/rapidjson/encodedstream.h	/^    Ch Take() { Ch c = current_; current_ = Encoding::Take(is_); return c; }$/;"	f	class:EncodedInputStream
Take	include/rapidjson/encodedstream.h	/^    Ch Take() { Ch c = current_; current_ = takeFunc_(*is_); return c; }$/;"	f	class:AutoUTFInputStream
Take	include/rapidjson/encodedstream.h	/^    Ch Take() { RAPIDJSON_ASSERT(false); return 0;}$/;"	f	class:AutoUTFOutputStream
Take	include/rapidjson/encodedstream.h	/^    Ch Take() { RAPIDJSON_ASSERT(false); return 0;}$/;"	f	class:EncodedOutputStream
Take	include/rapidjson/encodedstream.h	/^    Ch Take() { return is_.Take(); }$/;"	f	class:EncodedInputStream
Take	include/rapidjson/encodings.h	/^    static Ch Take(InputByteStream& is) {$/;"	f	struct:ASCII
Take	include/rapidjson/encodings.h	/^    static Ch Take(InputByteStream& is) {$/;"	f	struct:UTF8
Take	include/rapidjson/encodings.h	/^    static CharType Take(InputByteStream& is) {$/;"	f	struct:UTF16BE
Take	include/rapidjson/encodings.h	/^    static CharType Take(InputByteStream& is) {$/;"	f	struct:UTF16LE
Take	include/rapidjson/encodings.h	/^    static CharType Take(InputByteStream& is) {$/;"	f	struct:UTF32BE
Take	include/rapidjson/encodings.h	/^    static CharType Take(InputByteStream& is) {$/;"	f	struct:UTF32LE
Take	include/rapidjson/filereadstream.h	/^    Ch Take() { Ch c = *current_; Read(); return c; }$/;"	f	class:FileReadStream
Take	include/rapidjson/filewritestream.h	/^    char Take() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
Take	include/rapidjson/internal/regex.h	/^    unsigned Take() {$/;"	f	class:internal::DecodedStream
Take	include/rapidjson/istreamwrapper.h	/^    Ch Take() { $/;"	f	class:BasicIStreamWrapper
Take	include/rapidjson/memorystream.h	/^    Ch Take() { return RAPIDJSON_UNLIKELY(src_ == end_) ? '\\0' : *src_++; }$/;"	f	struct:MemoryStream
Take	include/rapidjson/ostreamwrapper.h	/^    char Take() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:BasicOStreamWrapper
Take	include/rapidjson/pointer.h	/^        Ch Take() {$/;"	f	class:GenericPointer::PercentDecodeStream
Take	include/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE Ch Take() { return Base::TakePush(); }$/;"	f	class:GenericReader::NumberStream
Take	include/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE Ch Take() { return is.Take(); }$/;"	f	class:GenericReader::NumberStream
Take	include/rapidjson/stream.h	/^    Ch Take() { return *src_++; }$/;"	f	struct:GenericInsituStringStream
Take	include/rapidjson/stream.h	/^    Ch Take() { return *src_++; }$/;"	f	struct:GenericStringStream
Take	include/rapidjson/stream.h	/^    Ch Take() { return is_.Take(); }$/;"	f	class:GenericStreamWrapper
TakeBOM	include/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:ASCII
TakeBOM	include/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF16BE
TakeBOM	include/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF16LE
TakeBOM	include/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF32BE
TakeBOM	include/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF32LE
TakeBOM	include/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF8
TakeFunc	include/rapidjson/encodedstream.h	/^    typedef Ch (*TakeFunc)(InputByteStream& is);$/;"	t	class:AutoUTFInputStream
TakePush	include/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE Ch TakePush() { return is.Take(); }$/;"	f	class:GenericReader::NumberStream
TakePush	include/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE Ch TakePush() {$/;"	f	class:GenericReader::NumberStream
Tell	include/rapidjson/encodedstream.h	/^    size_t Tell() const { RAPIDJSON_ASSERT(false);  return 0; }$/;"	f	class:EncodedOutputStream
Tell	include/rapidjson/encodedstream.h	/^    size_t Tell() const { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFOutputStream
Tell	include/rapidjson/encodedstream.h	/^    size_t Tell() const { return is_->Tell(); }$/;"	f	class:AutoUTFInputStream
Tell	include/rapidjson/encodedstream.h	/^    size_t Tell() const { return is_.Tell(); }$/;"	f	class:EncodedInputStream
Tell	include/rapidjson/filereadstream.h	/^    size_t Tell() const { return count_ + static_cast<size_t>(current_ - buffer_); }$/;"	f	class:FileReadStream
Tell	include/rapidjson/filewritestream.h	/^    size_t Tell() const { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
Tell	include/rapidjson/istreamwrapper.h	/^    size_t Tell() const { return count_; }$/;"	f	class:BasicIStreamWrapper
Tell	include/rapidjson/memorystream.h	/^    size_t Tell() const { return static_cast<size_t>(src_ - begin_); }$/;"	f	struct:MemoryStream
Tell	include/rapidjson/ostreamwrapper.h	/^    size_t Tell() const { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:BasicOStreamWrapper
Tell	include/rapidjson/pointer.h	/^        size_t Tell() const { return static_cast<size_t>(src_ - head_); }$/;"	f	class:GenericPointer::PercentDecodeStream
Tell	include/rapidjson/reader.h	/^        size_t Tell() { return is.Tell(); }$/;"	f	class:GenericReader::NumberStream
Tell	include/rapidjson/stream.h	/^    size_t Tell() const { return static_cast<size_t>(src_ - head_); }$/;"	f	struct:GenericStringStream
Tell	include/rapidjson/stream.h	/^    size_t Tell() { return is_.Tell(); }$/;"	f	class:GenericStreamWrapper
Tell	include/rapidjson/stream.h	/^    size_t Tell() { return static_cast<size_t>(src_ - head_); }$/;"	f	struct:GenericInsituStringStream
ToBias	include/rapidjson/internal/ieee754.h	/^    uint64_t ToBias() const { return (u_ & kSignMask) ? ~u_ + 1 : u_ | kSignMask; }$/;"	f	class:internal::Double
ToDouble	include/rapidjson/internal/diyfp.h	/^    double ToDouble() const {$/;"	f	struct:internal::DiyFp
Token	include/rapidjson/pointer.h	/^    struct Token {$/;"	s	class:GenericPointer
Token	include/rapidjson/reader.h	/^    enum Token {$/;"	g	class:GenericReader
TokenHelper	include/rapidjson/schema.h	/^struct TokenHelper {$/;"	s	namespace:internal
TokenHelper	include/rapidjson/schema.h	/^struct TokenHelper<Stack, char> {$/;"	s	namespace:internal
Tokenize	include/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE Token Tokenize(Ch c) const {$/;"	f	class:GenericReader
TooFewItems	include/rapidjson/schema.h	/^    void TooFewItems(SizeType actualCount, SizeType expectedCount) {$/;"	f	class:GenericSchemaValidator
TooFewProperties	include/rapidjson/schema.h	/^    void TooFewProperties(SizeType actualCount, SizeType expectedCount) {$/;"	f	class:GenericSchemaValidator
TooLong	include/rapidjson/schema.h	/^    void TooLong(const Ch* str, SizeType length, SizeType expected) {$/;"	f	class:GenericSchemaValidator
TooManyItems	include/rapidjson/schema.h	/^    void TooManyItems(SizeType actualCount, SizeType expectedCount) {$/;"	f	class:GenericSchemaValidator
TooManyProperties	include/rapidjson/schema.h	/^    void TooManyProperties(SizeType actualCount, SizeType expectedCount) {$/;"	f	class:GenericSchemaValidator
TooShort	include/rapidjson/schema.h	/^    void TooShort(const Ch* str, SizeType length, SizeType expected) {$/;"	f	class:GenericSchemaValidator
Top	include/rapidjson/internal/stack.h	/^    T* Top() { $/;"	f	class:internal::Stack
Top	include/rapidjson/internal/stack.h	/^    const T* Top() const {$/;"	f	class:internal::Stack
Transcode	include/rapidjson/encodings.h	/^    static RAPIDJSON_FORCEINLINE bool Transcode(InputStream& is, OutputStream& os) {$/;"	f	struct:Transcoder
TranscodeUnsafe	include/rapidjson/encodings.h	/^    static RAPIDJSON_FORCEINLINE bool TranscodeUnsafe(InputStream& is, OutputStream& os) {$/;"	f	struct:Transcoder
Transcoder	include/rapidjson/encodings.h	/^struct Transcoder {$/;"	s
Transcoder	include/rapidjson/encodings.h	/^struct Transcoder<Encoding, Encoding> {$/;"	s
Transit	include/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE IterativeParsingState Transit(IterativeParsingState src, Token token, IterativeParsingState dst, InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
TrueToken	include/rapidjson/reader.h	/^        TrueToken,$/;"	e	enum:GenericReader::Token
TrueType	include/rapidjson/internal/meta.h	/^typedef BoolType<true> TrueType;$/;"	t	namespace:internal
Type	include/rapidjson/internal/biginteger.h	/^    typedef uint64_t Type;$/;"	t	class:internal::BigInteger
Type	include/rapidjson/internal/meta.h	/^    typedef BoolType Type;$/;"	t	struct:internal::BoolType
Type	include/rapidjson/internal/meta.h	/^template <> struct SelectIfImpl<false> { template <typename T1, typename T2> struct Apply { typedef T2 Type; }; };$/;"	t	struct:internal::SelectIfImpl::Apply
Type	include/rapidjson/internal/meta.h	/^template <bool C> struct SelectIfImpl { template <typename T1, typename T2> struct Apply { typedef T1 Type; }; };$/;"	t	struct:internal::SelectIfImpl::Apply
Type	include/rapidjson/internal/meta.h	/^template <bool Condition, typename T = void> struct DisableIfCond { typedef T Type; };$/;"	t	struct:internal::DisableIfCond
Type	include/rapidjson/internal/meta.h	/^template <bool Condition, typename T = void> struct EnableIfCond  { typedef T Type; };$/;"	t	struct:internal::EnableIfCond
Type	include/rapidjson/internal/meta.h	/^template <typename T> struct AddConst { typedef const T Type; };$/;"	t	struct:internal::AddConst
Type	include/rapidjson/internal/meta.h	/^template <typename T> struct RemoveConst { typedef T Type; };$/;"	t	struct:internal::RemoveConst
Type	include/rapidjson/internal/meta.h	/^template <typename T> struct RemoveConst<const T> { typedef T Type; };$/;"	t	struct:internal::RemoveConst
Type	include/rapidjson/internal/meta.h	/^template <typename T> struct RemoveSfinaeTag<SfinaeTag&(*)(T)> { typedef T Type; };$/;"	t	struct:internal::RemoveSfinaeTag
Type	include/rapidjson/internal/meta.h	/^template <typename T> struct Void { typedef void Type; };$/;"	t	struct:internal::Void
Type	include/rapidjson/rapidjson.h	/^enum Type {$/;"	g
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper {};$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, bool> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, const typename ValueType::Ch*> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, double> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, float> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, int64_t> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, int> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, long> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, std::basic_string<typename ValueType::Ch> > {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, typename ValueType::Array> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, typename ValueType::ConstArray> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, typename ValueType::ConstObject> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, typename ValueType::Object> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, uint64_t> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, unsigned long> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, unsigned> {$/;"	s	namespace:internal
U	include/rapidjson/document.h	/^        struct U {$/;"	s	union:GenericValue::Number
U	include/rapidjson/schema.h	/^        union U {$/;"	u	struct:internal::Hasher::Number
UINT16_C	include/rapidjson/msinttypes/stdint.h	282;"	d
UINT16_C	include/rapidjson/msinttypes/stdint.h	59;"	d
UINT16_C	include/rapidjson/msinttypes/stdint.h	71;"	d
UINT16_MAX	include/rapidjson/msinttypes/stdint.h	187;"	d
UINT32_C	include/rapidjson/msinttypes/stdint.h	283;"	d
UINT32_C	include/rapidjson/msinttypes/stdint.h	60;"	d
UINT32_C	include/rapidjson/msinttypes/stdint.h	72;"	d
UINT32_MAX	include/rapidjson/msinttypes/stdint.h	188;"	d
UINT64_C	include/rapidjson/msinttypes/stdint.h	284;"	d
UINT64_C	include/rapidjson/msinttypes/stdint.h	61;"	d
UINT64_C	include/rapidjson/msinttypes/stdint.h	73;"	d
UINT64_MAX	include/rapidjson/msinttypes/stdint.h	189;"	d
UINT8_C	include/rapidjson/msinttypes/stdint.h	281;"	d
UINT8_C	include/rapidjson/msinttypes/stdint.h	58;"	d
UINT8_C	include/rapidjson/msinttypes/stdint.h	70;"	d
UINT8_MAX	include/rapidjson/msinttypes/stdint.h	186;"	d
UINTMAX_C	include/rapidjson/msinttypes/stdint.h	293;"	d
UINTMAX_C	include/rapidjson/msinttypes/stdint.h	82;"	d
UINTMAX_MAX	include/rapidjson/msinttypes/stdint.h	233;"	d
UINTPTR_MAX	include/rapidjson/msinttypes/stdint.h	223;"	d
UINTPTR_MAX	include/rapidjson/msinttypes/stdint.h	227;"	d
UINT_FAST16_MAX	include/rapidjson/msinttypes/stdint.h	215;"	d
UINT_FAST32_MAX	include/rapidjson/msinttypes/stdint.h	216;"	d
UINT_FAST64_MAX	include/rapidjson/msinttypes/stdint.h	217;"	d
UINT_FAST8_MAX	include/rapidjson/msinttypes/stdint.h	214;"	d
UINT_LEAST16_MAX	include/rapidjson/msinttypes/stdint.h	201;"	d
UINT_LEAST32_MAX	include/rapidjson/msinttypes/stdint.h	202;"	d
UINT_LEAST64_MAX	include/rapidjson/msinttypes/stdint.h	203;"	d
UINT_LEAST8_MAX	include/rapidjson/msinttypes/stdint.h	200;"	d
URIType	include/rapidjson/schema.h	/^    typedef GenericValue<EncodingType, Allocator> URIType;$/;"	t	class:GenericSchemaDocument
UTF16	include/rapidjson/encodings.h	/^struct UTF16 {$/;"	s
UTF16BE	include/rapidjson/encodings.h	/^struct UTF16BE : UTF16<CharType> {$/;"	s
UTF16LE	include/rapidjson/encodings.h	/^struct UTF16LE : UTF16<CharType> {$/;"	s
UTF32	include/rapidjson/encodings.h	/^struct UTF32 {$/;"	s
UTF32BE	include/rapidjson/encodings.h	/^struct UTF32BE : UTF32<CharType> {$/;"	s
UTF32LE	include/rapidjson/encodings.h	/^struct UTF32LE : UTF32<CharType> {$/;"	s
UTF8	include/rapidjson/encodings.h	/^struct UTF8 {$/;"	s
UTFType	include/rapidjson/encodings.h	/^enum UTFType {$/;"	g
UV_VERSION_MAJOR	include/libwebsockets/lws-esp32.h	64;"	d
Uint	include/rapidjson/document.h	/^    bool Uint(unsigned i) { new (stack_.template Push<ValueType>()) ValueType(i); return true; }$/;"	f	class:GenericDocument
Uint	include/rapidjson/prettywriter.h	/^    bool Uint(unsigned u)       { PrettyPrefix(kNumberType); return Base::EndValue(Base::WriteUint(u)); }$/;"	f	class:PrettyWriter
Uint	include/rapidjson/reader.h	/^    bool Uint(unsigned) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Uint	include/rapidjson/schema.h	/^    bool Uint(Context& context, unsigned u) const {$/;"	f	class:internal::Schema
Uint	include/rapidjson/schema.h	/^    bool Uint(unsigned u)   { RAPIDJSON_SCHEMA_HANDLE_VALUE_(Uint,   (CurrentContext(), u), (u)); }$/;"	f	class:GenericSchemaValidator
Uint	include/rapidjson/schema.h	/^    bool Uint(unsigned u) { Number n; n.u.u = u; n.d = static_cast<double>(u); return WriteNumber(n); }$/;"	f	class:internal::Hasher
Uint	include/rapidjson/writer.h	/^    bool Uint(unsigned u)       { Prefix(kNumberType); return EndValue(WriteUint(u)); }$/;"	f	class:Writer
Uint64	include/rapidjson/document.h	/^    bool Uint64(uint64_t i) { new (stack_.template Push<ValueType>()) ValueType(i); return true; }$/;"	f	class:GenericDocument
Uint64	include/rapidjson/prettywriter.h	/^    bool Uint64(uint64_t u64)   { PrettyPrefix(kNumberType); return Base::EndValue(Base::WriteUint64(u64));  }$/;"	f	class:PrettyWriter
Uint64	include/rapidjson/reader.h	/^    bool Uint64(uint64_t) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Uint64	include/rapidjson/schema.h	/^    bool Uint64(Context& context, uint64_t u) const {$/;"	f	class:internal::Schema
Uint64	include/rapidjson/schema.h	/^    bool Uint64(uint64_t u) { Number n; n.u.u = u; n.d = static_cast<double>(u); return WriteNumber(n); }$/;"	f	class:internal::Hasher
Uint64	include/rapidjson/schema.h	/^    bool Uint64(uint64_t u) { RAPIDJSON_SCHEMA_HANDLE_VALUE_(Uint64, (CurrentContext(), u), (u)); }$/;"	f	class:GenericSchemaValidator
Uint64	include/rapidjson/writer.h	/^    bool Uint64(uint64_t u64)   { Prefix(kNumberType); return EndValue(WriteUint64(u64)); }$/;"	f	class:Writer
Uint64Value	include/rapidjson/internal/ieee754.h	/^    uint64_t Uint64Value() const { return u_; }$/;"	f	class:internal::Double
Usable	include/rapidjson/document.h	/^        inline static bool Usable(SizeType len) { return                       (MaxSize >= len); }$/;"	f	struct:GenericValue::ShortString
Validate	include/rapidjson/encodings.h	/^    static RAPIDJSON_FORCEINLINE bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:AutoUTF
Validate	include/rapidjson/encodings.h	/^    static RAPIDJSON_FORCEINLINE bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:Transcoder
Validate	include/rapidjson/encodings.h	/^    static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:ASCII
Validate	include/rapidjson/encodings.h	/^    static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:UTF16
Validate	include/rapidjson/encodings.h	/^    static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:UTF32
Validate	include/rapidjson/encodings.h	/^    static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:UTF8
Value	include/rapidjson/document.h	/^typedef GenericValue<UTF8<> > Value;$/;"	t
Value	include/rapidjson/fwd.h	/^typedef GenericValue<UTF8<char>, MemoryPoolAllocator<CrtAllocator> > Value;$/;"	t
Value	include/rapidjson/internal/ieee754.h	/^    double Value() const { return d_; }$/;"	f	class:internal::Double
Value	include/rapidjson/internal/meta.h	/^    enum { Value = (sizeof(Check(Host(), 0)) == sizeof(Yes)) };$/;"	e	enum:internal::IsBaseOfImpl::__anon26
Value	include/rapidjson/internal/meta.h	/^    static const bool Value = Cond;$/;"	m	struct:internal::BoolType
ValueIterator	include/rapidjson/document.h	/^    typedef GenericValue* ValueIterator;            \/\/!< Value iterator for iterating in array.$/;"	t	class:GenericValue
ValueIterator	include/rapidjson/document.h	/^    typedef ValueType* ValueIterator;  \/\/ This may be const or non-const iterator$/;"	t	class:GenericArray
ValueType	include/rapidjson/document.h	/^    typedef GenericValue<Encoding, Allocator> ValueType;    \/\/!< Value type of itself.$/;"	t	class:GenericValue
ValueType	include/rapidjson/document.h	/^    typedef GenericValue<Encoding, Allocator> ValueType;    \/\/!< Value type of the document.$/;"	t	class:GenericDocument
ValueType	include/rapidjson/document.h	/^    typedef typename internal::MaybeAddConst<Const,PlainType>::Type ValueType;$/;"	t	class:GenericArray
ValueType	include/rapidjson/document.h	/^    typedef typename internal::MaybeAddConst<Const,PlainType>::Type ValueType;$/;"	t	class:GenericMemberIterator
ValueType	include/rapidjson/document.h	/^    typedef typename internal::MaybeAddConst<Const,PlainType>::Type ValueType;$/;"	t	class:GenericObject
ValueType	include/rapidjson/schema.h	/^    typedef GenericValue<EncodingType, StateAllocator> ValueType;$/;"	t	class:GenericSchemaValidator
ValueType	include/rapidjson/schema.h	/^    typedef GenericValue<SourceEncoding, StackAllocator> ValueType;$/;"	t	class:SchemaValidatingReader
ValueType	include/rapidjson/schema.h	/^    typedef ValueT ValueType;$/;"	t	class:GenericSchemaDocument
ValueType	include/rapidjson/schema.h	/^    typedef typename SchemaDocumentType::ValueType ValueType;$/;"	t	class:internal::Schema
ValueType	include/rapidjson/schema.h	/^    typedef typename SchemaType::ValueType ValueType;$/;"	t	struct:internal::SchemaValidationContext
Void	include/rapidjson/internal/meta.h	/^template <typename T> struct Void { typedef void Type; };$/;"	s	namespace:internal
WCHAR_MAX	include/rapidjson/msinttypes/stdint.h	261;"	d
WCHAR_MIN	include/rapidjson/msinttypes/stdint.h	258;"	d
WIN32_LEAN_AND_MEAN	include/libwebsockets.h	54;"	d
WINT_MAX	include/rapidjson/msinttypes/stdint.h	265;"	d
WINT_MIN	include/rapidjson/msinttypes/stdint.h	264;"	d
WIStreamWrapper	include/rapidjson/istreamwrapper.h	/^typedef BasicIStreamWrapper<std::wistream> WIStreamWrapper;$/;"	t
WOStreamWrapper	include/rapidjson/ostreamwrapper.h	/^typedef BasicOStreamWrapper<std::wostream> WOStreamWrapper;$/;"	t
WSI_INIT_TOKEN_MUXURL	include/libwebsockets/lws-http.h	/^	WSI_INIT_TOKEN_MUXURL,$/;"	e	enum:lws_token_indexes
WSI_PARSING_COMPLETE	include/libwebsockets/lws-http.h	/^	WSI_PARSING_COMPLETE,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_ACCEPT	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_ACCEPT					= 13,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_CHALLENGE	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_CHALLENGE					=  8,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_COLON_PROTOCOL	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_COLON_PROTOCOL				= 85,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_CONNECT	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_CONNECT					= 81,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_CONNECTION	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_CONNECTION					=  4,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_COUNT	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_COUNT,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_DELETE_URI	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_DELETE_URI					= 75,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_DRAFT	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_DRAFT						=  7,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_EXTENSIONS	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_EXTENSIONS					=  9,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_GET_URI	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_GET_URI					=  0,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HEAD_URI	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HEAD_URI					= 82,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HOST	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HOST						=  3,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP						= 15,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP1_0	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP1_0					= 79,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP2_SETTINGS	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP2_SETTINGS				= 16,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_ACCEPT	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_ACCEPT					= 17,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_ACCEPT_CHARSET	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_ACCEPT_CHARSET				= 40,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_ACCEPT_ENCODING	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_ACCEPT_ENCODING				= 21,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_ACCEPT_LANGUAGE	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_ACCEPT_LANGUAGE				= 22,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_ACCEPT_RANGES	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_ACCEPT_RANGES				= 41,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_ACCESS_CONTROL_ALLOW_ORIGIN	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_ACCESS_CONTROL_ALLOW_ORIGIN		= 42,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_AC_REQUEST_HEADERS	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_AC_REQUEST_HEADERS			= 18,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_AGE	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_AGE					= 43,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_ALLOW	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_ALLOW					= 44,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_AUTHORIZATION	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_AUTHORIZATION				= 25,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_CACHE_CONTROL	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_CACHE_CONTROL				= 24,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_COLON_AUTHORITY	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_COLON_AUTHORITY				= 35,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_COLON_METHOD	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_COLON_METHOD				= 36,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_COLON_PATH	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_COLON_PATH				= 37,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_COLON_SCHEME	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_COLON_SCHEME				= 38,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_COLON_STATUS	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_COLON_STATUS				= 39,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_CONTENT_DISPOSITION	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_CONTENT_DISPOSITION			= 45,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_CONTENT_ENCODING	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_CONTENT_ENCODING				= 46,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_CONTENT_LANGUAGE	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_CONTENT_LANGUAGE				= 47,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_CONTENT_LENGTH	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_CONTENT_LENGTH				= 27,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_CONTENT_LOCATION	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_CONTENT_LOCATION				= 48,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_CONTENT_RANGE	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_CONTENT_RANGE				= 49,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_CONTENT_TYPE	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_CONTENT_TYPE				= 28,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_COOKIE	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_COOKIE					= 26,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_DATE	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_DATE					= 29,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_ETAG	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_ETAG					= 50,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_EXPECT	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_EXPECT					= 51,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_EXPIRES	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_EXPIRES					= 52,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_FROM	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_FROM					= 53,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_IF_MATCH	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_IF_MATCH					= 54,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_IF_MODIFIED_SINCE	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_IF_MODIFIED_SINCE			= 19,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_IF_NONE_MATCH	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_IF_NONE_MATCH				= 20,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_IF_RANGE	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_IF_RANGE					= 55,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_IF_UNMODIFIED_SINCE	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_IF_UNMODIFIED_SINCE			= 56,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_LAST_MODIFIED	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_LAST_MODIFIED				= 57,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_LINK	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_LINK					= 58,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_LOCATION	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_LOCATION					= 59,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_MAX_FORWARDS	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_MAX_FORWARDS				= 60,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_PRAGMA	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_PRAGMA					= 23,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_PROXY_AUTHENTICATE	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_PROXY_AUTHENTICATE			= 61,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_PROXY_AUTHORIZATION	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_PROXY_AUTHORIZATION			= 62,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_RANGE	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_RANGE					= 30,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_REFERER	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_REFERER					= 31,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_REFRESH	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_REFRESH					= 63,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_RETRY_AFTER	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_RETRY_AFTER				= 64,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_SERVER	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_SERVER					= 65,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_SET_COOKIE	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_SET_COOKIE				= 66,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_STRICT_TRANSPORT_SECURITY	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_STRICT_TRANSPORT_SECURITY		= 67,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_TRANSFER_ENCODING	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_TRANSFER_ENCODING			= 68,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_URI_ARGS	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_URI_ARGS					= 76,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_USER_AGENT	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_USER_AGENT				= 69,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_VARY	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_VARY					= 70,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_VIA	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_VIA					= 71,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_WWW_AUTHENTICATE	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_WWW_AUTHENTICATE				= 72,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_HTTP_X_REAL_IP	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_HTTP_X_REAL_IP				= 78,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_KEY	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_KEY						= 32,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_KEY1	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_KEY1						= 10,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_KEY2	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_KEY2						= 11,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_NAME_PART	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_NAME_PART,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_NONCE	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_NONCE						= 14,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_OPTIONS_URI	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_OPTIONS_URI					=  2,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_ORIGIN	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_ORIGIN					=  6,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_PATCH_URI	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_PATCH_URI					= 73,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_POST_URI	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_POST_URI					=  1,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_PROTOCOL	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_PROTOCOL					= 12,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_PROXY	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_PROXY						= 77,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_PUT_URI	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_PUT_URI					= 74,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_REPLAY_NONCE	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_REPLAY_NONCE					= 84,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_SKIPPING	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_SKIPPING,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_SKIPPING_SAW_CR	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_SKIPPING_SAW_CR,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_SWORIGIN	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_SWORIGIN					= 34,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_TE	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_TE						= 83,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_UPGRADE	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_UPGRADE					=  5,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_VERSION	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_VERSION					= 33,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_X_AUTH_TOKEN	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_X_AUTH_TOKEN					= 86,$/;"	e	enum:lws_token_indexes
WSI_TOKEN_X_FORWARDED_FOR	include/libwebsockets/lws-http.h	/^	WSI_TOKEN_X_FORWARDED_FOR				= 80,$/;"	e	enum:lws_token_indexes
WriteBool	include/rapidjson/writer.h	/^    bool WriteBool(bool b)  {$/;"	f	class:Writer
WriteBuffer	include/rapidjson/schema.h	/^    bool WriteBuffer(Type type, const void* data, size_t len) {$/;"	f	class:internal::Hasher
WriteDouble	include/rapidjson/writer.h	/^    bool WriteDouble(double d) {$/;"	f	class:Writer
WriteDouble	include/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteDouble(double d) {$/;"	f	class:Writer
WriteEndArray	include/rapidjson/writer.h	/^    bool WriteEndArray()    { os_->Put(']'); return true; }$/;"	f	class:Writer
WriteEndObject	include/rapidjson/writer.h	/^    bool WriteEndObject()   { os_->Put('}'); return true; }$/;"	f	class:Writer
WriteExponent	include/rapidjson/internal/dtoa.h	/^inline char* WriteExponent(int K, char* buffer) {$/;"	f	namespace:internal
WriteFlag	include/rapidjson/writer.h	/^enum WriteFlag {$/;"	g
WriteIndent	include/rapidjson/prettywriter.h	/^    void WriteIndent()  {$/;"	f	class:PrettyWriter
WriteInt	include/rapidjson/writer.h	/^    bool WriteInt(int i) {$/;"	f	class:Writer
WriteInt	include/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteInt(int i) {$/;"	f	class:Writer
WriteInt64	include/rapidjson/writer.h	/^    bool WriteInt64(int64_t i64) {$/;"	f	class:Writer
WriteInt64	include/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteInt64(int64_t i64) {$/;"	f	class:Writer
WriteNull	include/rapidjson/writer.h	/^    bool WriteNull()  {$/;"	f	class:Writer
WriteNumber	include/rapidjson/schema.h	/^    bool WriteNumber(const Number& n) { return WriteBuffer(kNumberType, &n, sizeof(n)); }$/;"	f	class:internal::Hasher
WriteRawValue	include/rapidjson/writer.h	/^    bool WriteRawValue(const Ch* json, size_t length) {$/;"	f	class:Writer
WriteStartArray	include/rapidjson/writer.h	/^    bool WriteStartArray()  { os_->Put('['); return true; }$/;"	f	class:Writer
WriteStartObject	include/rapidjson/writer.h	/^    bool WriteStartObject() { os_->Put('{'); return true; }$/;"	f	class:Writer
WriteString	include/rapidjson/writer.h	/^    bool WriteString(const Ch* str, SizeType length)  {$/;"	f	class:Writer
WriteType	include/rapidjson/schema.h	/^    bool WriteType(Type type) { return WriteBuffer(type, 0, 0); }$/;"	f	class:internal::Hasher
WriteUint	include/rapidjson/writer.h	/^    bool WriteUint(unsigned u) {$/;"	f	class:Writer
WriteUint	include/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteUint(unsigned u) {$/;"	f	class:Writer
WriteUint64	include/rapidjson/writer.h	/^    bool WriteUint64(uint64_t u64) {$/;"	f	class:Writer
WriteUint64	include/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteUint64(uint64_t u) {$/;"	f	class:Writer
Writer	include/rapidjson/writer.h	/^    Writer(OutputStream& os, StackAllocator* stackAllocator = 0, size_t levelDepth = kDefaultLevelDepth) : $/;"	f	class:Writer
Writer	include/rapidjson/writer.h	/^    Writer(StackAllocator* allocator = 0, size_t levelDepth = kDefaultLevelDepth) :$/;"	f	class:Writer
Writer	include/rapidjson/writer.h	/^    Writer(Writer&& rhs) :$/;"	f	class:Writer
Writer	include/rapidjson/writer.h	/^class Writer {$/;"	c
Yes	include/rapidjson/internal/meta.h	/^    typedef char (&Yes)[1];$/;"	t	struct:internal::IsBaseOfImpl
Z16	include/rapidjson/reader.h	991;"	d
Z16	include/rapidjson/reader.h	999;"	d
Z16	include/rapidjson/writer.h	379;"	d
Z16	include/rapidjson/writer.h	387;"	d
_DEBUG	include/lws_config.h	5;"	d
_EVAL_TYPES_____	include/eval_types.h	2;"	d
_LWS_PAD	include/libwebsockets/lws-write.h	38;"	d
_LWS_PAD_SIZE	include/libwebsockets/lws-write.h	34;"	d
_LWS_PAD_SIZE	include/libwebsockets/lws-write.h	36;"	d
_MSC_INTTYPES_H_	include/rapidjson/msinttypes/inttypes.h	42;"	d
_MSC_STDINT_H_	include/rapidjson/msinttypes/stdint.h	42;"	d
_O_RDONLY	include/libwebsockets.h	65;"	d
_W64	include/rapidjson/msinttypes/stdint.h	106;"	d
_W64	include/rapidjson/msinttypes/stdint.h	108;"	d
_WSI_TOKEN_CLIENT_ALPN	include/libwebsockets/lws-http.h	/^	_WSI_TOKEN_CLIENT_ALPN,$/;"	e	enum:lws_token_indexes
_WSI_TOKEN_CLIENT_HOST	include/libwebsockets/lws-http.h	/^	_WSI_TOKEN_CLIENT_HOST,$/;"	e	enum:lws_token_indexes
_WSI_TOKEN_CLIENT_IFACE	include/libwebsockets/lws-http.h	/^	_WSI_TOKEN_CLIENT_IFACE,$/;"	e	enum:lws_token_indexes
_WSI_TOKEN_CLIENT_METHOD	include/libwebsockets/lws-http.h	/^	_WSI_TOKEN_CLIENT_METHOD,$/;"	e	enum:lws_token_indexes
_WSI_TOKEN_CLIENT_ORIGIN	include/libwebsockets/lws-http.h	/^	_WSI_TOKEN_CLIENT_ORIGIN,$/;"	e	enum:lws_token_indexes
_WSI_TOKEN_CLIENT_PEER_ADDRESS	include/libwebsockets/lws-http.h	/^	_WSI_TOKEN_CLIENT_PEER_ADDRESS,$/;"	e	enum:lws_token_indexes
_WSI_TOKEN_CLIENT_SENT_PROTOCOLS	include/libwebsockets/lws-http.h	/^	_WSI_TOKEN_CLIENT_SENT_PROTOCOLS,$/;"	e	enum:lws_token_indexes
_WSI_TOKEN_CLIENT_URI	include/libwebsockets/lws-http.h	/^	_WSI_TOKEN_CLIENT_URI,$/;"	e	enum:lws_token_indexes
__func__	include/libwebsockets.h	94;"	d
__minimal_destroy_message	junk/protocol_lws_minimal.c	/^__minimal_destroy_message(void *_msg)$/;"	f	file:
__minimal_destroy_message	protocol_lws_minimal_server_echo.c	/^__minimal_destroy_message(void *_msg)$/;"	f	file:
_engine_t	include/eval_types.h	/^typedef struct _engine_t{$/;"	s
_lejp_stack	include/libwebsockets/lws-lejp.h	/^struct _lejp_stack {$/;"	s
_unused	include/libwebsockets/lws-client.h	/^	void *_unused[4]; \/**< dummy *\/$/;"	m	struct:lws_client_connect_info
_unused	include/libwebsockets/lws-context-vhost.h	/^	void *_unused[2]; \/**< dummy *\/$/;"	m	struct:lws_http_mount
_unused	include/libwebsockets/lws-context-vhost.h	/^	void *_unused[4]; \/**< dummy *\/$/;"	m	struct:lws_context_creation_info
a	include/rapidjson/document.h	/^        ArrayData a;$/;"	m	union:GenericValue::Data
access_pw	include/libwebsockets/lws-esp32.h	/^	char access_pw[16];$/;"	m	struct:lws_esp32
acme	include/libwebsockets/lws-esp32.h	/^	char acme;$/;"	m	struct:lws_esp32
action	include/eval_types.h	/^	int action;\/\/0:start, 1:binary,2:stop$/;"	m	struct:_engine_t
active_ssid	include/libwebsockets/lws-esp32.h	/^	char active_ssid[64];$/;"	m	struct:lws_esp32
additionalItemsSchema_	include/rapidjson/schema.h	/^    const SchemaType* additionalItemsSchema_;$/;"	m	class:internal::Schema
additionalItems_	include/rapidjson/schema.h	/^    bool additionalItems_;$/;"	m	class:internal::Schema
additionalPropertiesSchema_	include/rapidjson/schema.h	/^    const SchemaType* additionalPropertiesSchema_;$/;"	m	class:internal::Schema
additionalProperties_	include/rapidjson/schema.h	/^    bool additionalProperties_;$/;"	m	class:internal::Schema
addr	include/libwebsockets/lws-esp32.h	/^	struct ip4_addr addr;$/;"	m	struct:lws_group_member	typeref:struct:lws_group_member::ip4_addr
address	include/libwebsockets/lws-client.h	/^	const char *address;$/;"	m	struct:lws_client_connect_info
addrv6	include/libwebsockets/lws-esp32.h	/^	struct ip6_addr addrv6;$/;"	m	struct:lws_group_member	typeref:struct:lws_group_member::ip6_addr
allOf_	include/rapidjson/schema.h	/^    SchemaArray allOf_;$/;"	m	class:internal::Schema
allocator_	include/rapidjson/document.h	/^    Allocator* allocator_;$/;"	m	class:GenericDocument
allocator_	include/rapidjson/internal/regex.h	/^    Allocator* allocator_;$/;"	m	class:internal::GenericRegexSearch
allocator_	include/rapidjson/internal/stack.h	/^    Allocator* allocator_;$/;"	m	class:internal::Stack
allocator_	include/rapidjson/pointer.h	/^    Allocator* allocator_;                  \/\/!< The current allocator. It is either user-supplied or equal to ownAllocator_.$/;"	m	class:GenericPointer
allocator_	include/rapidjson/schema.h	/^    Allocator *allocator_;$/;"	m	class:GenericSchemaDocument
allocator_	include/rapidjson/schema.h	/^    AllocatorType* allocator_;$/;"	m	class:internal::Schema
allocator_	include/rapidjson/schema.h	/^    StackAllocator allocator_;$/;"	m	class:SchemaValidatingReader
alpn	include/libwebsockets/lws-client.h	/^	const char *alpn;$/;"	m	struct:lws_client_connect_info
alpn	include/libwebsockets/lws-context-vhost.h	/^	const char *alpn;$/;"	m	struct:lws_context_creation_info
amsg	junk/protocol_lws_minimal.c	/^	struct msg amsg; \/* the one pending message... *\/$/;"	m	struct:per_vhost_data__minimal	typeref:struct:per_vhost_data__minimal::msg	file:
anchorBegin_	include/rapidjson/internal/regex.h	/^    bool anchorBegin_;$/;"	m	class:internal::GenericRegex
anchorEnd_	include/rapidjson/internal/regex.h	/^    bool anchorEnd_;$/;"	m	class:internal::GenericRegex
anyOf_	include/rapidjson/schema.h	/^    SchemaArray anyOf_;$/;"	m	class:internal::Schema
api_magic	include/libwebsockets/lws-protocols-plugins.h	/^	unsigned int api_magic;	\/**< caller fills this in, plugin fills rest *\/$/;"	m	struct:lws_plugin_capability
arrayElementHashCodes	include/rapidjson/schema.h	/^    void* arrayElementHashCodes; \/\/ Only validator access this$/;"	m	struct:internal::SchemaValidationContext
arrayElementIndex	include/rapidjson/schema.h	/^    SizeType arrayElementIndex;$/;"	m	struct:internal::SchemaValidationContext
arrayUniqueness	include/rapidjson/schema.h	/^    bool arrayUniqueness;$/;"	m	struct:internal::SchemaValidationContext
auth_mask	include/libwebsockets/lws-context-vhost.h	/^	unsigned int auth_mask;$/;"	m	struct:lws_http_mount
authmode	include/libwebsockets/lws-misc.h	/^	uint8_t authmode;$/;"	m	struct:lws_wifi_scan
b	include/libwebsockets/lws-lejp.h	/^	char b; \/* user bitfield *\/$/;"	m	struct:_lejp_stack
baseAllocator_	include/rapidjson/allocators.h	/^    BaseAllocator* baseAllocator_;  \/\/!< base allocator for allocating memory chunks.$/;"	m	class:MemoryPoolAllocator
basic_auth_login_file	include/libwebsockets/lws-context-vhost.h	/^	const char *basic_auth_login_file;$/;"	m	struct:lws_http_mount
begin	include/rapidjson/document.h	/^    MemberIterator begin() const { return value_.MemberBegin(); }$/;"	f	class:GenericObject
begin	include/rapidjson/document.h	/^    ValueIterator begin() const { return value_.Begin(); }$/;"	f	class:GenericArray
begin	include/rapidjson/schema.h	/^        SizeType begin; \/\/ begin index of context.validators$/;"	m	struct:internal::Schema::SchemaArray
begin_	include/rapidjson/memorystream.h	/^    const Ch* begin_;   \/\/!< Original head of the string.$/;"	m	struct:MemoryStream
bin	include/libwebsockets/lws-plugin-generic-sessions.h	/^typedef struct { unsigned char bin[20]; \/**< binary representation of hash *\/} lwsgw_hash_bin;$/;"	m	struct:__anon11
binary	include/eval_types.h	/^	int binary;$/;"	m	struct:_engine_t
bind_iface	include/libwebsockets/lws-context-vhost.h	/^	int bind_iface;$/;"	m	struct:lws_context_creation_info
bssid	include/libwebsockets/lws-misc.h	/^	uint8_t bssid[6];$/;"	m	struct:lws_wifi_scan
buf	include/libwebsockets/lws-genrsa.h	/^	uint8_t *buf;$/;"	m	struct:lws_genrsa_element
buf	include/libwebsockets/lws-lejp.h	/^	char buf[LEJP_STRING_CHUNK + 1];$/;"	m	struct:lejp_ctx
buf	include/libwebsockets/lws-write.h	/^	unsigned char *buf;$/;"	m	struct:lws_write_passthru
buffer	include/eval_types.h	/^	char buffer[20*BUFSIZ];$/;"	m	struct:_engine_t
bufferEnd_	include/rapidjson/filewritestream.h	/^    char *bufferEnd_;$/;"	m	class:FileWriteStream
bufferLast_	include/rapidjson/filereadstream.h	/^    Ch *bufferLast_;$/;"	m	class:FileReadStream
bufferSize_	include/rapidjson/filereadstream.h	/^    size_t bufferSize_;$/;"	m	class:FileReadStream
buffer_	include/rapidjson/filereadstream.h	/^    Ch *buffer_;$/;"	m	class:FileReadStream
buffer_	include/rapidjson/filewritestream.h	/^    char *buffer_;$/;"	m	class:FileWriteStream
buflen	include/eval_types.h	/^	int  buflen;$/;"	m	struct:_engine_t
button_is_down	include/libwebsockets/lws-esp32.h	/^	volatile char button_is_down;$/;"	m	struct:lws_esp32
cIterativeParsingStateCount	include/rapidjson/reader.h	/^        cIterativeParsingStateCount$/;"	e	enum:GenericReader::IterativeParsingState
cache_intermediaries	include/libwebsockets/lws-context-vhost.h	/^	unsigned int cache_intermediaries:1; \/**< set if intermediaries are allowed to cache *\/$/;"	m	struct:lws_http_mount
cache_max_age	include/libwebsockets/lws-context-vhost.h	/^	int cache_max_age;$/;"	m	struct:lws_http_mount
cache_reusable	include/libwebsockets/lws-context-vhost.h	/^	unsigned int cache_reusable:1; \/**< set if client cache may reuse this *\/$/;"	m	struct:lws_http_mount
cache_revalidate	include/libwebsockets/lws-context-vhost.h	/^	unsigned int cache_revalidate:1; \/**< set if client cache should revalidate on use *\/$/;"	m	struct:lws_http_mount
callback	include/libwebsockets/lws-lejp.h	/^	signed char (*callback)(struct lejp_ctx *ctx, char reason);$/;"	m	struct:lejp_ctx
callback	include/libwebsockets/lws-protocols-plugins.h	/^	lws_callback_function *callback;$/;"	m	struct:lws_protocols
callback	include/libwebsockets/lws-ws-ext.h	/^	lws_extension_callback_function *callback; \/**< Service callback *\/$/;"	m	struct:lws_extension
callback_minimal	junk/protocol_lws_minimal.c	/^callback_minimal(struct lws *wsi, enum lws_callback_reasons reason,$/;"	f	file:
callback_minimal_server_echo	protocol_lws_minimal_server_echo.c	/^callback_minimal_server_echo(struct lws *wsi, enum lws_callback_reasons reason,$/;"	f	file:
capacity	include/rapidjson/allocators.h	/^        size_t capacity;    \/\/!< Capacity of the chunk in bytes (excluding the header itself).$/;"	m	struct:MemoryPoolAllocator::ChunkHeader
capacity	include/rapidjson/document.h	/^        SizeType capacity;$/;"	m	struct:GenericValue::ArrayData
capacity	include/rapidjson/document.h	/^        SizeType capacity;$/;"	m	struct:GenericValue::ObjectData
caps	include/libwebsockets/lws-context-vhost.h	/^	cap_value_t caps[4];$/;"	m	struct:lws_context_creation_info
caps	include/libwebsockets/lws-protocols-plugins.h	/^	struct lws_plugin_capability caps; \/**< plugin capabilities *\/$/;"	m	struct:lws_plugin	typeref:struct:lws_plugin::lws_plugin_capability
cb	include/libwebsockets/lws-esp32.h	/^	uv_cb_t *cb;$/;"	m	struct:timer_mapping
cgi_timeout	include/libwebsockets/lws-context-vhost.h	/^	int cgi_timeout;$/;"	m	struct:lws_http_mount
cgienv	include/libwebsockets/lws-context-vhost.h	/^	const struct lws_protocol_vhost_options *cgienv;$/;"	m	struct:lws_http_mount	typeref:struct:lws_http_mount::lws_protocol_vhost_options
ch	include/libwebsockets/lws-cgi.h	/^	enum lws_enum_stdinouterr ch; \/**< channel index *\/$/;"	m	struct:lws_cgi_args	typeref:enum:lws_cgi_args::lws_enum_stdinouterr
channel	include/libwebsockets/lws-misc.h	/^	uint8_t channel;$/;"	m	struct:lws_wifi_scan
chunkHead_	include/rapidjson/allocators.h	/^    ChunkHeader *chunkHead_;    \/\/!< Head of the chunk linked-list. Only the head chunk serves allocation.$/;"	m	class:MemoryPoolAllocator
chunk_capacity_	include/rapidjson/allocators.h	/^    size_t chunk_capacity_;     \/\/!< The minimum capacity of chunk when they are allocated.$/;"	m	class:MemoryPoolAllocator
chunked	include/libwebsockets/lws-http.h	/^	int chunked; \/**< 0 == unchunked, 1 == produce chunk headers (incompatible with HTTP\/2) *\/$/;"	m	struct:lws_process_html_args
cleanup	include/libwebsockets/lws-threadpool.h	/^	void (*cleanup)(struct lws *wsi, void *user);$/;"	m	struct:lws_threadpool_task_args
client_exts	include/libwebsockets/lws-client.h	/^	const void *client_exts;$/;"	m	struct:lws_client_connect_info
client_offer	include/libwebsockets/lws-ws-ext.h	/^	const char *client_offer; \/**< String containing exts and options client offers *\/$/;"	m	struct:lws_extension
client_ssl_ca_filepath	include/libwebsockets/lws-context-vhost.h	/^	const char *client_ssl_ca_filepath;$/;"	m	struct:lws_context_creation_info
client_ssl_ca_mem	include/libwebsockets/lws-context-vhost.h	/^	const void *client_ssl_ca_mem;$/;"	m	struct:lws_context_creation_info
client_ssl_ca_mem_len	include/libwebsockets/lws-context-vhost.h	/^	unsigned int client_ssl_ca_mem_len;$/;"	m	struct:lws_context_creation_info
client_ssl_cert_filepath	include/libwebsockets/lws-context-vhost.h	/^	const char *client_ssl_cert_filepath;$/;"	m	struct:lws_context_creation_info
client_ssl_cipher_list	include/libwebsockets/lws-context-vhost.h	/^	const char *client_ssl_cipher_list;$/;"	m	struct:lws_context_creation_info
client_ssl_private_key_filepath	include/libwebsockets/lws-context-vhost.h	/^	const char *client_ssl_private_key_filepath;$/;"	m	struct:lws_context_creation_info
client_ssl_private_key_password	include/libwebsockets/lws-context-vhost.h	/^	const char *client_ssl_private_key_password;$/;"	m	struct:lws_context_creation_info
code_	include/rapidjson/error/error.h	/^    ParseErrorCode code_;$/;"	m	struct:ParseResult
codepoint	include/rapidjson/internal/regex.h	/^        unsigned codepoint;$/;"	m	struct:internal::GenericRegex::State
codepoint_	include/rapidjson/internal/regex.h	/^    unsigned codepoint_;$/;"	m	class:internal::DecodedStream
col_	include/rapidjson/cursorstreamwrapper.h	/^    size_t col_;    \/\/!< Current Column$/;"	m	class:CursorStreamWrapper
column	include/jansson.h	/^    int column;$/;"	m	struct:json_error_t
conn_ap	include/libwebsockets/lws-esp32.h	/^	char conn_ap;$/;"	m	struct:lws_esp32
content	include/libwebsockets/lws-misc.h	/^	char *content; \/**< private *\/$/;"	m	struct:lws_email
context	include/libwebsockets/lws-client.h	/^	struct lws_context *context;$/;"	m	struct:lws_client_connect_info	typeref:struct:lws_client_connect_info::lws_context
context	junk/protocol_lws_minimal.c	/^	struct lws_context *context;$/;"	m	struct:per_vhost_data__minimal	typeref:struct:per_vhost_data__minimal::lws_context	file:
copyOptimization	include/rapidjson/stream.h	/^    enum { copyOptimization = 0 };$/;"	e	enum:StreamTraits::__anon20
copyOptimization	include/rapidjson/stream.h	/^    enum { copyOptimization = 1 };$/;"	e	enum:StreamTraits::__anon21
copyOptimization	include/rapidjson/stream.h	/^    enum { copyOptimization = 1 };$/;"	e	enum:StreamTraits::__anon22
count	include/libwebsockets/lws-misc.h	/^	uint8_t count;$/;"	m	struct:lws_wifi_scan
count	include/rapidjson/schema.h	/^        SizeType count;$/;"	m	struct:internal::Schema::SchemaArray
count_	include/rapidjson/filereadstream.h	/^    size_t count_;  \/\/!< Number of characters read$/;"	m	class:FileReadStream
count_	include/rapidjson/internal/biginteger.h	/^    size_t count_;$/;"	m	class:internal::BigInteger
count_	include/rapidjson/istreamwrapper.h	/^    size_t count_;  \/\/!< Number of characters read. Note:$/;"	m	class:BasicIStreamWrapper
count_caps	include/libwebsockets/lws-context-vhost.h	/^	char count_caps;$/;"	m	struct:lws_context_creation_info
count_extensions	include/libwebsockets/lws-protocols-plugins.h	/^	int count_extensions; \/**< how many extensions *\/$/;"	m	struct:lws_plugin_capability
count_paths	include/libwebsockets/lws-lejp.h	/^	uint8_t count_paths;$/;"	m	struct:lejp_ctx
count_protocols	include/libwebsockets/lws-protocols-plugins.h	/^	int count_protocols; \/**< how many protocols *\/$/;"	m	struct:lws_plugin_capability
count_threads	include/libwebsockets/lws-context-vhost.h	/^	unsigned int count_threads;$/;"	m	struct:lws_context_creation_info
count_vars	include/libwebsockets/lws-http.h	/^	int count_vars; \/**< count of variable names *\/$/;"	m	struct:lws_process_html_state
ctx	include/libwebsockets/lws-genhash.h	/^	mbedtls_md_context_t ctx;$/;"	m	struct:lws_genhmac_ctx
ctx	include/libwebsockets/lws-genhash.h	/^        EVP_MD_CTX *ctx;$/;"	m	struct:lws_genhmac_ctx
ctx	include/libwebsockets/lws-genrsa.h	/^	mbedtls_rsa_context *ctx;$/;"	m	struct:lws_genrsa_ctx
current	junk/protocol_lws_minimal.c	/^	int current; \/* the current message number we are caching *\/$/;"	m	struct:per_vhost_data__minimal	file:
currentError_	include/rapidjson/schema.h	/^    ValueType currentError_;$/;"	m	class:GenericSchemaValidator
current_	include/rapidjson/encodedstream.h	/^    Ch current_;$/;"	m	class:AutoUTFInputStream
current_	include/rapidjson/encodedstream.h	/^    Ch current_;$/;"	m	class:EncodedInputStream
current_	include/rapidjson/filereadstream.h	/^    Ch *current_;$/;"	m	class:FileReadStream
current_	include/rapidjson/filewritestream.h	/^    char *current_;$/;"	m	class:FileWriteStream
cv	bar.cpp	/^std::condition_variable cv;$/;"	v
cv	include/eval_types.h	/^	std::condition_variable cv;$/;"	m	struct:_engine_t
cv	test.cpp	/^std::condition_variable cv;$/;"	v
d	include/rapidjson/document.h	/^        double d;$/;"	m	union:GenericValue::Number
d	include/rapidjson/schema.h	/^        double d;$/;"	m	struct:internal::Hasher::Number
d_	include/rapidjson/document.h	/^        GenericDocument& d_;$/;"	m	struct:GenericDocument::ClearStackOnExit
d_	include/rapidjson/internal/ieee754.h	/^        double d_;$/;"	m	union:internal::Double::__anon25
data	include/libwebsockets/lws-cgi.h	/^	unsigned char *data; \/**< for messages with payload *\/$/;"	m	struct:lws_cgi_args
data	include/libwebsockets/lws-http.h	/^	void *data; \/**< opaque pointer *\/$/;"	m	struct:lws_process_html_state
data	include/libwebsockets/lws-misc.h	/^	void *data;$/;"	m	struct:lws_email
data_	include/rapidjson/document.h	/^        : data_() {$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    Data data_;$/;"	m	class:GenericValue
data_	include/rapidjson/document.h	/^    GenericValue() RAPIDJSON_NOEXCEPT : data_() { data_.f.flags = kNullFlag; }$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    GenericValue(Array a) RAPIDJSON_NOEXCEPT : data_(a.value_.data_) {$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    GenericValue(GenericValue&& rhs) RAPIDJSON_NOEXCEPT : data_(rhs.data_) {$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    GenericValue(Object o) RAPIDJSON_NOEXCEPT : data_(o.value_.data_) {$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    GenericValue(const Ch* s, SizeType length) RAPIDJSON_NOEXCEPT : data_() { SetStringRaw(StringRef(s, length)); }$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    explicit GenericValue(StringRefType s) RAPIDJSON_NOEXCEPT : data_() { SetStringRaw(s); }$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    explicit GenericValue(Type type) RAPIDJSON_NOEXCEPT : data_() {$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    explicit GenericValue(double d) RAPIDJSON_NOEXCEPT : data_() { data_.n.d = d; data_.f.flags = kNumberDoubleFlag; }$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    explicit GenericValue(float f) RAPIDJSON_NOEXCEPT : data_() { data_.n.d = static_cast<double>(f); data_.f.flags = kNumberDoubleFlag; }$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    explicit GenericValue(int i) RAPIDJSON_NOEXCEPT : data_() {$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    explicit GenericValue(int64_t i64) RAPIDJSON_NOEXCEPT : data_() {$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    explicit GenericValue(uint64_t u64) RAPIDJSON_NOEXCEPT : data_() {$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    explicit GenericValue(unsigned u) RAPIDJSON_NOEXCEPT : data_() {$/;"	f	class:GenericValue
dcount	include/libwebsockets/lws-lejp.h	/^	uint8_t dcount;$/;"	m	struct:lejp_ctx
def	include/libwebsockets/lws-context-vhost.h	/^	const char *def;$/;"	m	struct:lws_http_mount
defaultValueLength_	include/rapidjson/schema.h	/^    SizeType defaultValueLength_;$/;"	m	class:internal::Schema
dependencies	include/rapidjson/schema.h	/^        bool* dependencies;$/;"	m	struct:internal::Schema::Property
dependenciesSchema	include/rapidjson/schema.h	/^        const SchemaType* dependenciesSchema;$/;"	m	struct:internal::Schema::Property
dependenciesValidatorIndex	include/rapidjson/schema.h	/^        SizeType dependenciesValidatorIndex;$/;"	m	struct:internal::Schema::Property
depth_	include/rapidjson/schema.h	/^    unsigned depth_;$/;"	m	class:GenericSchemaValidator
destroy_protocol_minimal	junk/protocol_lws_minimal.c	/^destroy_protocol_minimal(struct lws_context *context)$/;"	f
difference_type	include/rapidjson/document.h	/^    typedef std::ptrdiff_t difference_type;$/;"	t	class:GenericMemberIterator
digits_	include/rapidjson/internal/biginteger.h	/^    Type digits_[kCapacity];$/;"	m	class:internal::BigInteger
documentStack_	include/rapidjson/schema.h	/^    internal::Stack<StateAllocator> documentStack_;  \/\/!< stack to store the current path of validating document (Ch)$/;"	m	class:GenericSchemaValidator
dst_	include/rapidjson/stream.h	/^    Ch* dst_;$/;"	m	struct:GenericInsituStringStream
dtoa	include/rapidjson/internal/dtoa.h	/^inline char* dtoa(double value, char* buffer, int maxDecimalPlaces = 324) {$/;"	f	namespace:internal
e	include/libwebsockets/lws-genrsa.h	/^	struct lws_genrsa_element e[LWS_COUNT_RSA_ELEMENTS];$/;"	m	struct:lws_genrsa_elements	typeref:struct:lws_genrsa_elements::lws_genrsa_element
e	include/rapidjson/internal/diyfp.h	/^    int e;$/;"	m	struct:internal::DiyFp
ecdh_curve	include/libwebsockets/lws-context-vhost.h	/^	const char *ecdh_curve;$/;"	m	struct:lws_context_creation_info
el	include/libwebsockets/lws-jwk.h	/^	struct lws_genrsa_elements el;	\/**< OCTet key is in el.e *\/$/;"	m	struct:lws_jwk	typeref:struct:lws_jwk::lws_genrsa_elements
element_overrides	include/libwebsockets/lws-callbacks.h	/^	const char *element_overrides[LWS_TLS_TOTAL_COUNT]; \/* NULL = use pvo *\/$/;"	m	struct:lws_acme_cert_aging_args
elements	include/rapidjson/document.h	/^        GenericValue* elements;$/;"	m	struct:GenericValue::ArrayData
email	include/libwebsockets/lws-plugin-generic-sessions.h	/^	char email[100]; \/**< email address associated with login, or empty string *\/$/;"	m	struct:lws_session_info
email	include/libwebsockets/lws-plugin-generic-sessions.h	/^	const char *email; \/**< the email address of that user *\/$/;"	m	struct:lws_gs_event_args
email_buf	include/libwebsockets/lws-misc.h	/^	char email_buf[256]; \/**< private *\/$/;"	m	struct:lws_email
email_client	include/libwebsockets/lws-misc.h	/^	uv_tcp_t email_client; \/**< private *\/$/;"	m	struct:lws_email
email_connect_req	include/libwebsockets/lws-misc.h	/^	uv_connect_t email_connect_req; \/**< private *\/$/;"	m	struct:lws_email
email_connect_started	include/libwebsockets/lws-misc.h	/^	time_t email_connect_started; \/**< private *\/$/;"	m	struct:lws_email
email_from	include/libwebsockets/lws-misc.h	/^	char email_from[100];	\/**< Fill before init or on_next *\/$/;"	m	struct:lws_email
email_helo	include/libwebsockets/lws-misc.h	/^	char email_helo[32];	\/**< Fill before init, eg, "myserver.com" *\/$/;"	m	struct:lws_email
email_smtp_ip	include/libwebsockets/lws-misc.h	/^	char email_smtp_ip[32]; \/**< Fill before init, eg, "127.0.0.1" *\/$/;"	m	struct:lws_email
email_to	include/libwebsockets/lws-misc.h	/^	char email_to[100];	\/**< Fill before init or on_next *\/$/;"	m	struct:lws_email
emptyString	include/rapidjson/document.h	/^    static const Ch emptyString[];$/;"	m	struct:GenericStringRef
emptyString	include/rapidjson/document.h	/^const CharType GenericStringRef<CharType>::emptyString[] = { CharType() };$/;"	m	class:GenericStringRef
end	include/rapidjson/document.h	/^    MemberIterator end() const { return value_.MemberEnd(); }$/;"	f	class:GenericObject
end	include/rapidjson/document.h	/^    ValueIterator end() const { return value_.End(); }$/;"	f	class:GenericArray
end	include/rapidjson/internal/regex.h	/^        unsigned end;$/;"	m	struct:internal::GenericRegex::Range
end_	include/rapidjson/memorystream.h	/^    const Ch* end_;     \/\/!< End of stream.$/;"	m	struct:MemoryStream
end_	include/rapidjson/pointer.h	/^        const Ch* end_;     \/\/!< Past-the-end position.$/;"	m	class:GenericPointer::PercentDecodeStream
engine	include/eval_types.h	/^	struct ssound * engine;$/;"	m	struct:_engine_t	typeref:struct:_engine_t::ssound
engine	include/eval_types.h	/^	void * engine;$/;"	m	struct:websockets_client
engine	ssound_main.cpp	/^static struct ssound * engine = NULL;$/;"	v	typeref:struct:ssound	file:
engine_t	include/eval_types.h	/^}engine_t;$/;"	t	typeref:struct:_engine_t
enumCount_	include/rapidjson/schema.h	/^    SizeType enumCount_;$/;"	m	class:internal::Schema
enum_	include/rapidjson/schema.h	/^    uint64_t* enum_;$/;"	m	class:internal::Schema
enum_jwk_tok	include/libwebsockets/lws-genrsa.h	/^enum enum_jwk_tok {$/;"	g
eof_	include/rapidjson/filereadstream.h	/^    bool eof_;$/;"	m	class:FileReadStream
error_	include/rapidjson/schema.h	/^    ValueType error_;$/;"	m	class:GenericSchemaValidator
error_	include/rapidjson/schema.h	/^    ValueType error_;$/;"	m	class:SchemaValidatingReader
error_document_404	include/libwebsockets/lws-context-vhost.h	/^	const char *error_document_404;$/;"	m	struct:lws_context_creation_info
error_handler	include/rapidjson/schema.h	/^    ErrorHandlerType& error_handler;$/;"	m	struct:internal::SchemaValidationContext
estate	include/libwebsockets/lws-misc.h	/^	enum lwsgs_smtp_states estate; \/**< private *\/$/;"	m	struct:lws_email	typeref:enum:lws_email::lwsgs_smtp_states
eval_worker	handle_message.cpp	/^void eval_worker(engine_t *eng)$/;"	f
event	include/libwebsockets/lws-plugin-generic-sessions.h	/^	enum lws_gs_event event; \/**< which event happened *\/$/;"	m	struct:lws_gs_event_args	typeref:enum:lws_gs_event_args::lws_gs_event
events	include/libwebsockets.h	/^	SHORT events; \/**< which events to respond to *\/$/;"	m	struct:lws_pollfd
events	include/libwebsockets.h	/^	int events;		\/**< the new event mask *\/$/;"	m	struct:lws_pollargs
events	include/libwebsockets/lws-esp32.h	/^	short events; \/**< which POLL... events to respond to *\/$/;"	m	struct:pollfd
evp_type	include/libwebsockets/lws-genhash.h	/^        const EVP_MD *evp_type;$/;"	m	struct:lws_genhash_ctx
evp_type	include/libwebsockets/lws-genhash.h	/^        const EVP_MD *evp_type;$/;"	m	struct:lws_genhmac_ctx
exclusiveMaximum_	include/rapidjson/schema.h	/^    bool exclusiveMaximum_;$/;"	m	class:internal::Schema
exclusiveMinimum_	include/rapidjson/schema.h	/^    bool exclusiveMinimum_;$/;"	m	class:internal::Schema
extant_group_members	include/libwebsockets/lws-esp32.h	/^	int extant_group_members;$/;"	m	struct:lws_esp32
extensions	include/libwebsockets/lws-context-vhost.h	/^	const struct lws_extension *extensions;$/;"	m	struct:lws_context_creation_info	typeref:struct:lws_context_creation_info::lws_extension
extensions	include/libwebsockets/lws-protocols-plugins.h	/^	const struct lws_extension *extensions; \/**< array of extensions provided by plugin *\/$/;"	m	struct:lws_plugin_capability	typeref:struct:lws_plugin_capability::lws_extension
external_baggage_free_on_destroy	include/libwebsockets/lws-context-vhost.h	/^	void *external_baggage_free_on_destroy;$/;"	m	struct:lws_context_creation_info
extra_mimetypes	include/libwebsockets/lws-context-vhost.h	/^	const struct lws_protocol_vhost_options *extra_mimetypes;$/;"	m	struct:lws_http_mount	typeref:struct:lws_http_mount::lws_protocol_vhost_options
f	include/libwebsockets/lws-lejp.h	/^	uint8_t f;$/;"	m	struct:lejp_ctx
f	include/rapidjson/document.h	/^        Flag f;$/;"	m	union:GenericValue::Data
f	include/rapidjson/internal/diyfp.h	/^    uint64_t f;$/;"	m	struct:internal::DiyFp
factory	include/rapidjson/schema.h	/^    SchemaValidatorFactoryType& factory;$/;"	m	struct:internal::SchemaValidationContext
fd	include/libwebsockets.h	/^	lws_sockfd_type fd;	\/**< applicable socket descriptor *\/$/;"	m	struct:lws_pollargs
fd	include/libwebsockets.h	/^	lws_sockfd_type fd; \/**< file descriptor *\/$/;"	m	struct:lws_pollfd
fd	include/libwebsockets/lws-esp32.h	/^	lws_sockfd_type fd; \/**< fd related to *\/$/;"	m	struct:pollfd
fd	include/libwebsockets/lws-vfs.h	/^	lws_filefd_type			fd;$/;"	m	struct:lws_fop_fd
fd_limit_per_thread	include/libwebsockets/lws-context-vhost.h	/^	unsigned int fd_limit_per_thread;$/;"	m	struct:lws_context_creation_info
fi	include/libwebsockets/lws-vfs.h	/^	struct lws_fops_index fi[3];$/;"	m	struct:lws_plat_file_ops	typeref:struct:lws_plat_file_ops::lws_fops_index
filefd	include/libwebsockets/lws-adopt.h	/^	lws_filefd_type filefd;$/;"	m	union:__anon8
filesystem_priv	include/libwebsockets/lws-vfs.h	/^	void				*filesystem_priv;$/;"	m	struct:lws_fop_fd
final	include/libwebsockets/lws-http.h	/^	int final; \/**< set if this is the last chunk of the file *\/$/;"	m	struct:lws_process_html_args
finalize	include/libwebsockets/lws-context-vhost.h	/^	void (*finalize)(struct lws_vhost *vh, void *arg);$/;"	m	struct:lws_context_creation_info
finalize_arg	include/libwebsockets/lws-context-vhost.h	/^	void *finalize_arg;$/;"	m	struct:lws_context_creation_info
first	include/libwebsockets/lws-esp32.h	/^	struct lws_group_member *first;$/;"	m	struct:lws_esp32	typeref:struct:lws_esp32::lws_group_member
flags	include/libwebsockets/lws-esp32.h	/^	uint8_t	flags;$/;"	m	struct:lws_group_member
flags	include/libwebsockets/lws-vfs.h	/^	lws_fop_flags_t			flags;$/;"	m	struct:lws_fop_fd
flags	include/rapidjson/document.h	/^        uint16_t flags;$/;"	m	struct:GenericValue::Flag
fops	include/libwebsockets/lws-context-vhost.h	/^	const struct lws_plat_file_ops *fops;$/;"	m	struct:lws_context_creation_info	typeref:struct:lws_context_creation_info::lws_plat_file_ops
fops	include/libwebsockets/lws-vfs.h	/^	const struct lws_plat_file_ops	*fops;$/;"	m	struct:lws_fop_fd	typeref:struct:lws_fop_fd::lws_plat_file_ops
foreign_loops	include/libwebsockets/lws-context-vhost.h	/^	void **foreign_loops;$/;"	m	struct:lws_context_creation_info
formatOptions_	include/rapidjson/prettywriter.h	/^    PrettyFormatOptions formatOptions_;$/;"	m	class:PrettyWriter
fp_	include/rapidjson/filereadstream.h	/^    std::FILE* fp_;$/;"	m	class:FileReadStream
fp_	include/rapidjson/filewritestream.h	/^    std::FILE* fp_;$/;"	m	class:FileWriteStream
genled	include/libwebsockets/lws-esp32.h	/^	enum genled_state genled;$/;"	m	struct:lws_esp32	typeref:enum:lws_esp32::genled_state
genled_state	include/libwebsockets/lws-esp32.h	/^enum genled_state {$/;"	g
genled_t	include/libwebsockets/lws-esp32.h	/^	uint64_t genled_t;$/;"	m	struct:lws_esp32
getdtablesize	include/libwebsockets.h	119;"	d
getdtablesize	include/libwebsockets.h	149;"	d
gid	include/libwebsockets/lws-context-vhost.h	/^	int gid;$/;"	m	struct:lws_context_creation_info
go	bar.cpp	/^void go() {$/;"	f
go	test.cpp	/^void go() {$/;"	f
group	include/libwebsockets/lws-esp32.h	/^	char group[16];$/;"	m	struct:lws_esp32
handle_message	handle_message.cpp	/^int handle_message(ws_client_t * ws_client, void * in, int len){$/;"	f
handle_message	ssound_main.cpp	/^void handle_message(ws_client_t * ws_client){$/;"	f
hasBOM_	include/rapidjson/encodedstream.h	/^    bool hasBOM_;$/;"	m	class:AutoUTFInputStream
hasDependencies_	include/rapidjson/schema.h	/^    bool hasDependencies_;$/;"	m	class:internal::Schema
hasRequired_	include/rapidjson/schema.h	/^    bool hasRequired_;$/;"	m	class:internal::Schema
hasRoot_	include/rapidjson/writer.h	/^    bool hasRoot_;$/;"	m	class:Writer
hasSchemaDependencies_	include/rapidjson/schema.h	/^    bool hasSchemaDependencies_;$/;"	m	class:internal::Schema
hashcode	include/rapidjson/document.h	/^        SizeType hashcode;  \/\/!< reserved$/;"	m	struct:GenericValue::String
hasher	include/rapidjson/schema.h	/^    void* hasher; \/\/ Only validator access$/;"	m	struct:internal::SchemaValidationContext
hdr_state	include/libwebsockets/lws-cgi.h	/^	enum lws_cgi_hdr_state hdr_state; \/**< track where we are in cgi headers *\/$/;"	m	struct:lws_cgi_args	typeref:enum:lws_cgi_args::lws_cgi_hdr_state
head_	include/rapidjson/pointer.h	/^        const Ch* head_;    \/\/!< Original head of the string.$/;"	m	class:GenericPointer::PercentDecodeStream
head_	include/rapidjson/stream.h	/^    Ch* head_;$/;"	m	struct:GenericInsituStringStream
head_	include/rapidjson/stream.h	/^    const Ch* head_;    \/\/!< Original head of the string.$/;"	m	struct:GenericStringStream
headers	include/libwebsockets/lws-context-vhost.h	/^	const struct lws_protocol_vhost_options *headers;$/;"	m	struct:lws_context_creation_info	typeref:struct:lws_context_creation_info::lws_protocol_vhost_options
height	include/libwebsockets/lws-esp32.h	/^	int width, height;$/;"	m	struct:lws_group_member
hmac	include/libwebsockets/lws-genhash.h	/^		const mbedtls_md_info_t *hmac;$/;"	m	union:lws_genhash_ctx::__anon10
hmac	include/libwebsockets/lws-genhash.h	/^	const mbedtls_md_info_t *hmac;$/;"	m	struct:lws_genhmac_ctx
host	include/libwebsockets/lws-client.h	/^	const char *host;$/;"	m	struct:lws_client_connect_info
host	include/libwebsockets/lws-esp32.h	/^	char host[32];$/;"	m	struct:lws_group_member
hostname	include/libwebsockets/lws-esp32.h	/^	char hostname[32];$/;"	m	struct:lws_esp32
http2_settings	include/libwebsockets/lws-context-vhost.h	/^	uint32_t	http2_settings[7];$/;"	m	struct:lws_context_creation_info
http_proxy_address	include/libwebsockets/lws-context-vhost.h	/^	const char *http_proxy_address;$/;"	m	struct:lws_context_creation_info
http_proxy_port	include/libwebsockets/lws-context-vhost.h	/^	unsigned int http_proxy_port;$/;"	m	struct:lws_context_creation_info
http_status	include/libwebsockets/lws-http.h	/^enum http_status {$/;"	g
i	include/libwebsockets/lws-lejp.h	/^	char i; \/* index array length *\/$/;"	m	struct:_lejp_stack
i	include/libwebsockets/lws-lejp.h	/^	uint16_t i[LEJP_MAX_INDEX_DEPTH]; \/* index array *\/$/;"	m	struct:lejp_ctx
i	include/rapidjson/document.h	/^            int i;$/;"	m	struct:GenericValue::Number::I
i	include/rapidjson/document.h	/^        }i;$/;"	m	union:GenericValue::Number	typeref:struct:GenericValue::Number::I
i	include/rapidjson/schema.h	/^            int64_t i;$/;"	m	union:internal::Hasher::Number::U
i32toa	include/rapidjson/internal/itoa.h	/^inline char* i32toa(int32_t value, char* buffer) {$/;"	f	namespace:internal
i64	include/rapidjson/document.h	/^        int64_t i64;$/;"	m	union:GenericValue::Number
i64toa	include/rapidjson/internal/itoa.h	/^inline char* i64toa(int64_t value, char* buffer) {$/;"	f	namespace:internal
id	include/libwebsockets/lws-plugin-generic-sessions.h	/^typedef struct { char id[41]; \/**< ascii hex representation of hash *\/ } lwsgw_hash;$/;"	m	struct:__anon12
id	include/libwebsockets/lws-protocols-plugins.h	/^	unsigned int id;$/;"	m	struct:lws_protocols
ietf_version_or_minus_one	include/libwebsockets/lws-client.h	/^	int ietf_version_or_minus_one;$/;"	m	struct:lws_client_connect_info
iface	include/libwebsockets/lws-client.h	/^	const char *iface;$/;"	m	struct:lws_client_connect_info
iface	include/libwebsockets/lws-context-vhost.h	/^	const char *iface;$/;"	m	struct:lws_context_creation_info
imaxabs	include/rapidjson/msinttypes/inttypes.h	279;"	d
imaxdiv	include/rapidjson/msinttypes/inttypes.h	/^imaxdiv_t __cdecl imaxdiv(intmax_t numer, intmax_t denom)$/;"	f
imaxdiv_t	include/rapidjson/msinttypes/inttypes.h	/^} imaxdiv_t;$/;"	t	typeref:struct:__anon13
inArray	include/rapidjson/schema.h	/^    bool inArray;$/;"	m	struct:internal::SchemaValidationContext
inArray	include/rapidjson/writer.h	/^        bool inArray;       \/\/!< true if in array, otherwise in object$/;"	m	struct:Writer::Level
incoming_len	include/eval_types.h	/^	int incoming_len;								$/;"	m	struct:websockets_client
indentCharCount_	include/rapidjson/prettywriter.h	/^    unsigned indentCharCount_;$/;"	m	class:PrettyWriter
indentChar_	include/rapidjson/prettywriter.h	/^    Ch indentChar_;$/;"	m	class:PrettyWriter
index	include/rapidjson/pointer.h	/^        SizeType index;             \/\/!< A valid array index, if it is not equal to kPointerInvalidIndex.$/;"	m	struct:GenericPointer::Token
inet	include/libwebsockets/lws-esp32.h	/^       	char inet;$/;"	m	struct:lws_esp32
init_params_str	handle_message.cpp	/^const char * init_params_str="{\\$/;"	v
init_protocol_minimal	junk/protocol_lws_minimal.c	/^init_protocol_minimal(struct lws_context *context,$/;"	f
initialCapacity_	include/rapidjson/internal/stack.h	/^    size_t initialCapacity_;$/;"	m	class:internal::Stack
int16_t	include/rapidjson/msinttypes/stdint.h	/^   typedef signed __int16    int16_t;$/;"	t
int16_t	include/rapidjson/msinttypes/stdint.h	/^   typedef signed short      int16_t;$/;"	t
int32_t	include/rapidjson/msinttypes/stdint.h	/^   typedef signed __int32    int32_t;$/;"	t
int32_t	include/rapidjson/msinttypes/stdint.h	/^   typedef signed int        int32_t;$/;"	t
int64_t	include/rapidjson/msinttypes/stdint.h	/^typedef signed __int64       int64_t;$/;"	t
int8_t	include/rapidjson/msinttypes/stdint.h	/^   typedef signed __int8     int8_t;$/;"	t
int8_t	include/rapidjson/msinttypes/stdint.h	/^   typedef signed char       int8_t;$/;"	t
int_fast16_t	include/rapidjson/msinttypes/stdint.h	/^typedef int16_t   int_fast16_t;$/;"	t
int_fast32_t	include/rapidjson/msinttypes/stdint.h	/^typedef int32_t   int_fast32_t;$/;"	t
int_fast64_t	include/rapidjson/msinttypes/stdint.h	/^typedef int64_t   int_fast64_t;$/;"	t
int_fast8_t	include/rapidjson/msinttypes/stdint.h	/^typedef int8_t    int_fast8_t;$/;"	t
int_least16_t	include/rapidjson/msinttypes/stdint.h	/^typedef int16_t   int_least16_t;$/;"	t
int_least32_t	include/rapidjson/msinttypes/stdint.h	/^typedef int32_t   int_least32_t;$/;"	t
int_least64_t	include/rapidjson/msinttypes/stdint.h	/^typedef int64_t   int_least64_t;$/;"	t
int_least8_t	include/rapidjson/msinttypes/stdint.h	/^typedef int8_t    int_least8_t;$/;"	t
internal	include/rapidjson/document.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/biginteger.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/diyfp.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/dtoa.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/ieee754.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/itoa.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/meta.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/pow10.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/regex.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/stack.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/strfunc.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/strtod.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/swap.h	/^namespace internal {$/;"	n
internal	include/rapidjson/reader.h	/^namespace internal {$/;"	n
internal	include/rapidjson/schema.h	/^namespace internal {$/;"	n
interpret	include/libwebsockets/lws-context-vhost.h	/^	const struct lws_protocol_vhost_options *interpret;$/;"	m	struct:lws_http_mount	typeref:struct:lws_http_mount::lws_protocol_vhost_options
interrupted	junk/minimal-ws-server.c	/^static int interrupted;$/;"	v	file:
interrupted	minimal-ws-server-echo.c	/^int interrupted, port = 60000, options;$/;"	v
interrupted	test_main.cpp	/^static int interrupted;$/;"	v	file:
intmax_t	include/rapidjson/msinttypes/stdint.h	/^typedef int64_t   intmax_t;$/;"	t
intptr_t	include/rapidjson/msinttypes/stdint.h	/^   typedef _W64 signed int   intptr_t;$/;"	t
intptr_t	include/rapidjson/msinttypes/stdint.h	/^   typedef signed __int64    intptr_t;$/;"	t
invalidDocumentPointer_	include/rapidjson/schema.h	/^    PointerType invalidDocumentPointer_;$/;"	m	class:SchemaValidatingReader
invalidKeyword	include/rapidjson/schema.h	/^    const Ch* invalidKeyword;$/;"	m	struct:internal::SchemaValidationContext
invalidSchemaKeyword_	include/rapidjson/schema.h	/^    const Ch* invalidSchemaKeyword_;$/;"	m	class:SchemaValidatingReader
invalidSchemaPointer_	include/rapidjson/schema.h	/^    PointerType invalidSchemaPointer_;$/;"	m	class:SchemaValidatingReader
ip	include/libwebsockets/lws-plugin-generic-sessions.h	/^	char ip[72]; \/**< ip address session was started from *\/$/;"	m	struct:lws_session_info
ip_limit_ah	include/libwebsockets/lws-context-vhost.h	/^	unsigned short ip_limit_ah;$/;"	m	struct:lws_context_creation_info
ip_limit_wsi	include/libwebsockets/lws-context-vhost.h	/^	unsigned short ip_limit_wsi;$/;"	m	struct:lws_context_creation_info
ipos	include/libwebsockets/lws-lejp.h	/^	uint8_t ipos; \/* index stack depth *\/$/;"	m	struct:lejp_ctx
is	include/rapidjson/reader.h	/^        InputStream& is;$/;"	m	class:GenericReader::NumberStream
isValid_	include/rapidjson/schema.h	/^    bool isValid_;$/;"	m	class:SchemaValidatingReader
is_	include/rapidjson/encodedstream.h	/^    InputByteStream& is_;$/;"	m	class:EncodedInputStream
is_	include/rapidjson/encodedstream.h	/^    InputByteStream* is_;$/;"	m	class:AutoUTFInputStream
is_	include/rapidjson/encodedstream.h	/^    MemoryStream& is_;$/;"	m	class:EncodedInputStream
is_	include/rapidjson/schema.h	/^    InputStream& is_;$/;"	m	class:SchemaValidatingReader
is_	include/rapidjson/stream.h	/^    InputStream& is_;$/;"	m	class:GenericStreamWrapper
itemsList_	include/rapidjson/schema.h	/^    const SchemaType* itemsList_;$/;"	m	class:internal::Schema
itemsTupleCount_	include/rapidjson/schema.h	/^    SizeType itemsTupleCount_;$/;"	m	class:internal::Schema
itemsTuple_	include/rapidjson/schema.h	/^    const SchemaType** itemsTuple_;$/;"	m	class:internal::Schema
iterator_category	include/rapidjson/document.h	/^    typedef std::random_access_iterator_tag iterator_category;$/;"	t	class:GenericMemberIterator
join_engine_threads	handle_message.cpp	/^void join_engine_threads(){$/;"	f
json	include/libwebsockets/lws-esp32.h	/^	uint32_t json;$/;"	m	struct:lws_esp32_image
json_array_append	include/jansson.h	/^int json_array_append(json_t *array, json_t *value)$/;"	f
json_array_foreach	include/jansson.h	216;"	d
json_array_insert	include/jansson.h	/^int json_array_insert(json_t *array, size_t ind, json_t *value)$/;"	f
json_array_set	include/jansson.h	/^int json_array_set(json_t *array, size_t ind, json_t *value)$/;"	f
json_auto_t	include/jansson.h	142;"	d
json_boolean	include/jansson.h	99;"	d
json_boolean_value	include/jansson.h	83;"	d
json_decref	include/jansson.h	/^void json_decref(json_t *json)$/;"	f
json_decrefp	include/jansson.h	/^void json_decrefp(json_t **json)$/;"	f
json_dump_callback_t	include/jansson.h	/^typedef int (*json_dump_callback_t)(const char *buffer, size_t size, void *data);$/;"	t
json_error_cannot_open_file	include/jansson.h	/^    json_error_cannot_open_file,$/;"	e	enum:json_error_code
json_error_code	include/jansson.h	/^enum json_error_code {$/;"	g
json_error_code	include/jansson.h	/^static JSON_INLINE enum json_error_code json_error_code(const json_error_t *e) {$/;"	f
json_error_duplicate_key	include/jansson.h	/^    json_error_duplicate_key,$/;"	e	enum:json_error_code
json_error_end_of_input_expected	include/jansson.h	/^    json_error_end_of_input_expected,$/;"	e	enum:json_error_code
json_error_index_out_of_range	include/jansson.h	/^    json_error_index_out_of_range$/;"	e	enum:json_error_code
json_error_invalid_argument	include/jansson.h	/^    json_error_invalid_argument,$/;"	e	enum:json_error_code
json_error_invalid_format	include/jansson.h	/^    json_error_invalid_format,$/;"	e	enum:json_error_code
json_error_invalid_syntax	include/jansson.h	/^    json_error_invalid_syntax,$/;"	e	enum:json_error_code
json_error_invalid_utf8	include/jansson.h	/^    json_error_invalid_utf8,$/;"	e	enum:json_error_code
json_error_item_not_found	include/jansson.h	/^    json_error_item_not_found,$/;"	e	enum:json_error_code
json_error_null_byte_in_key	include/jansson.h	/^    json_error_null_byte_in_key,$/;"	e	enum:json_error_code
json_error_null_character	include/jansson.h	/^    json_error_null_character,$/;"	e	enum:json_error_code
json_error_null_value	include/jansson.h	/^    json_error_null_value,$/;"	e	enum:json_error_code
json_error_numeric_overflow	include/jansson.h	/^    json_error_numeric_overflow,$/;"	e	enum:json_error_code
json_error_out_of_memory	include/jansson.h	/^    json_error_out_of_memory,$/;"	e	enum:json_error_code
json_error_premature_end_of_input	include/jansson.h	/^    json_error_premature_end_of_input,$/;"	e	enum:json_error_code
json_error_stack_overflow	include/jansson.h	/^    json_error_stack_overflow,$/;"	e	enum:json_error_code
json_error_t	include/jansson.h	/^typedef struct json_error_t {$/;"	s
json_error_t	include/jansson.h	/^} json_error_t;$/;"	t	typeref:struct:json_error_t
json_error_unknown	include/jansson.h	/^    json_error_unknown,$/;"	e	enum:json_error_code
json_error_wrong_type	include/jansson.h	/^    json_error_wrong_type,$/;"	e	enum:json_error_code
json_free_t	include/jansson.h	/^typedef void (*json_free_t)(void *);$/;"	t
json_incref	include/jansson.h	/^json_t *json_incref(json_t *json)$/;"	f
json_int_t	include/jansson.h	/^typedef long json_int_t;$/;"	t
json_int_t	include/jansson.h	/^typedef long long json_int_t;$/;"	t
json_is_array	include/jansson.h	76;"	d
json_is_boolean	include/jansson.h	84;"	d
json_is_false	include/jansson.h	82;"	d
json_is_integer	include/jansson.h	78;"	d
json_is_null	include/jansson.h	85;"	d
json_is_number	include/jansson.h	80;"	d
json_is_object	include/jansson.h	75;"	d
json_is_real	include/jansson.h	79;"	d
json_is_string	include/jansson.h	77;"	d
json_is_true	include/jansson.h	81;"	d
json_len	include/libwebsockets/lws-esp32.h	/^	uint32_t json_len;$/;"	m	struct:lws_esp32_image
json_load_callback_t	include/jansson.h	/^typedef size_t (*json_load_callback_t)(void *buffer, size_t buflen, void *data);$/;"	t
json_malloc_t	include/jansson.h	/^typedef void *(*json_malloc_t)(size_t);$/;"	t
json_object_foreach	include/jansson.h	204;"	d
json_object_foreach_safe	include/jansson.h	209;"	d
json_object_iter_set	include/jansson.h	/^int json_object_iter_set(json_t *object, void *iter, json_t *value)$/;"	f
json_object_set	include/jansson.h	/^int json_object_set(json_t *object, const char *key, json_t *value)$/;"	f
json_object_set_nocheck	include/jansson.h	/^int json_object_set_nocheck(json_t *object, const char *key, json_t *value)$/;"	f
json_t	include/jansson.h	/^typedef struct json_t {$/;"	s
json_t	include/jansson.h	/^} json_t;$/;"	t	typeref:struct:json_t
json_type	include/jansson.h	/^} json_type;$/;"	t	typeref:enum:__anon1
json_typeof	include/jansson.h	74;"	d
kAlternation	include/rapidjson/internal/regex.h	/^        kAlternation,$/;"	e	enum:internal::GenericRegex::Operator
kAnyCharacterClass	include/rapidjson/internal/regex.h	/^    static const unsigned kAnyCharacterClass = 0xFFFFFFFF;   \/\/!< For '.'$/;"	m	class:internal::GenericRegex
kArrayFlag	include/rapidjson/document.h	/^        kArrayFlag = kArrayType,$/;"	e	enum:GenericValue::__anon23
kArraySchemaType	include/rapidjson/schema.h	/^        kArraySchemaType,$/;"	e	enum:internal::Schema::SchemaValueType
kArrayType	include/rapidjson/rapidjson.h	/^    kArrayType = 4,     \/\/!< array $/;"	e	enum:Type
kBitCount	include/rapidjson/internal/biginteger.h	/^    static const size_t kBitCount = 3328;  \/\/ 64bit * 54 > 10^1000$/;"	m	class:internal::BigInteger
kBoolFlag	include/rapidjson/document.h	/^        kBoolFlag       = 0x0008,$/;"	e	enum:GenericValue::__anon23
kBooleanSchemaType	include/rapidjson/schema.h	/^        kBooleanSchemaType,$/;"	e	enum:internal::Schema::SchemaValueType
kCapacity	include/rapidjson/internal/biginteger.h	/^    static const size_t kCapacity = kBitCount \/ sizeof(Type);$/;"	m	class:internal::BigInteger
kConcatenation	include/rapidjson/internal/regex.h	/^        kConcatenation,$/;"	e	enum:internal::GenericRegex::Operator
kConstStringFlag	include/rapidjson/document.h	/^        kConstStringFlag = kStringType | kStringFlag,$/;"	e	enum:GenericValue::__anon23
kCopyFlag	include/rapidjson/document.h	/^        kCopyFlag       = 0x0800,$/;"	e	enum:GenericValue::__anon23
kCopyStringFlag	include/rapidjson/document.h	/^        kCopyStringFlag = kStringType | kStringFlag | kCopyFlag,$/;"	e	enum:GenericValue::__anon23
kDefaultArrayCapacity	include/rapidjson/document.h	/^    static const SizeType kDefaultArrayCapacity = 16;$/;"	m	class:GenericValue
kDefaultCapacity	include/rapidjson/memorybuffer.h	/^    static const size_t kDefaultCapacity = 256;$/;"	m	struct:GenericMemoryBuffer
kDefaultCapacity	include/rapidjson/stringbuffer.h	/^    static const size_t kDefaultCapacity = 256;$/;"	m	class:GenericStringBuffer
kDefaultChunkCapacity	include/rapidjson/allocators.h	/^    static const int kDefaultChunkCapacity = RAPIDJSON_ALLOCATOR_DEFAULT_CHUNK_CAPACITY; \/\/!< Default chunk capacity.$/;"	m	class:MemoryPoolAllocator
kDefaultDocumentStackCapacity	include/rapidjson/schema.h	/^    static const size_t kDefaultDocumentStackCapacity = 256;$/;"	m	class:GenericSchemaValidator
kDefaultLevelDepth	include/rapidjson/writer.h	/^    static const size_t kDefaultLevelDepth = 32;$/;"	m	class:Writer
kDefaultMaxDecimalPlaces	include/rapidjson/writer.h	/^    static const int kDefaultMaxDecimalPlaces = 324;$/;"	m	class:Writer
kDefaultObjectCapacity	include/rapidjson/document.h	/^    static const SizeType kDefaultObjectCapacity = 16;$/;"	m	class:GenericValue
kDefaultSchemaStackCapacity	include/rapidjson/schema.h	/^    static const size_t kDefaultSchemaStackCapacity = 1024;$/;"	m	class:GenericSchemaValidator
kDefaultSize	include/rapidjson/schema.h	/^    static const size_t kDefaultSize = 256;$/;"	m	class:internal::Hasher
kDefaultStackCapacity	include/rapidjson/document.h	/^    static const size_t kDefaultStackCapacity = 1024;$/;"	m	class:GenericDocument
kDefaultStackCapacity	include/rapidjson/reader.h	/^    static const size_t kDefaultStackCapacity = 256;    \/\/!< Default stack capacity in bytes for storing a single decoded string.$/;"	m	class:GenericReader
kDenormalExponent	include/rapidjson/internal/ieee754.h	/^    static const int kDenormalExponent = 1 - kExponentBias;$/;"	m	class:internal::Double
kDiySignificandSize	include/rapidjson/internal/diyfp.h	/^    static const int kDiySignificandSize = 64;$/;"	m	struct:internal::DiyFp
kDoubleFlag	include/rapidjson/document.h	/^        kDoubleFlag     = 0x0200,$/;"	e	enum:GenericValue::__anon23
kDpDenormalExponent	include/rapidjson/internal/diyfp.h	/^    static const int kDpDenormalExponent = -kDpExponentBias + 1;$/;"	m	struct:internal::DiyFp
kDpExponentBias	include/rapidjson/internal/diyfp.h	/^    static const int kDpExponentBias = 0x3FF + kDpSignificandSize;$/;"	m	struct:internal::DiyFp
kDpExponentMask	include/rapidjson/internal/diyfp.h	/^    static const uint64_t kDpExponentMask = RAPIDJSON_UINT64_C2(0x7FF00000, 0x00000000);$/;"	m	struct:internal::DiyFp
kDpHiddenBit	include/rapidjson/internal/diyfp.h	/^    static const uint64_t kDpHiddenBit = RAPIDJSON_UINT64_C2(0x00100000, 0x00000000);$/;"	m	struct:internal::DiyFp
kDpMaxExponent	include/rapidjson/internal/diyfp.h	/^    static const int kDpMaxExponent = 0x7FF - kDpExponentBias;$/;"	m	struct:internal::DiyFp
kDpMinExponent	include/rapidjson/internal/diyfp.h	/^    static const int kDpMinExponent = -kDpExponentBias;$/;"	m	struct:internal::DiyFp
kDpSignificandMask	include/rapidjson/internal/diyfp.h	/^    static const uint64_t kDpSignificandMask = RAPIDJSON_UINT64_C2(0x000FFFFF, 0xFFFFFFFF);$/;"	m	struct:internal::DiyFp
kDpSignificandSize	include/rapidjson/internal/diyfp.h	/^    static const int kDpSignificandSize = 52;$/;"	m	struct:internal::DiyFp
kExponentBias	include/rapidjson/internal/ieee754.h	/^    static const int kExponentBias = 0x3FF;$/;"	m	class:internal::Double
kExponentMask	include/rapidjson/internal/ieee754.h	/^    static const uint64_t kExponentMask = RAPIDJSON_UINT64_C2(0x7FF00000, 0x00000000);$/;"	m	class:internal::Double
kFalseFlag	include/rapidjson/document.h	/^        kFalseFlag = kFalseType | kBoolFlag,$/;"	e	enum:GenericValue::__anon23
kFalseType	include/rapidjson/rapidjson.h	/^    kFalseType = 1,     \/\/!< false$/;"	e	enum:Type
kFormatDefault	include/rapidjson/prettywriter.h	/^    kFormatDefault = 0,         \/\/!< Default pretty formatting.$/;"	e	enum:PrettyFormatOptions
kFormatSingleLineArray	include/rapidjson/prettywriter.h	/^    kFormatSingleLineArray = 1  \/\/!< Format arrays on a single line.$/;"	e	enum:PrettyFormatOptions
kHiddenBit	include/rapidjson/internal/ieee754.h	/^    static const uint64_t kHiddenBit = RAPIDJSON_UINT64_C2(0x00100000, 0x00000000);$/;"	m	class:internal::Double
kInfinityQuantifier	include/rapidjson/internal/regex.h	/^    static const unsigned kInfinityQuantifier = ~0u;$/;"	m	class:internal::GenericRegex
kInitialSchemaMapSize	include/rapidjson/schema.h	/^    static const size_t kInitialSchemaMapSize = 64;$/;"	m	class:GenericSchemaDocument
kInitialSchemaRefSize	include/rapidjson/schema.h	/^    static const size_t kInitialSchemaRefSize = 64;$/;"	m	class:GenericSchemaDocument
kInlineStrFlag	include/rapidjson/document.h	/^        kInlineStrFlag  = 0x1000,$/;"	e	enum:GenericValue::__anon23
kInt64Flag	include/rapidjson/document.h	/^        kInt64Flag      = 0x0080,$/;"	e	enum:GenericValue::__anon23
kIntFlag	include/rapidjson/document.h	/^        kIntFlag        = 0x0020,$/;"	e	enum:GenericValue::__anon23
kIntegerSchemaType	include/rapidjson/schema.h	/^        kIntegerSchemaType,$/;"	e	enum:internal::Schema::SchemaValueType
kLeftParenthesis	include/rapidjson/internal/regex.h	/^        kLeftParenthesis$/;"	e	enum:internal::GenericRegex::Operator
kNeedFree	include/rapidjson/allocators.h	/^    static const bool kNeedFree = false;    \/\/!< Tell users that no need to call Free() with this allocator. (concept Allocator)$/;"	m	class:MemoryPoolAllocator
kNeedFree	include/rapidjson/allocators.h	/^    static const bool kNeedFree = true;$/;"	m	class:CrtAllocator
kNullFlag	include/rapidjson/document.h	/^        kNullFlag = kNullType,$/;"	e	enum:GenericValue::__anon23
kNullSchemaType	include/rapidjson/schema.h	/^        kNullSchemaType,$/;"	e	enum:internal::Schema::SchemaValueType
kNullType	include/rapidjson/rapidjson.h	/^    kNullType = 0,      \/\/!< null$/;"	e	enum:Type
kNumberAnyFlag	include/rapidjson/document.h	/^        kNumberAnyFlag = kNumberType | kNumberFlag | kIntFlag | kInt64Flag | kUintFlag | kUint64Flag | kDoubleFlag,$/;"	e	enum:GenericValue::__anon23
kNumberDoubleFlag	include/rapidjson/document.h	/^        kNumberDoubleFlag = kNumberType | kNumberFlag | kDoubleFlag,$/;"	e	enum:GenericValue::__anon23
kNumberFlag	include/rapidjson/document.h	/^        kNumberFlag     = 0x0010,$/;"	e	enum:GenericValue::__anon23
kNumberInt64Flag	include/rapidjson/document.h	/^        kNumberInt64Flag = kNumberType | kNumberFlag | kInt64Flag,$/;"	e	enum:GenericValue::__anon23
kNumberIntFlag	include/rapidjson/document.h	/^        kNumberIntFlag = kNumberType | kNumberFlag | kIntFlag | kInt64Flag,$/;"	e	enum:GenericValue::__anon23
kNumberSchemaType	include/rapidjson/schema.h	/^        kNumberSchemaType,$/;"	e	enum:internal::Schema::SchemaValueType
kNumberType	include/rapidjson/rapidjson.h	/^    kNumberType = 6     \/\/!< number$/;"	e	enum:Type
kNumberUint64Flag	include/rapidjson/document.h	/^        kNumberUint64Flag = kNumberType | kNumberFlag | kUint64Flag,$/;"	e	enum:GenericValue::__anon23
kNumberUintFlag	include/rapidjson/document.h	/^        kNumberUintFlag = kNumberType | kNumberFlag | kUintFlag | kUint64Flag | kInt64Flag,$/;"	e	enum:GenericValue::__anon23
kObjectFlag	include/rapidjson/document.h	/^        kObjectFlag = kObjectType,$/;"	e	enum:GenericValue::__anon23
kObjectSchemaType	include/rapidjson/schema.h	/^        kObjectSchemaType,$/;"	e	enum:internal::Schema::SchemaValueType
kObjectType	include/rapidjson/rapidjson.h	/^    kObjectType = 3,    \/\/!< object$/;"	e	enum:Type
kOneOrMore	include/rapidjson/internal/regex.h	/^        kOneOrMore,$/;"	e	enum:internal::GenericRegex::Operator
kParseCommentsFlag	include/rapidjson/reader.h	/^    kParseCommentsFlag = 32,        \/\/!< Allow one-line (\/\/) and multi-line (\/**\/) comments.$/;"	e	enum:ParseFlag
kParseDefaultFlags	include/rapidjson/reader.h	/^    kParseDefaultFlags = RAPIDJSON_PARSE_DEFAULT_FLAGS  \/\/!< Default parse flags. Can be customized by defining RAPIDJSON_PARSE_DEFAULT_FLAGS$/;"	e	enum:ParseFlag
kParseErrorArrayMissCommaOrSquareBracket	include/rapidjson/error/error.h	/^    kParseErrorArrayMissCommaOrSquareBracket,   \/\/!< Missing a comma or ']' after an array element.$/;"	e	enum:ParseErrorCode
kParseErrorDocumentEmpty	include/rapidjson/error/error.h	/^    kParseErrorDocumentEmpty,                   \/\/!< The document is empty.$/;"	e	enum:ParseErrorCode
kParseErrorDocumentRootNotSingular	include/rapidjson/error/error.h	/^    kParseErrorDocumentRootNotSingular,         \/\/!< The document root must not follow by other values.$/;"	e	enum:ParseErrorCode
kParseErrorNone	include/rapidjson/error/error.h	/^    kParseErrorNone = 0,                        \/\/!< No error.$/;"	e	enum:ParseErrorCode
kParseErrorNumberMissExponent	include/rapidjson/error/error.h	/^    kParseErrorNumberMissExponent,              \/\/!< Miss exponent in number.$/;"	e	enum:ParseErrorCode
kParseErrorNumberMissFraction	include/rapidjson/error/error.h	/^    kParseErrorNumberMissFraction,              \/\/!< Miss fraction part in number.$/;"	e	enum:ParseErrorCode
kParseErrorNumberTooBig	include/rapidjson/error/error.h	/^    kParseErrorNumberTooBig,                    \/\/!< Number too big to be stored in double.$/;"	e	enum:ParseErrorCode
kParseErrorObjectMissColon	include/rapidjson/error/error.h	/^    kParseErrorObjectMissColon,                 \/\/!< Missing a colon after a name of object member.$/;"	e	enum:ParseErrorCode
kParseErrorObjectMissCommaOrCurlyBracket	include/rapidjson/error/error.h	/^    kParseErrorObjectMissCommaOrCurlyBracket,   \/\/!< Missing a comma or '}' after an object member.$/;"	e	enum:ParseErrorCode
kParseErrorObjectMissName	include/rapidjson/error/error.h	/^    kParseErrorObjectMissName,                  \/\/!< Missing a name for object member.$/;"	e	enum:ParseErrorCode
kParseErrorStringEscapeInvalid	include/rapidjson/error/error.h	/^    kParseErrorStringEscapeInvalid,             \/\/!< Invalid escape character in string.$/;"	e	enum:ParseErrorCode
kParseErrorStringInvalidEncoding	include/rapidjson/error/error.h	/^    kParseErrorStringInvalidEncoding,           \/\/!< Invalid encoding in string.$/;"	e	enum:ParseErrorCode
kParseErrorStringMissQuotationMark	include/rapidjson/error/error.h	/^    kParseErrorStringMissQuotationMark,         \/\/!< Missing a closing quotation mark in string.$/;"	e	enum:ParseErrorCode
kParseErrorStringUnicodeEscapeInvalidHex	include/rapidjson/error/error.h	/^    kParseErrorStringUnicodeEscapeInvalidHex,   \/\/!< Incorrect hex digit after \\\\u escape in string.$/;"	e	enum:ParseErrorCode
kParseErrorStringUnicodeSurrogateInvalid	include/rapidjson/error/error.h	/^    kParseErrorStringUnicodeSurrogateInvalid,   \/\/!< The surrogate pair in string is invalid.$/;"	e	enum:ParseErrorCode
kParseErrorTermination	include/rapidjson/error/error.h	/^    kParseErrorTermination,                     \/\/!< Parsing was terminated.$/;"	e	enum:ParseErrorCode
kParseErrorUnspecificSyntaxError	include/rapidjson/error/error.h	/^    kParseErrorUnspecificSyntaxError            \/\/!< Unspecific syntax error.$/;"	e	enum:ParseErrorCode
kParseErrorValueInvalid	include/rapidjson/error/error.h	/^    kParseErrorValueInvalid,                    \/\/!< Invalid value.$/;"	e	enum:ParseErrorCode
kParseFullPrecisionFlag	include/rapidjson/reader.h	/^    kParseFullPrecisionFlag = 16,   \/\/!< Parse number in full precision (but slower).$/;"	e	enum:ParseFlag
kParseInsituFlag	include/rapidjson/reader.h	/^    kParseInsituFlag = 1,           \/\/!< In-situ(destructive) parsing.$/;"	e	enum:ParseFlag
kParseIterativeFlag	include/rapidjson/reader.h	/^    kParseIterativeFlag = 4,        \/\/!< Iterative(constant complexity in terms of function call stack size) parsing.$/;"	e	enum:ParseFlag
kParseNanAndInfFlag	include/rapidjson/reader.h	/^    kParseNanAndInfFlag = 256,      \/\/!< Allow parsing NaN, Inf, Infinity, -Inf and -Infinity as doubles.$/;"	e	enum:ParseFlag
kParseNoFlags	include/rapidjson/reader.h	/^    kParseNoFlags = 0,              \/\/!< No flags are set.$/;"	e	enum:ParseFlag
kParseNumbersAsStringsFlag	include/rapidjson/reader.h	/^    kParseNumbersAsStringsFlag = 64,    \/\/!< Parse all numbers (ints\/doubles) as strings.$/;"	e	enum:ParseFlag
kParseStopWhenDoneFlag	include/rapidjson/reader.h	/^    kParseStopWhenDoneFlag = 8,     \/\/!< After parsing a complete JSON root from stream, stop further processing the rest of stream. When this flag is used, parser will not generate kParseErrorDocumentRootNotSingular error.$/;"	e	enum:ParseFlag
kParseTrailingCommasFlag	include/rapidjson/reader.h	/^    kParseTrailingCommasFlag = 128, \/\/!< Allow trailing commas at the end of objects and arrays.$/;"	e	enum:ParseFlag
kParseValidateEncodingFlag	include/rapidjson/reader.h	/^    kParseValidateEncodingFlag = 2, \/\/!< Validate encoding of JSON strings.$/;"	e	enum:ParseFlag
kPatternValidatorOnly	include/rapidjson/schema.h	/^        kPatternValidatorOnly,$/;"	e	enum:internal::SchemaValidationContext::PatternValidatorType
kPatternValidatorWithAdditionalProperty	include/rapidjson/schema.h	/^        kPatternValidatorWithAdditionalProperty$/;"	e	enum:internal::SchemaValidationContext::PatternValidatorType
kPatternValidatorWithProperty	include/rapidjson/schema.h	/^        kPatternValidatorWithProperty,$/;"	e	enum:internal::SchemaValidationContext::PatternValidatorType
kPointerInvalidIndex	include/rapidjson/pointer.h	/^static const SizeType kPointerInvalidIndex = ~SizeType(0);  \/\/!< Represents an invalid index in GenericPointer::Token$/;"	v
kPointerParseErrorCharacterMustPercentEncode	include/rapidjson/pointer.h	/^    kPointerParseErrorCharacterMustPercentEncode    \/\/!< A character must percent encoded in URI fragment$/;"	e	enum:PointerParseErrorCode
kPointerParseErrorInvalidEscape	include/rapidjson/pointer.h	/^    kPointerParseErrorInvalidEscape,                \/\/!< Invalid escape$/;"	e	enum:PointerParseErrorCode
kPointerParseErrorInvalidPercentEncoding	include/rapidjson/pointer.h	/^    kPointerParseErrorInvalidPercentEncoding,       \/\/!< Invalid percent encoding in URI fragment$/;"	e	enum:PointerParseErrorCode
kPointerParseErrorNone	include/rapidjson/pointer.h	/^    kPointerParseErrorNone = 0,                     \/\/!< The parse is successful$/;"	e	enum:PointerParseErrorCode
kPointerParseErrorTokenMustBeginWithSolidus	include/rapidjson/pointer.h	/^    kPointerParseErrorTokenMustBeginWithSolidus,    \/\/!< A token must begin with a '\/'$/;"	e	enum:PointerParseErrorCode
kRangeCharacterClass	include/rapidjson/internal/regex.h	/^    static const unsigned kRangeCharacterClass = 0xFFFFFFFE;$/;"	m	class:internal::GenericRegex
kRangeNegationFlag	include/rapidjson/internal/regex.h	/^    static const unsigned kRangeNegationFlag = 0x80000000;$/;"	m	class:internal::GenericRegex
kRegexInvalidRange	include/rapidjson/internal/regex.h	/^static const SizeType kRegexInvalidRange = ~SizeType(0);$/;"	m	namespace:internal
kRegexInvalidState	include/rapidjson/internal/regex.h	/^static const SizeType kRegexInvalidState = ~SizeType(0);  \/\/!< Represents an invalid index in GenericRegex::State::out, out1$/;"	m	namespace:internal
kShortStringFlag	include/rapidjson/document.h	/^        kShortStringFlag = kStringType | kStringFlag | kCopyFlag | kInlineStrFlag,$/;"	e	enum:GenericValue::__anon23
kSignMask	include/rapidjson/internal/ieee754.h	/^    static const uint64_t kSignMask = RAPIDJSON_UINT64_C2(0x80000000, 0x00000000);$/;"	m	class:internal::Double
kSignificandMask	include/rapidjson/internal/ieee754.h	/^    static const uint64_t kSignificandMask = RAPIDJSON_UINT64_C2(0x000FFFFF, 0xFFFFFFFF);$/;"	m	class:internal::Double
kSignificandSize	include/rapidjson/internal/ieee754.h	/^    static const int kSignificandSize = 52;$/;"	m	class:internal::Double
kStringFlag	include/rapidjson/document.h	/^        kStringFlag     = 0x0400,$/;"	e	enum:GenericValue::__anon23
kStringSchemaType	include/rapidjson/schema.h	/^        kStringSchemaType,$/;"	e	enum:internal::Schema::SchemaValueType
kStringType	include/rapidjson/rapidjson.h	/^    kStringType = 5,    \/\/!< string$/;"	e	enum:Type
kTokenCount	include/rapidjson/reader.h	/^        kTokenCount$/;"	e	enum:GenericReader::Token
kTotalSchemaType	include/rapidjson/schema.h	/^        kTotalSchemaType$/;"	e	enum:internal::Schema::SchemaValueType
kTrueFlag	include/rapidjson/document.h	/^        kTrueFlag = kTrueType | kBoolFlag,$/;"	e	enum:GenericValue::__anon23
kTrueType	include/rapidjson/rapidjson.h	/^    kTrueType = 2,      \/\/!< true$/;"	e	enum:Type
kTypeBit	include/rapidjson/internal/biginteger.h	/^    static const size_t kTypeBit = sizeof(Type) * 8;$/;"	m	class:internal::BigInteger
kTypeMask	include/rapidjson/document.h	/^        kTypeMask = 0x07$/;"	e	enum:GenericValue::__anon23
kUTF16BE	include/rapidjson/encodings.h	/^    kUTF16BE = 2,   \/\/!< UTF-16 big endian.$/;"	e	enum:UTFType
kUTF16LE	include/rapidjson/encodings.h	/^    kUTF16LE = 1,   \/\/!< UTF-16 little endian.$/;"	e	enum:UTFType
kUTF32BE	include/rapidjson/encodings.h	/^    kUTF32BE = 4    \/\/!< UTF-32 big endian.$/;"	e	enum:UTFType
kUTF32LE	include/rapidjson/encodings.h	/^    kUTF32LE = 3,   \/\/!< UTF-32 little endian.$/;"	e	enum:UTFType
kUTF8	include/rapidjson/encodings.h	/^    kUTF8 = 0,      \/\/!< UTF-8.$/;"	e	enum:UTFType
kUint64Flag	include/rapidjson/document.h	/^        kUint64Flag     = 0x0100,$/;"	e	enum:GenericValue::__anon23
kUintFlag	include/rapidjson/document.h	/^        kUintFlag       = 0x0040,$/;"	e	enum:GenericValue::__anon23
kWriteDefaultFlags	include/rapidjson/writer.h	/^    kWriteDefaultFlags = RAPIDJSON_WRITE_DEFAULT_FLAGS  \/\/!< Default write flags. Can be customized by defining RAPIDJSON_WRITE_DEFAULT_FLAGS$/;"	e	enum:WriteFlag
kWriteNanAndInfFlag	include/rapidjson/writer.h	/^    kWriteNanAndInfFlag = 2,        \/\/!< Allow writing of Infinity, -Infinity and NaN.$/;"	e	enum:WriteFlag
kWriteNoFlags	include/rapidjson/writer.h	/^    kWriteNoFlags = 0,              \/\/!< No flags are set.$/;"	e	enum:WriteFlag
kWriteValidateEncodingFlag	include/rapidjson/writer.h	/^    kWriteValidateEncodingFlag = 1, \/\/!< Validate encoding of JSON strings.$/;"	e	enum:WriteFlag
kZeroOrMore	include/rapidjson/internal/regex.h	/^        kZeroOrMore,$/;"	e	enum:internal::GenericRegex::Operator
kZeroOrOne	include/rapidjson/internal/regex.h	/^        kZeroOrOne,$/;"	e	enum:internal::GenericRegex::Operator
ka_interval	include/libwebsockets/lws-context-vhost.h	/^	int ka_interval;$/;"	m	struct:lws_context_creation_info
ka_probes	include/libwebsockets/lws-context-vhost.h	/^	int ka_probes;$/;"	m	struct:lws_context_creation_info
ka_time	include/libwebsockets/lws-context-vhost.h	/^	int ka_time;$/;"	m	struct:lws_context_creation_info
keepalive_timeout	include/libwebsockets/lws-context-vhost.h	/^	int keepalive_timeout;$/;"	m	struct:lws_context_creation_info
keytype	include/libwebsockets/lws-jwk.h	/^	char keytype[5];		\/**< "oct" or "RSA" *\/$/;"	m	struct:lws_jwk
l	include/libwebsockets/lws-protocols-plugins.h	/^	void *l; \/**< so we can compile on ancient libuv *\/$/;"	m	struct:lws_plugin
last	junk/protocol_lws_minimal.c	/^	int last; \/* the last message number we sent *\/$/;"	m	struct:per_session_data__minimal	file:
last_seen	include/libwebsockets/lws-esp32.h	/^	uint64_t last_seen;$/;"	m	struct:lws_group_member
le_dns	include/libwebsockets/lws-esp32.h	/^	char le_dns[64];$/;"	m	struct:lws_esp32
le_email	include/libwebsockets/lws-esp32.h	/^	char le_email[64];$/;"	m	struct:lws_esp32
lejp_callback	include/libwebsockets/lws-lejp.h	/^typedef signed char (*lejp_callback)(struct lejp_ctx *ctx, char reason);$/;"	t
lejp_callbacks	include/libwebsockets/lws-lejp.h	/^enum lejp_callbacks {$/;"	g
lejp_ctx	include/libwebsockets/lws-lejp.h	/^struct lejp_ctx {$/;"	s
lejp_reasons	include/libwebsockets/lws-lejp.h	/^enum lejp_reasons {$/;"	g
lejp_states	include/libwebsockets/lws-lejp.h	/^enum lejp_states {$/;"	g
len	include/libwebsockets/lws-cgi.h	/^	int len; \/**< length *\/$/;"	m	struct:lws_cgi_args
len	include/libwebsockets/lws-genrsa.h	/^	uint16_t len;$/;"	m	struct:lws_genrsa_element
len	include/libwebsockets/lws-http.h	/^	int len; \/**< length of the original data at p *\/$/;"	m	struct:lws_process_html_args
len	include/libwebsockets/lws-http.h	/^	int len; \/**< length of the token's value *\/$/;"	m	struct:lws_tokens
len	include/libwebsockets/lws-vfs.h	/^	lws_filepos_t			len;$/;"	m	struct:lws_fop_fd
len	include/libwebsockets/lws-vfs.h	/^	uint8_t len;		\/* length of above string *\/$/;"	m	struct:lws_fops_index
len	include/libwebsockets/lws-write.h	/^	size_t len;$/;"	m	struct:lws_write_passthru
len	include/libwebsockets/lws-ws-ext.h	/^	int len; \/**< length of value *\/$/;"	m	struct:lws_ext_option_arg
len	include/libwebsockets/lws-x509.h	/^		int len;$/;"	m	struct:lws_tls_cert_info_results::__anon6
len	junk/protocol_lws_minimal.c	/^	size_t len;$/;"	m	struct:msg	file:
length	include/rapidjson/document.h	/^        SizeType length;$/;"	m	struct:GenericValue::String
length	include/rapidjson/document.h	/^    const SizeType length; \/\/!< length of the string (excluding the trailing NULL terminator)$/;"	m	struct:GenericStringRef
length	include/rapidjson/pointer.h	/^        SizeType length;            \/\/!< Length of the name.$/;"	m	struct:GenericPointer::Token
length_	include/rapidjson/reader.h	/^        SizeType length_;$/;"	m	class:GenericReader::StackStream
level_stack_	include/rapidjson/writer.h	/^    internal::Stack<StackAllocator> level_stack_;$/;"	m	class:Writer
lib	include/libwebsockets/lws-protocols-plugins.h	/^	uv_lib_t lib; \/**< shared library pointer *\/$/;"	m	struct:lws_plugin
line	include/jansson.h	/^    int line;$/;"	m	struct:json_error_t
line	include/libwebsockets/lws-lejp.h	/^	uint32_t line;$/;"	m	struct:lejp_ctx
line_	include/rapidjson/cursorstreamwrapper.h	/^    size_t line_;   \/\/!< Current Line$/;"	m	class:CursorStreamWrapper
list	include/libwebsockets/lws-protocols-plugins.h	/^	struct lws_plugin *list; \/**< linked list *\/$/;"	m	struct:lws_plugin	typeref:struct:lws_plugin::lws_plugin
local_protocol_name	include/libwebsockets/lws-client.h	/^	const char *local_protocol_name;$/;"	m	struct:lws_client_connect_info
log_filepath	include/libwebsockets/lws-context-vhost.h	/^	const char *log_filepath;$/;"	m	struct:lws_context_creation_info
loop	include/libwebsockets/lws-misc.h	/^	uv_loop_t *loop;$/;"	m	struct:lws_email
lws_SHA1	include/libwebsockets/lws-sha1-base64.h	31;"	d
lws_acme_cert_aging_args	include/libwebsockets/lws-callbacks.h	/^struct lws_acme_cert_aging_args {$/;"	s
lws_adoption_type	include/libwebsockets/lws-adopt.h	/^} lws_adoption_type;$/;"	t	typeref:enum:__anon7
lws_callback_function	include/libwebsockets/lws-callbacks.h	/^lws_callback_function(struct lws *wsi, enum lws_callback_reasons reason,$/;"	t
lws_callback_reasons	include/libwebsockets/lws-callbacks.h	/^enum lws_callback_reasons {$/;"	g
lws_cb_scan_done	include/libwebsockets/lws-esp32.h	/^typedef void (*lws_cb_scan_done)(uint16_t count, wifi_ap_record_t *recs, void *arg);$/;"	t
lws_cert_update_state	include/libwebsockets/lws-callbacks.h	/^enum lws_cert_update_state {$/;"	g
lws_cgi_args	include/libwebsockets/lws-cgi.h	/^struct lws_cgi_args {$/;"	s
lws_cgi_hdr_state	include/libwebsockets/lws-cgi.h	/^enum lws_cgi_hdr_state {$/;"	g
lws_check_opt	include/libwebsockets/lws-context-vhost.h	141;"	d
lws_client_connect_info	include/libwebsockets/lws-client.h	/^struct lws_client_connect_info {$/;"	s
lws_client_connect_ssl_connection_flags	include/libwebsockets/lws-client.h	/^enum lws_client_connect_ssl_connection_flags {$/;"	g
lws_close_status	include/libwebsockets/lws-ws-close.h	/^enum lws_close_status {$/;"	g
lws_container_of	include/libwebsockets.h	286;"	d
lws_context_creation_info	include/libwebsockets/lws-context-vhost.h	/^struct lws_context_creation_info {$/;"	s
lws_context_options	include/libwebsockets/lws-context-vhost.h	/^enum lws_context_options {$/;"	g
lws_dll	include/libwebsockets/lws-misc.h	/^struct lws_dll { \/* abstract *\/$/;"	s
lws_dll_is_null	include/libwebsockets/lws-misc.h	195;"	d
lws_dll_lws	include/libwebsockets/lws-misc.h	/^struct lws_dll_lws { \/* typed as struct lws * *\/$/;"	s
lws_dll_lws_add_front	include/libwebsockets/lws-misc.h	/^lws_dll_lws_add_front(struct lws_dll_lws *_a, struct lws_dll_lws *_head)$/;"	f
lws_dll_lws_remove	include/libwebsockets/lws-misc.h	/^lws_dll_lws_remove(struct lws_dll_lws *_a)$/;"	f
lws_email	include/libwebsockets/lws-misc.h	/^struct lws_email {$/;"	s
lws_end_foreach_dll	include/libwebsockets/lws-misc.h	231;"	d
lws_end_foreach_dll_safe	include/libwebsockets/lws-misc.h	221;"	d
lws_end_foreach_ll	include/libwebsockets/lws-misc.h	58;"	d
lws_end_foreach_ll_safe	include/libwebsockets/lws-misc.h	94;"	d
lws_end_foreach_llp	include/libwebsockets/lws-misc.h	137;"	d
lws_end_foreach_llp_safe	include/libwebsockets/lws-misc.h	142;"	d
lws_enum_stdinouterr	include/libwebsockets/lws-cgi.h	/^enum lws_enum_stdinouterr {$/;"	g
lws_esp32	include/libwebsockets/lws-esp32.h	/^struct lws_esp32 {$/;"	s
lws_esp32_image	include/libwebsockets/lws-esp32.h	/^struct lws_esp32_image {$/;"	s
lws_ext_option_arg	include/libwebsockets/lws-ws-ext.h	/^struct lws_ext_option_arg {$/;"	s
lws_ext_options	include/libwebsockets/lws-ws-ext.h	/^struct lws_ext_options {$/;"	s
lws_ext_options_types	include/libwebsockets/lws-ws-ext.h	/^enum lws_ext_options_types {$/;"	g
lws_extension	include/libwebsockets/lws-ws-ext.h	/^struct lws_extension {$/;"	s
lws_extension_callback_function	include/libwebsockets/lws-ws-ext.h	/^lws_extension_callback_function(struct lws_context *context,$/;"	t
lws_extension_callback_reasons	include/libwebsockets/lws-ws-ext.h	/^enum lws_extension_callback_reasons {$/;"	g
lws_filefd_type	include/libwebsockets.h	/^typedef HANDLE lws_filefd_type;$/;"	t
lws_filefd_type	include/libwebsockets.h	/^typedef int lws_filefd_type;$/;"	t
lws_filefd_type	include/libwebsockets/lws-esp32.h	/^typedef int lws_filefd_type;$/;"	t
lws_fileofs_t	include/libwebsockets.h	/^typedef long long lws_fileofs_t;$/;"	t
lws_filepos_t	include/libwebsockets.h	/^typedef unsigned long long lws_filepos_t;$/;"	t
lws_fop_fd	include/libwebsockets/lws-vfs.h	/^struct lws_fop_fd {$/;"	s
lws_fop_fd_t	include/libwebsockets/lws-vfs.h	/^typedef struct lws_fop_fd *lws_fop_fd_t;$/;"	t	typeref:struct:lws_fop_fd
lws_fop_flags_t	include/libwebsockets.h	/^typedef uint32_t lws_fop_flags_t;$/;"	t
lws_fops_index	include/libwebsockets/lws-vfs.h	/^struct lws_fops_index {$/;"	s
lws_genhash_ctx	include/libwebsockets/lws-genhash.h	/^struct lws_genhash_ctx {$/;"	s
lws_genhash_types	include/libwebsockets/lws-genhash.h	/^enum lws_genhash_types {$/;"	g
lws_genhmac_ctx	include/libwebsockets/lws-genhash.h	/^struct lws_genhmac_ctx {$/;"	s
lws_genhmac_types	include/libwebsockets/lws-genhash.h	/^enum lws_genhmac_types {$/;"	g
lws_genrsa_ctx	include/libwebsockets/lws-genrsa.h	/^struct lws_genrsa_ctx {$/;"	s
lws_genrsa_element	include/libwebsockets/lws-genrsa.h	/^struct lws_genrsa_element {$/;"	s
lws_genrsa_elements	include/libwebsockets/lws-genrsa.h	/^struct lws_genrsa_elements {$/;"	s
lws_group_member	include/libwebsockets/lws-esp32.h	/^struct lws_group_member {$/;"	s
lws_gs_event	include/libwebsockets/lws-plugin-generic-sessions.h	/^enum lws_gs_event {$/;"	g
lws_gs_event_args	include/libwebsockets/lws-plugin-generic-sessions.h	/^struct lws_gs_event_args {$/;"	s
lws_http_mount	include/libwebsockets/lws-context-vhost.h	/^struct lws_http_mount {$/;"	s
lws_intptr_t	include/libwebsockets.h	/^typedef unsigned long long lws_intptr_t;$/;"	t
lws_intptr_t	include/libwebsockets.h	47;"	d
lws_is_be	include/libwebsockets/lws-logs.h	/^static LWS_INLINE int lws_is_be(void) {$/;"	f
lws_jwk	include/libwebsockets/lws-jwk.h	/^struct lws_jwk {$/;"	s
lws_libuv_static_refcount_add	include/libwebsockets/lws-service.h	212;"	d
lws_libuv_static_refcount_del	include/libwebsockets/lws-service.h	213;"	d
lws_ll_fwd_insert	include/libwebsockets/lws-misc.h	147;"	d
lws_ll_fwd_remove	include/libwebsockets/lws-misc.h	156;"	d
lws_log_levels	include/libwebsockets/lws-logs.h	/^enum lws_log_levels {$/;"	g
lws_mount_protocols	include/libwebsockets/lws-context-vhost.h	/^enum lws_mount_protocols {$/;"	g
lws_plat_file_ops	include/libwebsockets/lws-vfs.h	/^struct lws_plat_file_ops {$/;"	s
lws_plat_service_tsi	include/libwebsockets/lws-service.h	171;"	d
lws_plugin	include/libwebsockets/lws-protocols-plugins.h	/^struct lws_plugin {$/;"	s
lws_plugin_capability	include/libwebsockets/lws-protocols-plugins.h	/^struct lws_plugin_capability {$/;"	s
lws_plugin_destroy_func	include/libwebsockets/lws-protocols-plugins.h	/^typedef int (*lws_plugin_destroy_func)(struct lws_context *);$/;"	t
lws_plugin_init_func	include/libwebsockets/lws-protocols-plugins.h	/^typedef int (*lws_plugin_init_func)(struct lws_context *,$/;"	t
lws_pollargs	include/libwebsockets.h	/^struct lws_pollargs {$/;"	s
lws_pollfd	include/libwebsockets.h	/^struct lws_pollfd {$/;"	s
lws_pollfd	include/libwebsockets.h	334;"	d
lws_process_html_args	include/libwebsockets/lws-http.h	/^struct lws_process_html_args {$/;"	s
lws_process_html_state	include/libwebsockets/lws-http.h	/^struct lws_process_html_state {$/;"	s
lws_process_html_state_cb	include/libwebsockets/lws-http.h	/^typedef const char *(*lws_process_html_state_cb)(void *data, int index);$/;"	t
lws_protocol_vhost_options	include/libwebsockets/lws-context-vhost.h	/^struct lws_protocol_vhost_options {$/;"	s
lws_protocols	include/libwebsockets/lws-protocols-plugins.h	/^struct lws_protocols {$/;"	s
lws_pthread_mutex	include/libwebsockets.h	242;"	d
lws_pthread_mutex	include/libwebsockets.h	269;"	d
lws_pthread_mutex_destroy	include/libwebsockets.h	/^lws_pthread_mutex_destroy(pthread_mutex_t *lock)$/;"	f
lws_pthread_mutex_destroy	include/libwebsockets.h	271;"	d
lws_pthread_mutex_init	include/libwebsockets.h	/^lws_pthread_mutex_init(pthread_mutex_t *lock)$/;"	f
lws_pthread_mutex_init	include/libwebsockets.h	270;"	d
lws_pthread_mutex_lock	include/libwebsockets.h	/^lws_pthread_mutex_lock(pthread_mutex_t *lock)$/;"	f
lws_pthread_mutex_lock	include/libwebsockets.h	272;"	d
lws_pthread_mutex_unlock	include/libwebsockets.h	/^lws_pthread_mutex_unlock(pthread_mutex_t *lock)$/;"	f
lws_pthread_mutex_unlock	include/libwebsockets.h	273;"	d
lws_ptr_diff	include/libwebsockets/lws-misc.h	303;"	d
lws_reload_func	include/libwebsockets/lws-context-vhost.h	/^typedef int (*lws_reload_func)(void);$/;"	t
lws_ring_consume_and_update_oldest_tail	include/libwebsockets/lws-ring.h	261;"	d
lws_ring_consume_single_tail	include/libwebsockets/lws-ring.h	297;"	d
lws_session_info	include/libwebsockets/lws-plugin-generic-sessions.h	/^struct lws_session_info {$/;"	s
lws_sock_file_fd_type	include/libwebsockets/lws-adopt.h	/^} lws_sock_file_fd_type;$/;"	t	typeref:union:__anon8
lws_sockfd_type	include/libwebsockets.h	/^typedef SOCKET lws_sockfd_type;$/;"	t
lws_sockfd_type	include/libwebsockets.h	/^typedef int lws_sockfd_type;$/;"	t
lws_sockfd_type	include/libwebsockets/lws-esp32.h	/^typedef int lws_sockfd_type;$/;"	t
lws_spa_fileupload_cb	include/libwebsockets/lws-spa.h	/^typedef int (*lws_spa_fileupload_cb)(void *data, const char *name,$/;"	t
lws_spa_fileupload_states	include/libwebsockets/lws-spa.h	/^enum lws_spa_fileupload_states {$/;"	g
lws_ssl_info	include/libwebsockets/lws-callbacks.h	/^struct lws_ssl_info {$/;"	s
lws_start_foreach_dll	include/libwebsockets/lws-misc.h	226;"	d
lws_start_foreach_dll_safe	include/libwebsockets/lws-misc.h	215;"	d
lws_start_foreach_ll	include/libwebsockets/lws-misc.h	43;"	d
lws_start_foreach_ll_safe	include/libwebsockets/lws-misc.h	78;"	d
lws_start_foreach_llp	include/libwebsockets/lws-misc.h	115;"	d
lws_start_foreach_llp_safe	include/libwebsockets/lws-misc.h	120;"	d
lws_stats_get	include/libwebsockets/lws-stats.h	/^lws_stats_get(struct lws_context *context, int index) { (void)context; (void)index;  return 0; }$/;"	f
lws_stats_log_dump	include/libwebsockets/lws-stats.h	/^lws_stats_log_dump(struct lws_context *context) { (void)context; }$/;"	f
lws_threadpool_create_args	include/libwebsockets/lws-threadpool.h	/^struct lws_threadpool_create_args {$/;"	s
lws_threadpool_task_args	include/libwebsockets/lws-threadpool.h	/^struct lws_threadpool_task_args {$/;"	s
lws_threadpool_task_return	include/libwebsockets/lws-threadpool.h	/^enum lws_threadpool_task_return {$/;"	g
lws_threadpool_task_status	include/libwebsockets/lws-threadpool.h	/^enum lws_threadpool_task_status {$/;"	g
lws_tls_cert_info	include/libwebsockets/lws-x509.h	/^enum lws_tls_cert_info {$/;"	g
lws_tls_cert_info_results	include/libwebsockets/lws-x509.h	/^union lws_tls_cert_info_results {$/;"	u
lws_token_indexes	include/libwebsockets/lws-http.h	/^enum lws_token_indexes {$/;"	g
lws_token_limits	include/libwebsockets/lws-http.h	/^struct lws_token_limits {$/;"	s
lws_tokens	include/libwebsockets/lws-http.h	/^struct lws_tokens {$/;"	s
lws_udp	include/libwebsockets/lws-adopt.h	/^struct lws_udp {$/;"	s
lws_usec_t	include/libwebsockets.h	/^typedef int64_t lws_usec_t;$/;"	t
lws_uv_getloop	include/libwebsockets/lws-esp32.h	66;"	d
lws_vfs_file_close	include/libwebsockets/lws-vfs.h	/^lws_vfs_file_close(lws_fop_fd_t *fop_fd)$/;"	f
lws_vfs_file_read	include/libwebsockets/lws-vfs.h	/^lws_vfs_file_read(lws_fop_fd_t fop_fd, lws_filepos_t *amount,$/;"	f
lws_vfs_file_seek_cur	include/libwebsockets/lws-vfs.h	/^lws_vfs_file_seek_cur(lws_fop_fd_t fop_fd, lws_fileofs_t offset)$/;"	f
lws_vfs_file_write	include/libwebsockets/lws-vfs.h	/^lws_vfs_file_write(lws_fop_fd_t fop_fd, lws_filepos_t *amount,$/;"	f
lws_wifi_scan	include/libwebsockets/lws-misc.h	/^struct lws_wifi_scan { \/* generic wlan scan item *\/$/;"	s
lws_worker	minimal-ws-server-echo.c	/^int lws_worker()$/;"	f
lws_worker	test_main.cpp	/^int lws_worker()$/;"	f
lws_write_http	include/libwebsockets/lws-write.h	212;"	d
lws_write_passthru	include/libwebsockets/lws-write.h	/^struct lws_write_passthru {$/;"	s
lws_write_protocol	include/libwebsockets/lws-write.h	/^enum lws_write_protocol {$/;"	g
lws_write_ws_flags	include/libwebsockets/lws-write.h	/^lws_write_ws_flags(int initial, int is_start, int is_end)$/;"	f
lwsgs_auth_bits	include/libwebsockets/lws-plugin-generic-sessions.h	/^enum lwsgs_auth_bits {$/;"	g
lwsgs_smtp_states	include/libwebsockets/lws-misc.h	/^enum lwsgs_smtp_states {$/;"	g
lwsgw_hash	include/libwebsockets/lws-plugin-generic-sessions.h	/^typedef struct { char id[41]; \/**< ascii hex representation of hash *\/ } lwsgw_hash;$/;"	t	typeref:struct:__anon12
lwsgw_hash_bin	include/libwebsockets/lws-plugin-generic-sessions.h	/^typedef struct { unsigned char bin[20]; \/**< binary representation of hash *\/} lwsgw_hash_bin;$/;"	t	typeref:struct:__anon11
lwsl_client	include/libwebsockets/lws-logs.h	108;"	d
lwsl_client	include/libwebsockets/lws-logs.h	94;"	d
lwsl_debug	include/libwebsockets/lws-logs.h	104;"	d
lwsl_debug	include/libwebsockets/lws-logs.h	90;"	d
lwsl_err	include/libwebsockets/lws-logs.h	69;"	d
lwsl_ext	include/libwebsockets/lws-logs.h	107;"	d
lwsl_ext	include/libwebsockets/lws-logs.h	93;"	d
lwsl_header	include/libwebsockets/lws-logs.h	106;"	d
lwsl_header	include/libwebsockets/lws-logs.h	92;"	d
lwsl_hexdump_debug	include/libwebsockets/lws-logs.h	118;"	d
lwsl_hexdump_err	include/libwebsockets/lws-logs.h	114;"	d
lwsl_hexdump_info	include/libwebsockets/lws-logs.h	117;"	d
lwsl_hexdump_notice	include/libwebsockets/lws-logs.h	116;"	d
lwsl_hexdump_warn	include/libwebsockets/lws-logs.h	115;"	d
lwsl_info	include/libwebsockets/lws-logs.h	103;"	d
lwsl_info	include/libwebsockets/lws-logs.h	89;"	d
lwsl_latency	include/libwebsockets/lws-logs.h	109;"	d
lwsl_latency	include/libwebsockets/lws-logs.h	95;"	d
lwsl_notice	include/libwebsockets/lws-logs.h	101;"	d
lwsl_notice	include/libwebsockets/lws-logs.h	75;"	d
lwsl_notice	include/libwebsockets/lws-logs.h	87;"	d
lwsl_parser	include/libwebsockets/lws-logs.h	105;"	d
lwsl_parser	include/libwebsockets/lws-logs.h	91;"	d
lwsl_thread	include/libwebsockets/lws-logs.h	110;"	d
lwsl_thread	include/libwebsockets/lws-logs.h	96;"	d
lwsl_user	include/libwebsockets/lws-logs.h	70;"	d
lwsl_warn	include/libwebsockets/lws-logs.h	100;"	d
lwsl_warn	include/libwebsockets/lws-logs.h	74;"	d
lwsl_warn	include/libwebsockets/lws-logs.h	86;"	d
m	include/eval_types.h	/^	std::mutex m;$/;"	m	struct:_engine_t
mac	include/libwebsockets/lws-esp32.h	/^	char mac[20];$/;"	m	struct:lws_esp32
mac	include/libwebsockets/lws-esp32.h	/^	char mac[20];$/;"	m	struct:lws_group_member
main	bar.cpp	/^int main ()$/;"	f
main	foo.c	/^int main(){$/;"	f
main	junk/minimal-ws-server.c	/^int main(int argc, const char **argv)$/;"	f
main	minimal-ws-server-echo.c	/^int main(int argc, const char **argv)$/;"	f
main	test.cpp	/^int main ()$/;"	f
main	test_main.cpp	/^int main(int argc, const char **argv)$/;"	f
mask	include/libwebsockets/lws-plugin-generic-sessions.h	/^	unsigned int mask; \/**< access rights mask associated with session$/;"	m	struct:lws_session_info
maxDecimalPlaces_	include/rapidjson/writer.h	/^    int maxDecimalPlaces_;$/;"	m	class:Writer
maxItems_	include/rapidjson/schema.h	/^    SizeType maxItems_;$/;"	m	class:internal::Schema
maxLength_	include/rapidjson/schema.h	/^    SizeType maxLength_;$/;"	m	class:internal::Schema
maxProperties_	include/rapidjson/schema.h	/^    SizeType maxProperties_;$/;"	m	class:internal::Schema
max_content_size	include/libwebsockets/lws-misc.h	/^	unsigned int max_content_size;$/;"	m	struct:lws_email
max_http_header_data	include/libwebsockets/lws-context-vhost.h	/^	unsigned short max_http_header_data;$/;"	m	struct:lws_context_creation_info
max_http_header_data2	include/libwebsockets/lws-context-vhost.h	/^	unsigned int max_http_header_data2;$/;"	m	struct:lws_context_creation_info
max_http_header_pool	include/libwebsockets/lws-context-vhost.h	/^	unsigned short max_http_header_pool;$/;"	m	struct:lws_context_creation_info
max_http_header_pool2	include/libwebsockets/lws-context-vhost.h	/^	unsigned int max_http_header_pool2;$/;"	m	struct:lws_context_creation_info
max_len	include/libwebsockets/lws-http.h	/^	int max_len; \/**< maximum length we can grow the data to *\/$/;"	m	struct:lws_process_html_args
max_queue_depth	include/libwebsockets/lws-threadpool.h	/^	int max_queue_depth;$/;"	m	struct:lws_threadpool_create_args
maximum_	include/rapidjson/schema.h	/^    SValue maximum_;$/;"	m	class:internal::Schema
mdctx	include/libwebsockets/lws-genhash.h	/^        EVP_MD_CTX *mdctx;$/;"	m	struct:lws_genhash_ctx
members	include/rapidjson/document.h	/^        Member* members;$/;"	m	struct:GenericValue::ObjectData
method	include/libwebsockets/lws-client.h	/^	const char *method;$/;"	m	struct:lws_client_connect_info
minIndex	include/rapidjson/internal/regex.h	/^        SizeType minIndex;$/;"	m	struct:internal::GenericRegex::Frag
minItems_	include/rapidjson/schema.h	/^    SizeType minItems_;$/;"	m	class:internal::Schema
minLength_	include/rapidjson/schema.h	/^    SizeType minLength_;$/;"	m	class:internal::Schema
minProperties_	include/rapidjson/schema.h	/^    SizeType minProperties_;$/;"	m	class:internal::Schema
minimum_	include/rapidjson/schema.h	/^    SValue minimum_;$/;"	m	class:internal::Schema
missingDependents_	include/rapidjson/schema.h	/^    ValueType missingDependents_;$/;"	m	class:GenericSchemaValidator
mod_time	include/libwebsockets/lws-vfs.h	/^	uint32_t			mod_time;$/;"	m	struct:lws_fop_fd
model	include/libwebsockets/lws-esp32.h	/^	char model[16];$/;"	m	struct:lws_esp32
model	include/libwebsockets/lws-esp32.h	/^	char model[16];$/;"	m	struct:lws_group_member
mount	junk/minimal-ws-server.c	/^static const struct lws_http_mount mount = {$/;"	v	typeref:struct:lws_http_mount	file:
mount_next	include/libwebsockets/lws-context-vhost.h	/^	const struct lws_http_mount *mount_next;$/;"	m	struct:lws_http_mount	typeref:struct:lws_http_mount::lws_http_mount
mountpoint	include/libwebsockets/lws-context-vhost.h	/^	const char *mountpoint;$/;"	m	struct:lws_http_mount
mountpoint_len	include/libwebsockets/lws-context-vhost.h	/^	unsigned char mountpoint_len; \/**< length of mountpoint string *\/$/;"	m	struct:lws_http_mount
mounts	include/libwebsockets/lws-context-vhost.h	/^	const struct lws_http_mount *mounts;$/;"	m	struct:lws_context_creation_info	typeref:struct:lws_context_creation_info::lws_http_mount
move	include/rapidjson/schema.h	/^        uri_(std::move(rhs.uri_))$/;"	f	class:GenericSchemaDocument
msg	junk/protocol_lws_minimal.c	/^struct msg {$/;"	s	file:
mtx	bar.cpp	/^std::mutex mtx;$/;"	v
mtx	test.cpp	/^std::mutex mtx;$/;"	v
multipleOf_	include/rapidjson/schema.h	/^    SValue multipleOf_;$/;"	m	class:internal::Schema
n	include/rapidjson/document.h	/^        Number n;$/;"	m	union:GenericValue::Data
name	include/libwebsockets/lws-context-vhost.h	/^	const char *name; \/**< name of name=value pair *\/$/;"	m	struct:lws_protocol_vhost_options
name	include/libwebsockets/lws-protocols-plugins.h	/^	char name[64]; \/**< name of the plugin *\/$/;"	m	struct:lws_plugin
name	include/libwebsockets/lws-protocols-plugins.h	/^	const char *name;$/;"	m	struct:lws_protocols
name	include/libwebsockets/lws-threadpool.h	/^	const char *name;	\/**< user may set to describe task *\/$/;"	m	struct:lws_threadpool_task_args
name	include/libwebsockets/lws-ws-ext.h	/^	const char *name; \/**< Formal extension name, eg, "permessage-deflate" *\/$/;"	m	struct:lws_extension
name	include/libwebsockets/lws-ws-ext.h	/^	const char *name; \/**< Option name, eg, "server_no_context_takeover" *\/$/;"	m	struct:lws_ext_options
name	include/libwebsockets/lws-x509.h	/^		char name[64];$/;"	m	struct:lws_tls_cert_info_results::__anon6
name	include/rapidjson/document.h	/^    GenericValue<Encoding, Allocator> name;     \/\/!< name of member (must be a string)$/;"	m	struct:GenericMember
name	include/rapidjson/pointer.h	/^        const Ch* name;             \/\/!< Name of the token. It has null character at the end but it can contain null character.$/;"	m	struct:GenericPointer::Token
name	include/rapidjson/schema.h	/^        SValue name;$/;"	m	struct:internal::Schema::Property
nameBuffer_	include/rapidjson/pointer.h	/^    Ch* nameBuffer_;                        \/\/!< A buffer containing all names in tokens.$/;"	m	class:GenericPointer
next	include/libwebsockets/lws-context-vhost.h	/^	const struct lws_protocol_vhost_options *next; \/**< linked list *\/$/;"	m	struct:lws_protocol_vhost_options	typeref:struct:lws_protocol_vhost_options::lws_protocol_vhost_options
next	include/libwebsockets/lws-esp32.h	/^	struct lws_group_member *next;$/;"	m	struct:lws_group_member	typeref:struct:lws_group_member::lws_group_member
next	include/libwebsockets/lws-misc.h	/^	struct lws_dll *next;$/;"	m	struct:lws_dll	typeref:struct:lws_dll::lws_dll
next	include/libwebsockets/lws-misc.h	/^	struct lws_dll_lws *next;$/;"	m	struct:lws_dll_lws	typeref:struct:lws_dll_lws::lws_dll_lws
next	include/libwebsockets/lws-misc.h	/^	struct lws_wifi_scan *next;$/;"	m	struct:lws_wifi_scan	typeref:struct:lws_wifi_scan::lws_wifi_scan
next	include/libwebsockets/lws-vfs.h	/^	const struct lws_plat_file_ops *next;$/;"	m	struct:lws_plat_file_ops	typeref:struct:lws_plat_file_ops::lws_plat_file_ops
next	include/rapidjson/allocators.h	/^        ChunkHeader *next;  \/\/!< Next chunk in the linked list.$/;"	m	struct:MemoryPoolAllocator::ChunkHeader
next	include/rapidjson/internal/regex.h	/^        SizeType next;$/;"	m	struct:internal::GenericRegex::Range
notValidatorIndex_	include/rapidjson/schema.h	/^    SizeType notValidatorIndex_;$/;"	m	class:internal::Schema
not_	include/rapidjson/schema.h	/^    const SchemaType* not_;$/;"	m	class:internal::Schema
notify_engine_threads	handle_message.cpp	/^void notify_engine_threads(){$/;"	f
npos	include/libwebsockets/lws-lejp.h	/^	uint8_t npos;$/;"	m	struct:lejp_ctx
ns	include/libwebsockets/lws-x509.h	/^	} ns;$/;"	m	union:lws_tls_cert_info_results	typeref:struct:lws_tls_cert_info_results::__anon6
num_flags	include/libwebsockets/lws-lejp.h	/^enum num_flags {$/;"	g
o	include/rapidjson/document.h	/^        ObjectData o;$/;"	m	union:GenericValue::Data
objectPatternValidatorType	include/rapidjson/schema.h	/^    PatternValidatorType objectPatternValidatorType;$/;"	m	struct:internal::SchemaValidationContext
offset_	include/rapidjson/error/error.h	/^    size_t offset_;$/;"	m	struct:ParseResult
on_get_body	include/libwebsockets/lws-misc.h	/^	int (*on_get_body)(struct lws_email *email, char *buf, int len);$/;"	m	struct:lws_email
on_next	include/libwebsockets/lws-misc.h	/^	int (*on_next)(struct lws_email *email);$/;"	m	struct:lws_email
on_sent	include/libwebsockets/lws-misc.h	/^	int (*on_sent)(struct lws_email *email);$/;"	m	struct:lws_email
oneOf_	include/rapidjson/schema.h	/^    SchemaArray oneOf_;$/;"	m	class:internal::Schema
operator !=	include/rapidjson/document.h	/^    bool operator!=(ConstIterator that) const { return ptr_ != that.ptr_; }$/;"	f	class:GenericMemberIterator
operator !=	include/rapidjson/document.h	/^    bool operator!=(const Ch* rhs) const { return !(*this == rhs); }$/;"	f	class:GenericValue
operator !=	include/rapidjson/document.h	/^    bool operator!=(const GenericValue<Encoding, SourceAllocator>& rhs) const { return !(*this == rhs); }$/;"	f	class:GenericValue
operator !=	include/rapidjson/document.h	/^    template <typename T> RAPIDJSON_DISABLEIF_RETURN((internal::IsGenericValue<T>), (bool)) operator!=(const T& rhs) const { return !(*this == rhs); }$/;"	f	class:GenericValue
operator !=	include/rapidjson/document.h	/^    template <typename T> friend RAPIDJSON_DISABLEIF_RETURN((internal::IsGenericValue<T>), (bool)) operator!=(const T& lhs, const GenericValue& rhs) { return !(rhs == lhs); }$/;"	f	class:GenericValue
operator !=	include/rapidjson/error/error.h	/^    bool operator!=(ParseErrorCode code) const { return !(*this == code); }$/;"	f	struct:ParseResult
operator !=	include/rapidjson/error/error.h	/^    bool operator!=(const ParseResult& that) const { return !(*this == that); }$/;"	f	struct:ParseResult
operator !=	include/rapidjson/error/error.h	/^    friend bool operator!=(ParseErrorCode code, const ParseResult & err) { return err != code; }$/;"	f	struct:ParseResult
operator !=	include/rapidjson/pointer.h	/^    bool operator!=(const GenericPointer& rhs) const { return !(*this == rhs); }$/;"	f	class:GenericPointer
operator ()	include/rapidjson/schema.h	/^    bool operator()(Handler& handler) {$/;"	f	class:SchemaValidatingReader
operator *	include/rapidjson/document.h	/^    Reference operator*() const { return *ptr_; }$/;"	f	class:GenericMemberIterator
operator *	include/rapidjson/internal/diyfp.h	/^    DiyFp operator*(const DiyFp& rhs) const {$/;"	f	struct:internal::DiyFp
operator *=	include/rapidjson/internal/biginteger.h	/^    BigInteger& operator*=(uint32_t u) {$/;"	f	class:internal::BigInteger
operator *=	include/rapidjson/internal/biginteger.h	/^    BigInteger& operator*=(uint64_t u) {$/;"	f	class:internal::BigInteger
operator +	include/rapidjson/document.h	/^    Iterator operator+(DifferenceType n) const { return Iterator(ptr_+n); }$/;"	f	class:GenericMemberIterator
operator ++	include/rapidjson/document.h	/^    Iterator  operator++(int){ Iterator old(*this); ++ptr_; return old; }$/;"	f	class:GenericMemberIterator
operator ++	include/rapidjson/document.h	/^    Iterator& operator++(){ ++ptr_; return *this; }$/;"	f	class:GenericMemberIterator
operator +=	include/rapidjson/document.h	/^    Iterator& operator+=(DifferenceType n) { ptr_+=n; return *this; }$/;"	f	class:GenericMemberIterator
operator +=	include/rapidjson/internal/biginteger.h	/^    BigInteger& operator+=(uint64_t u) {$/;"	f	class:internal::BigInteger
operator -	include/rapidjson/document.h	/^    DifferenceType operator-(ConstIterator that) const { return ptr_-that.ptr_; }$/;"	f	class:GenericMemberIterator
operator -	include/rapidjson/document.h	/^    Iterator operator-(DifferenceType n) const { return Iterator(ptr_-n); }$/;"	f	class:GenericMemberIterator
operator -	include/rapidjson/internal/diyfp.h	/^    DiyFp operator-(const DiyFp& rhs) const {$/;"	f	struct:internal::DiyFp
operator --	include/rapidjson/document.h	/^    Iterator  operator--(int){ Iterator old(*this); --ptr_; return old; }$/;"	f	class:GenericMemberIterator
operator --	include/rapidjson/document.h	/^    Iterator& operator--(){ --ptr_; return *this; }$/;"	f	class:GenericMemberIterator
operator -=	include/rapidjson/document.h	/^    Iterator& operator-=(DifferenceType n) { ptr_-=n; return *this; }$/;"	f	class:GenericMemberIterator
operator ->	include/rapidjson/document.h	/^    Pointer   operator->() const { return ptr_; }$/;"	f	class:GenericMemberIterator
operator <	include/rapidjson/document.h	/^    bool operator< (ConstIterator that) const { return ptr_ < that.ptr_; }$/;"	f	class:GenericMemberIterator
operator <<=	include/rapidjson/internal/biginteger.h	/^    BigInteger& operator<<=(size_t shift) {$/;"	f	class:internal::BigInteger
operator <=	include/rapidjson/document.h	/^    bool operator<=(ConstIterator that) const { return ptr_ <= that.ptr_; }$/;"	f	class:GenericMemberIterator
operator =	include/rapidjson/document.h	/^    GenericArray& operator=(const GenericArray& rhs) { value_ = rhs.value_; return *this; }$/;"	f	class:GenericArray
operator =	include/rapidjson/document.h	/^    GenericObject& operator=(const GenericObject& rhs) { value_ = rhs.value_; return *this; }$/;"	f	class:GenericObject
operator =	include/rapidjson/document.h	/^    Iterator& operator=(const NonConstIterator & it) { ptr_ = it.ptr_; return *this; }$/;"	f	class:GenericMemberIterator
operator =	include/rapidjson/document.h	/^    operator=(T value) {$/;"	f	class:GenericValue
operator =	include/rapidjson/internal/biginteger.h	/^    BigInteger& operator=(const BigInteger &rhs)$/;"	f	class:internal::BigInteger
operator =	include/rapidjson/internal/biginteger.h	/^    BigInteger& operator=(uint64_t u) {$/;"	f	class:internal::BigInteger
operator =	include/rapidjson/internal/stack.h	/^    Stack& operator=(Stack&& rhs) {$/;"	f	class:internal::Stack
operator =	include/rapidjson/pointer.h	/^    GenericPointer& operator=(const GenericPointer& rhs) {$/;"	f	class:GenericPointer
operator =	include/rapidjson/stringbuffer.h	/^    GenericStringBuffer& operator=(GenericStringBuffer&& rhs) {$/;"	f	class:GenericStringBuffer
operator ==	include/rapidjson/document.h	/^    bool operator==(ConstIterator that) const { return ptr_ == that.ptr_; }$/;"	f	class:GenericMemberIterator
operator ==	include/rapidjson/document.h	/^    bool operator==(const Ch* rhs) const { return *this == GenericValue(StringRef(rhs)); }$/;"	f	class:GenericValue
operator ==	include/rapidjson/document.h	/^    bool operator==(const GenericValue<Encoding, SourceAllocator>& rhs) const {$/;"	f	class:GenericValue
operator ==	include/rapidjson/document.h	/^    bool operator==(const std::basic_string<Ch>& rhs) const { return *this == GenericValue(StringRef(rhs)); }$/;"	f	class:GenericValue
operator ==	include/rapidjson/document.h	/^    template <typename T> RAPIDJSON_DISABLEIF_RETURN((internal::OrExpr<internal::IsPointer<T>,internal::IsGenericValue<T> >), (bool)) operator==(const T& rhs) const { return *this == GenericValue(rhs); }$/;"	f	class:GenericValue
operator ==	include/rapidjson/document.h	/^    template <typename T> friend RAPIDJSON_DISABLEIF_RETURN((internal::IsGenericValue<T>), (bool)) operator==(const T& lhs, const GenericValue& rhs) { return rhs == lhs; }$/;"	f	class:GenericValue
operator ==	include/rapidjson/error/error.h	/^    bool operator==(ParseErrorCode code) const { return code_ == code; }$/;"	f	struct:ParseResult
operator ==	include/rapidjson/error/error.h	/^    bool operator==(const ParseResult& that) const { return code_ == that.code_; }$/;"	f	struct:ParseResult
operator ==	include/rapidjson/error/error.h	/^    friend bool operator==(ParseErrorCode code, const ParseResult & err) { return code == err.code_; }$/;"	f	struct:ParseResult
operator ==	include/rapidjson/internal/biginteger.h	/^    bool operator==(const BigInteger& rhs) const {$/;"	f	class:internal::BigInteger
operator ==	include/rapidjson/internal/biginteger.h	/^    bool operator==(const Type rhs) const {$/;"	f	class:internal::BigInteger
operator ==	include/rapidjson/pointer.h	/^    bool operator==(const GenericPointer& rhs) const {$/;"	f	class:GenericPointer
operator >	include/rapidjson/document.h	/^    bool operator> (ConstIterator that) const { return ptr_ > that.ptr_; }$/;"	f	class:GenericMemberIterator
operator >=	include/rapidjson/document.h	/^    bool operator>=(ConstIterator that) const { return ptr_ >= that.ptr_; }$/;"	f	class:GenericMemberIterator
operator BooleanType	include/rapidjson/error/error.h	/^    operator BooleanType() const { return !IsError() ? &ParseResult::IsError : NULL; }$/;"	f	struct:ParseResult
operator ParseResult	include/rapidjson/document.h	/^    operator ParseResult() const { return parseResult_; }$/;"	f	class:GenericDocument
operator []	include/rapidjson/document.h	/^    GenericValue& operator[](SizeType index) {$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    GenericValue& operator[](const GenericValue<Encoding, SourceAllocator>& name) {$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    GenericValue& operator[](const std::basic_string<Ch>& name) { return (*this)[GenericValue(StringRef(name))]; }$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    RAPIDJSON_DISABLEIF_RETURN((internal::NotExpr<internal::IsSame<typename internal::RemoveConst<T>::Type, Ch> >),(GenericValue&)) operator[](T* name) {$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    RAPIDJSON_DISABLEIF_RETURN((internal::NotExpr<internal::IsSame<typename internal::RemoveConst<T>::Type, Ch> >),(const GenericValue&)) operator[](T* name) const { return const_cast<GenericValue&>(*this)[name]; }$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    Reference operator[](DifferenceType n) const { return ptr_[n]; }$/;"	f	class:GenericMemberIterator
operator []	include/rapidjson/document.h	/^    ValueType& operator[](SizeType index) const {  return value_[index]; }$/;"	f	class:GenericArray
operator []	include/rapidjson/document.h	/^    ValueType& operator[](const std::basic_string<Ch>& name) const { return value_[name]; }$/;"	f	class:GenericObject
operator []	include/rapidjson/document.h	/^    const GenericValue& operator[](SizeType index) const { return const_cast<GenericValue&>(*this)[index]; }$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    const GenericValue& operator[](const GenericValue<Encoding, SourceAllocator>& name) const { return const_cast<GenericValue&>(*this)[name]; }$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    const GenericValue& operator[](const std::basic_string<Ch>& name) const { return (*this)[GenericValue(StringRef(name))]; }$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    template <typename SourceAllocator> ValueType& operator[](const GenericValue<EncodingType, SourceAllocator>& name) const { return value_[name]; }$/;"	f	class:GenericObject
operator []	include/rapidjson/document.h	/^    template <typename T> ValueType& operator[](T* name) const { return value_[name]; }$/;"	f	class:GenericObject
operator const Ch *	include/rapidjson/document.h	/^    operator const Ch *() const { return s; }$/;"	f	struct:GenericStringRef
option_index	include/libwebsockets/lws-ws-ext.h	/^	int option_index; \/**< argument ordinal to use if option_name missing *\/$/;"	m	struct:lws_ext_option_arg
option_name	include/libwebsockets/lws-ws-ext.h	/^	const char *option_name; \/**< may be NULL, option_index used then *\/$/;"	m	struct:lws_ext_option_arg
options	include/libwebsockets/lws-context-vhost.h	/^	const struct lws_protocol_vhost_options *options; \/**< child linked-list of more options for this node *\/$/;"	m	struct:lws_protocol_vhost_options	typeref:struct:lws_protocol_vhost_options::lws_protocol_vhost_options
options	include/libwebsockets/lws-context-vhost.h	/^	unsigned int options;$/;"	m	struct:lws_context_creation_info
options	minimal-ws-server-echo.c	/^int interrupted, port = 60000, options;$/;"	v
opts	include/libwebsockets/lws-esp32.h	/^	char opts[16];$/;"	m	struct:lws_esp32
origin	include/libwebsockets/lws-client.h	/^	const char *origin;$/;"	m	struct:lws_client_connect_info
origin	include/libwebsockets/lws-context-vhost.h	/^	const char *origin;$/;"	m	struct:lws_http_mount
origin_protocol	include/libwebsockets/lws-context-vhost.h	/^	unsigned char origin_protocol; \/**< one of enum lws_mount_protocols *\/$/;"	m	struct:lws_http_mount
original_	include/rapidjson/reader.h	/^    Stream& original_;$/;"	m	class:internal::StreamLocalCopy
os_	include/rapidjson/encodedstream.h	/^    OutputByteStream& os_;$/;"	m	class:EncodedOutputStream
os_	include/rapidjson/encodedstream.h	/^    OutputByteStream* os_;$/;"	m	class:AutoUTFOutputStream
os_	include/rapidjson/pointer.h	/^        OutputStream& os_;$/;"	m	class:GenericPointer::PercentEncodeStream
os_	include/rapidjson/writer.h	/^    OutputStream* os_;$/;"	m	class:Writer
out	include/rapidjson/internal/regex.h	/^        SizeType out;     \/\/!< Equals to kInvalid for matching state$/;"	m	struct:internal::GenericRegex::State
out	include/rapidjson/internal/regex.h	/^        SizeType out; \/\/!< link-list of all output states$/;"	m	struct:internal::GenericRegex::Frag
out1	include/rapidjson/internal/regex.h	/^        SizeType out1;    \/\/!< Equals to non-kInvalid for split$/;"	m	struct:internal::GenericRegex::State
outputHandler_	include/rapidjson/schema.h	/^    OutputHandler* outputHandler_;$/;"	m	class:GenericSchemaValidator
ownAllocator_	include/rapidjson/document.h	/^    Allocator* ownAllocator_;$/;"	m	class:GenericDocument
ownAllocator_	include/rapidjson/internal/regex.h	/^    Allocator* ownAllocator_;$/;"	m	class:internal::GenericRegexSearch
ownAllocator_	include/rapidjson/internal/stack.h	/^    Allocator* ownAllocator_;$/;"	m	class:internal::Stack
ownAllocator_	include/rapidjson/pointer.h	/^    Allocator* ownAllocator_;               \/\/!< Allocator owned by this Pointer.$/;"	m	class:GenericPointer
ownAllocator_	include/rapidjson/schema.h	/^    Allocator *ownAllocator_;$/;"	m	class:GenericSchemaDocument
ownBaseAllocator_	include/rapidjson/allocators.h	/^    BaseAllocator* ownBaseAllocator_;   \/\/!< base allocator created by this object.$/;"	m	class:MemoryPoolAllocator
ownStateAllocator_	include/rapidjson/schema.h	/^    StateAllocator* ownStateAllocator_;$/;"	m	class:GenericSchemaValidator
owned	include/rapidjson/schema.h	/^        bool owned;$/;"	m	struct:GenericSchemaDocument::SchemaEntry
p	include/libwebsockets/lws-http.h	/^	char *p; \/**< pointer to the buffer containing the data *\/$/;"	m	struct:lws_process_html_args
p	include/libwebsockets/lws-lejp.h	/^	char p;	\/* path length *\/$/;"	m	struct:_lejp_stack
padding	include/rapidjson/document.h	/^            char padding[4];$/;"	m	struct:GenericValue::Number::I
padding2	include/rapidjson/document.h	/^            char padding2[4];$/;"	m	struct:GenericValue::Number::U
parent_wsi	include/libwebsockets/lws-client.h	/^	struct lws *parent_wsi;$/;"	m	struct:lws_client_connect_info	typeref:struct:lws_client_connect_info::lws
parseErrorCode_	include/rapidjson/pointer.h	/^    PointerParseErrorCode parseErrorCode_;  \/\/!< Parsing error code.$/;"	m	class:GenericPointer
parseErrorOffset_	include/rapidjson/pointer.h	/^    size_t parseErrorOffset_;               \/\/!< Offset in code unit when parsing fail.$/;"	m	class:GenericPointer
parseResult_	include/rapidjson/document.h	/^          parseResult_(rhs.parseResult_)$/;"	f	class:GenericDocument
parseResult_	include/rapidjson/document.h	/^    ParseResult parseResult_;$/;"	m	class:GenericDocument
parseResult_	include/rapidjson/reader.h	/^    ParseResult parseResult_;$/;"	m	class:GenericReader
parseResult_	include/rapidjson/schema.h	/^    ParseResult parseResult_;$/;"	m	class:SchemaValidatingReader
password	include/libwebsockets/lws-esp32.h	/^	char password[4][64];$/;"	m	struct:lws_esp32
path	include/libwebsockets/lws-client.h	/^	const char *path;$/;"	m	struct:lws_client_connect_info
path	include/libwebsockets/lws-lejp.h	/^	char path[LEJP_MAX_PATH];$/;"	m	struct:lejp_ctx
path_match	include/libwebsockets/lws-lejp.h	/^	uint8_t path_match;$/;"	m	struct:lejp_ctx
path_match_len	include/libwebsockets/lws-lejp.h	/^	uint8_t path_match_len;$/;"	m	struct:lejp_ctx
paths	include/libwebsockets/lws-lejp.h	/^	const char * const *paths;$/;"	m	struct:lejp_ctx
pattern	include/rapidjson/schema.h	/^        RegexType* pattern;$/;"	m	struct:internal::Schema::PatternProperty
patternPropertiesSchemaCount	include/rapidjson/schema.h	/^    SizeType patternPropertiesSchemaCount;$/;"	m	struct:internal::SchemaValidationContext
patternPropertiesSchemas	include/rapidjson/schema.h	/^    const SchemaType** patternPropertiesSchemas;$/;"	m	struct:internal::SchemaValidationContext
patternPropertiesValidatorCount	include/rapidjson/schema.h	/^    SizeType patternPropertiesValidatorCount;$/;"	m	struct:internal::SchemaValidationContext
patternPropertiesValidators	include/rapidjson/schema.h	/^    ISchemaValidator** patternPropertiesValidators;$/;"	m	struct:internal::SchemaValidationContext
patternProperties_	include/rapidjson/schema.h	/^    PatternProperty* patternProperties_;$/;"	m	class:internal::Schema
patternPropertyCount_	include/rapidjson/schema.h	/^    SizeType patternPropertyCount_;$/;"	m	class:internal::Schema
pattern_	include/rapidjson/schema.h	/^    RegexType* pattern_;$/;"	m	class:internal::Schema
payload	include/rapidjson/document.h	/^        char payload[sizeof(SizeType) * 2 + 6];     \/\/ 2 x SizeType + lower 48-bit pointer$/;"	m	struct:GenericValue::Flag
payload	junk/protocol_lws_minimal.c	/^	void *payload; \/* is malloc'd *\/$/;"	m	struct:msg	file:
pcontext	include/libwebsockets/lws-context-vhost.h	/^	struct lws_context **pcontext;$/;"	m	struct:lws_context_creation_info	typeref:struct:lws_context_creation_info::lws_context
peekBuffer_	include/rapidjson/istreamwrapper.h	/^    mutable Ch peekBuffer_[4];$/;"	m	class:BasicIStreamWrapper
pending_timeout	include/libwebsockets/lws-timeout-timer.h	/^enum pending_timeout {$/;"	g
per_session_data__minimal	junk/protocol_lws_minimal.c	/^struct per_session_data__minimal {$/;"	s	file:
per_session_data_size	include/libwebsockets/lws-protocols-plugins.h	/^	size_t per_session_data_size;$/;"	m	struct:lws_protocols
per_vhost_data__minimal	junk/protocol_lws_minimal.c	/^struct per_vhost_data__minimal {$/;"	s	file:
plugin_dirs	include/libwebsockets/lws-context-vhost.h	/^	const char * const *plugin_dirs;$/;"	m	struct:lws_context_creation_info
pointer	include/rapidjson/document.h	/^    typedef ValueType *    pointer;$/;"	t	class:GenericMemberIterator
pointer	include/rapidjson/schema.h	/^        PointerType pointer;$/;"	m	struct:GenericSchemaDocument::SchemaEntry
pointer_	include/rapidjson/schema.h	/^    PointerType pointer_;$/;"	m	class:internal::Schema
pollfd	include/libwebsockets/lws-esp32.h	/^struct pollfd {$/;"	s
port	include/libwebsockets/lws-client.h	/^	int port;$/;"	m	struct:lws_client_connect_info
port	include/libwebsockets/lws-context-vhost.h	/^	int port;$/;"	m	struct:lws_context_creation_info
port	minimal-ws-server-echo.c	/^int interrupted, port = 60000, options;$/;"	v
pos	include/libwebsockets/lws-http.h	/^	int pos; \/**< position in match *\/$/;"	m	struct:lws_process_html_state
pos	include/libwebsockets/lws-vfs.h	/^	lws_filepos_t			pos;$/;"	m	struct:lws_fop_fd
position	include/jansson.h	/^    int position;$/;"	m	struct:json_error_t
ppos	include/libwebsockets/lws-lejp.h	/^	uint8_t ppos;$/;"	m	struct:lejp_ctx
prev	include/libwebsockets/lws-misc.h	/^	struct lws_dll *prev;$/;"	m	struct:lws_dll	typeref:struct:lws_dll::lws_dll
prev	include/libwebsockets/lws-misc.h	/^	struct lws_dll_lws *prev;$/;"	m	struct:lws_dll_lws	typeref:struct:lws_dll_lws::lws_dll_lws
prev_events	include/libwebsockets.h	/^	int prev_events;	\/**< the previous event mask *\/$/;"	m	struct:lws_pollargs
print_id	bar.cpp	/^void print_id (int id) {$/;"	f
print_id	test.cpp	/^void print_id (int id) {$/;"	f
properties_	include/rapidjson/schema.h	/^    Property* properties_;$/;"	m	class:internal::Schema
propertyCount_	include/rapidjson/schema.h	/^    SizeType propertyCount_;$/;"	m	class:internal::Schema
propertyExist	include/rapidjson/schema.h	/^    bool* propertyExist;$/;"	m	struct:internal::SchemaValidationContext
protocol	include/libwebsockets/lws-client.h	/^	const char *protocol;$/;"	m	struct:lws_client_connect_info
protocol	include/libwebsockets/lws-context-vhost.h	/^	const char *protocol;$/;"	m	struct:lws_http_mount
protocol	junk/protocol_lws_minimal.c	/^	const struct lws_protocols *protocol;$/;"	m	struct:per_vhost_data__minimal	typeref:struct:per_vhost_data__minimal::lws_protocols	file:
protocols	include/libwebsockets/lws-context-vhost.h	/^	const struct lws_protocols *protocols;$/;"	m	struct:lws_context_creation_info	typeref:struct:lws_context_creation_info::lws_protocols
protocols	include/libwebsockets/lws-protocols-plugins.h	/^	const struct lws_protocols *protocols; \/**< array of supported protocols provided by plugin *\/$/;"	m	struct:lws_plugin_capability	typeref:struct:lws_plugin_capability::lws_protocols
protocols	junk/minimal-ws-server.c	/^static struct lws_protocols protocols[] = {$/;"	v	typeref:struct:lws_protocols	file:
protocols	junk/protocol_lws_minimal.c	/^static const struct lws_protocols protocols[] = {$/;"	v	typeref:struct:lws_protocols	file:
protocols	minimal-ws-server-echo.c	/^static struct lws_protocols protocols[] = {$/;"	v	typeref:struct:lws_protocols	file:
protocols	test_main.cpp	/^static struct lws_protocols protocols[] = {$/;"	v	typeref:struct:lws_protocols	file:
provided_client_ssl_ctx	include/libwebsockets/lws-context-vhost.h	/^	SSL_CTX *provided_client_ssl_ctx;$/;"	m	struct:lws_context_creation_info
provided_client_ssl_ctx	include/libwebsockets/lws-context-vhost.h	/^	void *provided_client_ssl_ctx; \/**< dummy if ssl disabled *\/$/;"	m	struct:lws_context_creation_info
pss_list	junk/protocol_lws_minimal.c	/^	struct per_session_data__minimal *pss_list; \/* linked-list of live pss*\/$/;"	m	struct:per_vhost_data__minimal	typeref:struct:per_vhost_data__minimal::per_session_data__minimal	file:
pss_list	junk/protocol_lws_minimal.c	/^	struct per_session_data__minimal *pss_list;$/;"	m	struct:per_session_data__minimal	typeref:struct:per_session_data__minimal::per_session_data__minimal	file:
pt_serv_buf_size	include/libwebsockets/lws-context-vhost.h	/^	unsigned int pt_serv_buf_size;$/;"	m	struct:lws_context_creation_info
ptr_	include/rapidjson/document.h	/^    Pointer ptr_; \/\/!< raw pointer$/;"	m	class:GenericMemberIterator
push_to_idle_worker	handle_message.cpp	/^void push_to_idle_worker(ws_client_t * ws_client){$/;"	f
putFunc_	include/rapidjson/encodedstream.h	/^    PutFunc putFunc_;$/;"	m	class:AutoUTFOutputStream
pvo	include/libwebsockets/lws-context-vhost.h	/^	const struct lws_protocol_vhost_options *pvo;$/;"	m	struct:lws_context_creation_info	typeref:struct:lws_context_creation_info::lws_protocol_vhost_options
pwsi	include/libwebsockets/lws-client.h	/^	struct lws **pwsi;$/;"	m	struct:lws_client_connect_info	typeref:struct:lws_client_connect_info::lws
quot	include/rapidjson/msinttypes/inttypes.h	/^   intmax_t quot;$/;"	m	struct:__anon13
r_	include/rapidjson/reader.h	/^        GenericReader& r_;$/;"	m	struct:GenericReader::ClearStackOnExit
random	include/libwebsockets.h	175;"	d
rangeCount_	include/rapidjson/internal/regex.h	/^    SizeType rangeCount_;$/;"	m	class:internal::GenericRegex
rangeStart	include/rapidjson/internal/regex.h	/^        SizeType rangeStart;$/;"	m	struct:internal::GenericRegex::State
ranges_	include/rapidjson/internal/regex.h	/^    Stack<Allocator> ranges_;$/;"	m	class:internal::GenericRegex
readCount_	include/rapidjson/filereadstream.h	/^    size_t readCount_;$/;"	m	class:FileReadStream
ready	bar.cpp	/^bool ready = false;$/;"	v
ready	test.cpp	/^bool ready = false;$/;"	v
refcount	include/jansson.h	/^    volatile size_t refcount;$/;"	m	struct:json_t
reference	include/rapidjson/document.h	/^    typedef ValueType &    reference;$/;"	t	class:GenericMemberIterator
regex_	include/rapidjson/internal/regex.h	/^    const RegexType& regex_;$/;"	m	class:internal::GenericRegexSearch
region	include/libwebsockets/lws-esp32.h	/^       	char region;$/;"	m	struct:lws_esp32
reject_service_keywords	include/libwebsockets/lws-context-vhost.h	/^	const struct lws_protocol_vhost_options *reject_service_keywords;$/;"	m	struct:lws_context_creation_info	typeref:struct:lws_context_creation_info::lws_protocol_vhost_options
rem	include/rapidjson/msinttypes/inttypes.h	/^   intmax_t rem;$/;"	m	struct:__anon13
remoteProvider_	include/rapidjson/schema.h	/^    IRemoteSchemaDocumentProviderType* remoteProvider_;$/;"	m	class:GenericSchemaDocument
replace	include/libwebsockets/lws-http.h	/^	lws_process_html_state_cb replace; \/**< called on match to perform substitution *\/$/;"	m	struct:lws_process_html_state
required	include/rapidjson/schema.h	/^        bool required;$/;"	m	struct:internal::Schema::Property
ret	include/libwebsockets/lws-callbacks.h	/^	int ret;$/;"	m	struct:lws_ssl_info
revents	include/libwebsockets.h	/^	SHORT revents; \/**< which events happened *\/$/;"	m	struct:lws_pollfd
revents	include/libwebsockets/lws-esp32.h	/^	short revents; \/**< which POLL... events occurred *\/$/;"	m	struct:pollfd
role	include/libwebsockets/lws-esp32.h	/^	char role[16];$/;"	m	struct:lws_esp32
role	include/libwebsockets/lws-esp32.h	/^	char role[16];$/;"	m	struct:lws_group_member
romfs	include/libwebsockets/lws-esp32.h	/^	uint32_t romfs;$/;"	m	struct:lws_esp32_image
romfs_len	include/libwebsockets/lws-esp32.h	/^	uint32_t romfs_len;$/;"	m	struct:lws_esp32_image
root_	include/rapidjson/internal/regex.h	/^    SizeType root_;$/;"	m	class:internal::GenericRegex
root_	include/rapidjson/schema.h	/^    const SchemaType& root_;$/;"	m	class:GenericSchemaValidator
root_	include/rapidjson/schema.h	/^    const SchemaType* root_;                \/\/!< Root schema.$/;"	m	class:GenericSchemaDocument
rssi	include/libwebsockets/lws-misc.h	/^	int32_t rssi; \/* divide by .count to get db *\/$/;"	m	struct:lws_wifi_scan
rx_buffer_size	include/libwebsockets/lws-protocols-plugins.h	/^	size_t rx_buffer_size;$/;"	m	struct:lws_protocols
s	include/libwebsockets/lws-lejp.h	/^	char s; \/* lejp_state stack*\/$/;"	m	struct:_lejp_stack
s	include/rapidjson/document.h	/^        String s;$/;"	m	union:GenericValue::Data
s	include/rapidjson/document.h	/^    const Ch* const s; \/\/!< plain CharType pointer$/;"	m	struct:GenericStringRef
s	include/rapidjson/reader.h	/^    Stream s;$/;"	m	class:internal::StreamLocalCopy
s	include/rapidjson/reader.h	/^    Stream& s;$/;"	m	class:internal::StreamLocalCopy
sa	include/libwebsockets/lws-adopt.h	/^	struct sockaddr sa;$/;"	m	struct:lws_udp	typeref:struct:lws_udp::sockaddr
sa_pending	include/libwebsockets/lws-adopt.h	/^	struct sockaddr sa_pending;$/;"	m	struct:lws_udp	typeref:struct:lws_udp::sockaddr
salen	include/libwebsockets/lws-adopt.h	/^	socklen_t salen;$/;"	m	struct:lws_udp
salen_pending	include/libwebsockets/lws-adopt.h	/^	socklen_t salen_pending;$/;"	m	struct:lws_udp
scan_consumer	include/libwebsockets/lws-esp32.h	/^	lws_cb_scan_done scan_consumer;$/;"	m	struct:lws_esp32
scan_consumer_arg	include/libwebsockets/lws-esp32.h	/^	void *scan_consumer_arg;$/;"	m	struct:lws_esp32
schema	include/rapidjson/schema.h	/^        SchemaType* schema;$/;"	m	struct:GenericSchemaDocument::SchemaEntry
schema	include/rapidjson/schema.h	/^        const SchemaType* schema;$/;"	m	struct:internal::Schema::PatternProperty
schema	include/rapidjson/schema.h	/^        const SchemaType* schema;$/;"	m	struct:internal::Schema::Property
schema	include/rapidjson/schema.h	/^        const SchemaType** schema;$/;"	m	struct:GenericSchemaDocument::SchemaRefEntry
schema	include/rapidjson/schema.h	/^    const SchemaType* schema;$/;"	m	struct:internal::SchemaValidationContext
schemaDocument_	include/rapidjson/schema.h	/^    const SchemaDocumentType* schemaDocument_;$/;"	m	class:GenericSchemaValidator
schemaMap_	include/rapidjson/schema.h	/^    internal::Stack<Allocator> schemaMap_;  \/\/ Stores created Pointer -> Schemas$/;"	m	class:GenericSchemaDocument
schemaRef_	include/rapidjson/schema.h	/^    internal::Stack<Allocator> schemaRef_;  \/\/ Stores Pointer from $ref and schema which holds the $ref$/;"	m	class:GenericSchemaDocument
schemaStack_	include/rapidjson/schema.h	/^    internal::Stack<StateAllocator> schemaStack_;    \/\/!< stack to store the current path of schema (BaseSchemaType *)$/;"	m	class:GenericSchemaValidator
schemas	include/rapidjson/schema.h	/^        const SchemaType** schemas;$/;"	m	struct:internal::Schema::SchemaArray
sd_	include/rapidjson/schema.h	/^    const SchemaDocumentType& sd_;$/;"	m	class:SchemaValidatingReader
serial	include/libwebsockets/lws-esp32.h	/^	char serial[16];$/;"	m	struct:lws_esp32
server_string	include/libwebsockets/lws-context-vhost.h	/^	const char *server_string;$/;"	m	struct:lws_context_creation_info
session	include/libwebsockets/lws-plugin-generic-sessions.h	/^	char session[42]; \/**< session id string, usable as opaque uid when not logged in *\/$/;"	m	struct:lws_session_info
sha1	include/libwebsockets/lws-genhash.h	/^		mbedtls_sha1_context sha1;$/;"	m	union:lws_genhash_ctx::__anon10
sha256	include/libwebsockets/lws-genhash.h	/^		mbedtls_sha256_context sha256;$/;"	m	union:lws_genhash_ctx::__anon10
sha512	include/libwebsockets/lws-genhash.h	/^		mbedtls_sha512_context sha512; \/* 384 also uses this *\/$/;"	m	union:lws_genhash_ctx::__anon10
sig	include/libwebsockets/lws-vfs.h	/^	const char *sig;	\/* NULL or vfs signature, eg, ".zip\/" *\/$/;"	m	struct:lws_fops_index
sigint_handler	junk/minimal-ws-server.c	/^void sigint_handler(int sig)$/;"	f
sigint_handler	minimal-ws-server-echo.c	/^void sigint_handler(int sig)$/;"	f
sigint_handler	test_main.cpp	/^void sigint_handler(int sig)$/;"	f
signal_cb	include/libwebsockets/lws-context-vhost.h	/^	void (*signal_cb)(void *event_lib_handle, int signum);$/;"	m	struct:lws_context_creation_info
simultaneous_ssl_restriction	include/libwebsockets/lws-context-vhost.h	/^	int simultaneous_ssl_restriction;$/;"	m	struct:lws_context_creation_info
size	include/rapidjson/allocators.h	/^        size_t size;        \/\/!< Current size of allocated memory in bytes.$/;"	m	struct:MemoryPoolAllocator::ChunkHeader
size	include/rapidjson/document.h	/^        SizeType size;$/;"	m	struct:GenericValue::ArrayData
size	include/rapidjson/document.h	/^        SizeType size;$/;"	m	struct:GenericValue::ObjectData
size_	include/rapidjson/memorystream.h	/^    size_t size_;       \/\/!< Size of the stream.$/;"	m	struct:MemoryStream
sizeof	include/rapidjson/document.h	/^RAPIDJSON_STATIC_ASSERT(sizeof(long) == sizeof(int));$/;"	m	namespace:internal
sizeof	include/rapidjson/document.h	/^RAPIDJSON_STATIC_ASSERT(sizeof(unsigned long) == sizeof(unsigned));$/;"	m	namespace:internal
sockfd	include/libwebsockets/lws-adopt.h	/^	lws_sockfd_type sockfd;$/;"	m	union:__anon8
socks_proxy_address	include/libwebsockets/lws-context-vhost.h	/^	const char *socks_proxy_address;$/;"	m	struct:lws_context_creation_info
socks_proxy_port	include/libwebsockets/lws-context-vhost.h	/^	unsigned int socks_proxy_port;$/;"	m	struct:lws_context_creation_info
source	include/jansson.h	/^    char source[JSON_ERROR_SOURCE_LENGTH];$/;"	m	struct:json_error_t
source	include/rapidjson/schema.h	/^        PointerType source;$/;"	m	struct:GenericSchemaDocument::SchemaRefEntry
sp	include/libwebsockets/lws-lejp.h	/^	uint8_t sp; \/* stack head *\/$/;"	m	struct:lejp_ctx
src_	include/rapidjson/memorystream.h	/^    const Ch* src_;     \/\/!< Current read position.$/;"	m	struct:MemoryStream
src_	include/rapidjson/pointer.h	/^        const Ch* src_;     \/\/!< Current read position.$/;"	m	class:GenericPointer::PercentDecodeStream
src_	include/rapidjson/stream.h	/^    Ch* src_;$/;"	m	struct:GenericInsituStringStream
src_	include/rapidjson/stream.h	/^    const Ch* src_;     \/\/!< Current read position.$/;"	m	struct:GenericStringStream
ss	include/rapidjson/document.h	/^        ShortString ss;$/;"	m	union:GenericValue::Data
ss_	include/rapidjson/internal/regex.h	/^    SourceStream& ss_;$/;"	m	class:internal::DecodedStream
ss_binary	include/eval_types.h	/^	char ss_binary[40*BUFSIZ];$/;"	m	struct:_engine_t
ss_binary_len	include/eval_types.h	/^	int  ss_binary_len;$/;"	m	struct:_engine_t
ss_rsp	include/eval_types.h	/^	char ss_rsp[20*BUFSIZ];$/;"	m	struct:_engine_t
ss_start	include/eval_types.h	/^	char ss_start[BUFSIZ];$/;"	m	struct:_engine_t
ss_stop	include/eval_types.h	/^	char ss_stop[BUFSIZ];$/;"	m	struct:_engine_t
ssid	include/libwebsockets/lws-esp32.h	/^	char ssid[4][64];$/;"	m	struct:lws_esp32
ssid	include/libwebsockets/lws-misc.h	/^	char ssid[32];$/;"	m	struct:lws_wifi_scan
ssize_t	include/libwebsockets.h	343;"	d
ssl_ca_filepath	include/libwebsockets/lws-context-vhost.h	/^	const char *ssl_ca_filepath;$/;"	m	struct:lws_context_creation_info
ssl_cert_filepath	include/libwebsockets/lws-context-vhost.h	/^	const char *ssl_cert_filepath;$/;"	m	struct:lws_context_creation_info
ssl_cipher_list	include/libwebsockets/lws-context-vhost.h	/^	const char *ssl_cipher_list;$/;"	m	struct:lws_context_creation_info
ssl_connection	include/libwebsockets/lws-client.h	/^	int ssl_connection;$/;"	m	struct:lws_client_connect_info
ssl_info_event_mask	include/libwebsockets/lws-context-vhost.h	/^	int ssl_info_event_mask;$/;"	m	struct:lws_context_creation_info
ssl_options_clear	include/libwebsockets/lws-context-vhost.h	/^	long ssl_options_clear;$/;"	m	struct:lws_context_creation_info
ssl_options_set	include/libwebsockets/lws-context-vhost.h	/^	long ssl_options_set;$/;"	m	struct:lws_context_creation_info
ssl_private_key_filepath	include/libwebsockets/lws-context-vhost.h	/^	const char *ssl_private_key_filepath;$/;"	m	struct:lws_context_creation_info
ssl_private_key_password	include/libwebsockets/lws-context-vhost.h	/^	const char *ssl_private_key_password;$/;"	m	struct:lws_context_creation_info
ssound_callback	include/ssound.h	/^	typedef int (SSOUND_CALL *ssound_callback)(const void *usrdata, const char *id, int type, const void *message, int size);$/;"	t
ssound_cb	handle_message.cpp	/^ssound_cb(const void *usrdata,              const char *id, int type,               const void *message, int size)$/;"	f
ssound_cb	ssound_main.cpp	/^ssound_cb(const void *usrdata,              const char *id, int type,               const void *message, int size)$/;"	f
st	include/libwebsockets/lws-lejp.h	/^	struct _lejp_stack st[LEJP_MAX_DEPTH];$/;"	m	struct:lejp_ctx	typeref:struct:lejp_ctx::_lejp_stack
sta_gw	include/libwebsockets/lws-esp32.h	/^	char sta_gw[16];$/;"	m	struct:lws_esp32
sta_ip	include/libwebsockets/lws-esp32.h	/^	char sta_ip[16];$/;"	m	struct:lws_esp32
sta_mask	include/libwebsockets/lws-esp32.h	/^	char sta_mask[16];$/;"	m	struct:lws_esp32
stackEnd_	include/rapidjson/internal/stack.h	/^    char *stackEnd_;$/;"	m	class:internal::Stack
stackStream	include/rapidjson/reader.h	/^        StackStream<char> stackStream;$/;"	m	class:GenericReader::NumberStream
stackTop_	include/rapidjson/internal/stack.h	/^    char *stackTop_;$/;"	m	class:internal::Stack
stack_	include/rapidjson/document.h	/^    internal::Stack<StackAllocator> stack_;$/;"	m	class:GenericDocument
stack_	include/rapidjson/internal/stack.h	/^    char *stack_;$/;"	m	class:internal::Stack
stack_	include/rapidjson/memorybuffer.h	/^    mutable internal::Stack<Allocator> stack_;$/;"	m	struct:GenericMemoryBuffer
stack_	include/rapidjson/reader.h	/^        internal::Stack<StackAllocator>& stack_;$/;"	m	class:GenericReader::StackStream
stack_	include/rapidjson/reader.h	/^    internal::Stack<StackAllocator> stack_;  \/\/!< A stack for storing decoded string temporarily during non-destructive parsing.$/;"	m	class:GenericReader
stack_	include/rapidjson/schema.h	/^    Stack<Allocator> stack_;$/;"	m	class:internal::Hasher
stack_	include/rapidjson/stringbuffer.h	/^    mutable internal::Stack<Allocator> stack_;$/;"	m	class:GenericStringBuffer
start	include/libwebsockets/lws-http.h	/^	char *start; \/**< pointer to start of match *\/$/;"	m	struct:lws_process_html_state
start	include/libwebsockets/lws-ws-ext.h	/^	const char *start; \/**< value *\/$/;"	m	struct:lws_ext_option_arg
start	include/rapidjson/internal/regex.h	/^        SizeType start;$/;"	m	struct:internal::GenericRegex::Frag
start	include/rapidjson/internal/regex.h	/^        unsigned start; \/\/ $/;"	m	struct:internal::GenericRegex::Range
start_engine_threads	handle_message.cpp	/^void start_engine_threads(){$/;"	f
start_params	handle_message.cpp	/^const char * start_params = "\\$/;"	v
state	include/eval_types.h	/^	int state;$/;"	m	struct:_engine_t
state0_	include/rapidjson/internal/regex.h	/^    Stack<Allocator> state0_;$/;"	m	class:internal::GenericRegexSearch
state1_	include/rapidjson/internal/regex.h	/^    Stack<Allocator> state1_;$/;"	m	class:internal::GenericRegexSearch
stateAllocator_	include/rapidjson/schema.h	/^    StateAllocator* stateAllocator_;$/;"	m	class:GenericSchemaValidator
stateCount_	include/rapidjson/internal/regex.h	/^    SizeType stateCount_;$/;"	m	class:internal::GenericRegex
stateSet_	include/rapidjson/internal/regex.h	/^    uint32_t* stateSet_;$/;"	m	class:internal::GenericRegexSearch
state_	include/rapidjson/reader.h	/^    IterativeParsingState state_;$/;"	m	class:GenericReader
states_	include/rapidjson/internal/regex.h	/^    Stack<Allocator> states_;$/;"	m	class:internal::GenericRegex
stdwsi	include/libwebsockets/lws-cgi.h	/^	struct lws **stdwsi; \/**< get fd with lws_get_socket_fd() *\/$/;"	m	struct:lws_cgi_args	typeref:struct:lws_cgi_args::lws
str	include/rapidjson/document.h	/^        Ch str[MaxChars];$/;"	m	struct:GenericValue::ShortString
str	include/rapidjson/document.h	/^        const Ch* str;$/;"	m	struct:GenericValue::String
stream_	include/rapidjson/istreamwrapper.h	/^    StreamType& stream_;$/;"	m	class:BasicIStreamWrapper
stream_	include/rapidjson/ostreamwrapper.h	/^    StreamType& stream_;$/;"	m	class:BasicOStreamWrapper
strtoimax	include/rapidjson/msinttypes/inttypes.h	307;"	d
strtoumax	include/rapidjson/msinttypes/inttypes.h	308;"	d
supportUnicode	include/rapidjson/encodings.h	/^    enum { supportUnicode = 0 };$/;"	e	enum:ASCII::__anon18
supportUnicode	include/rapidjson/encodings.h	/^    enum { supportUnicode = 1 };$/;"	e	enum:AutoUTF::__anon19
supportUnicode	include/rapidjson/encodings.h	/^    enum { supportUnicode = 1 };$/;"	e	enum:UTF16::__anon16
supportUnicode	include/rapidjson/encodings.h	/^    enum { supportUnicode = 1 };$/;"	e	enum:UTF32::__anon17
supportUnicode	include/rapidjson/encodings.h	/^    enum { supportUnicode = 1 };$/;"	e	enum:UTF8::__anon15
swallow	include/libwebsockets/lws-http.h	/^	char swallow[16]; \/**< matched character buffer *\/$/;"	m	struct:lws_process_html_state
t	include/eval_types.h	/^	std::thread t;$/;"	m	struct:_engine_t
t	include/libwebsockets/lws-esp32.h	/^	uv_timer_t *t;$/;"	m	struct:timer_mapping
takeFunc_	include/rapidjson/encodedstream.h	/^    TakeFunc takeFunc_;$/;"	m	class:AutoUTFInputStream
target	include/rapidjson/schema.h	/^        PointerType target;$/;"	m	struct:GenericSchemaDocument::SchemaRefEntry
task	include/libwebsockets/lws-threadpool.h	/^	enum lws_threadpool_task_return (*task)(void *user,$/;"	m	struct:lws_threadpool_task_args	typeref:enum:lws_threadpool_task_args::task
text	include/jansson.h	/^    char text[JSON_ERROR_TEXT_LENGTH];$/;"	m	struct:json_error_t
threads	include/libwebsockets/lws-threadpool.h	/^	int threads;$/;"	m	struct:lws_threadpool_create_args
time	include/libwebsockets/lws-x509.h	/^	time_t time;$/;"	m	union:lws_tls_cert_info_results
timeout_email	include/libwebsockets/lws-misc.h	/^	uv_timer_t timeout_email; \/**< private *\/$/;"	m	struct:lws_email
timeout_secs	include/libwebsockets/lws-context-vhost.h	/^	unsigned int timeout_secs;$/;"	m	struct:lws_context_creation_info
timeout_secs_ah_idle	include/libwebsockets/lws-context-vhost.h	/^	unsigned int timeout_secs_ah_idle;$/;"	m	struct:lws_context_creation_info
timer_mapping	include/libwebsockets/lws-esp32.h	/^struct timer_mapping {$/;"	s
token	include/libwebsockets/lws-http.h	/^	char *token; \/**< pointer to start of the token *\/$/;"	m	struct:lws_tokens
tokenCount_	include/rapidjson/pointer.h	/^    size_t tokenCount_;                     \/\/!< Number of tokens in tokens_.$/;"	m	class:GenericPointer
token_limit	include/libwebsockets/lws-http.h	/^	unsigned short token_limit[WSI_TOKEN_COUNT]; \/**< max chars for this token *\/$/;"	m	struct:lws_token_limits
token_limits	include/libwebsockets/lws-context-vhost.h	/^	const struct lws_token_limits *token_limits;$/;"	m	struct:lws_context_creation_info	typeref:struct:lws_context_creation_info::lws_token_limits
tokens_	include/rapidjson/pointer.h	/^    Token* tokens_;                         \/\/!< A list of tokens.$/;"	m	class:GenericPointer
tx_packet_size	include/libwebsockets/lws-protocols-plugins.h	/^	size_t tx_packet_size;$/;"	m	struct:lws_protocols
type	include/eval_types.h	/^	char type[256];$/;"	m	struct:_engine_t
type	include/eval_types.h	/^	int type;$/;"	m	struct:websockets_client
type	include/jansson.h	/^    json_type type;$/;"	m	struct:json_t
type	include/libwebsockets/lws-genhash.h	/^        uint8_t type;$/;"	m	struct:lws_genhash_ctx
type	include/libwebsockets/lws-genhash.h	/^        uint8_t type;$/;"	m	struct:lws_genhmac_ctx
type	include/libwebsockets/lws-ws-ext.h	/^	enum lws_ext_options_types type; \/**< What kind of args the option can take *\/$/;"	m	struct:lws_ext_options	typeref:enum:lws_ext_options::lws_ext_options_types
type_	include/rapidjson/encodedstream.h	/^    UTFType type_;$/;"	m	class:AutoUTFInputStream
type_	include/rapidjson/encodedstream.h	/^    UTFType type_;$/;"	m	class:AutoUTFOutputStream
type_	include/rapidjson/schema.h	/^    unsigned type_; \/\/ bitmask of kSchemaType$/;"	m	class:internal::Schema
typeless_	include/rapidjson/schema.h	/^    SchemaType* typeless_;$/;"	m	class:GenericSchemaDocument
typeless_	include/rapidjson/schema.h	/^    const SchemaType* typeless_;$/;"	m	class:internal::Schema
u	include/libwebsockets/lws-genhash.h	/^        } u;$/;"	m	struct:lws_genhash_ctx	typeref:union:lws_genhash_ctx::__anon10
u	include/rapidjson/document.h	/^            unsigned u;$/;"	m	struct:GenericValue::Number::U
u	include/rapidjson/document.h	/^        }u;$/;"	m	union:GenericValue::Number	typeref:struct:GenericValue::Number::U
u	include/rapidjson/schema.h	/^            uint64_t u;$/;"	m	union:internal::Hasher::Number::U
u	include/rapidjson/schema.h	/^        }u;$/;"	m	struct:internal::Hasher::Number	typeref:union:internal::Hasher::Number::U
u32toa	include/rapidjson/internal/itoa.h	/^inline char* u32toa(uint32_t value, char* buffer) {$/;"	f	namespace:internal
u64	include/rapidjson/document.h	/^        uint64_t u64;$/;"	m	union:GenericValue::Number
u64toa	include/rapidjson/internal/itoa.h	/^inline char* u64toa(uint64_t value, char* buffer) {$/;"	f	namespace:internal
u_	include/rapidjson/internal/ieee754.h	/^        uint64_t u_;$/;"	m	union:internal::Double::__anon25
uid	include/libwebsockets/lws-context-vhost.h	/^	int uid;$/;"	m	struct:lws_context_creation_info
uint16_t	include/libwebsockets.h	/^typedef unsigned __int16 uint16_t;$/;"	t
uint16_t	include/libwebsockets.h	/^typedef unsigned short uint16_t;$/;"	t
uint16_t	include/rapidjson/msinttypes/stdint.h	/^   typedef unsigned __int16  uint16_t;$/;"	t
uint16_t	include/rapidjson/msinttypes/stdint.h	/^   typedef unsigned short    uint16_t;$/;"	t
uint32_t	include/libwebsockets.h	/^typedef unsigned __int32 uint32_t;$/;"	t
uint32_t	include/libwebsockets.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	include/rapidjson/msinttypes/stdint.h	/^   typedef unsigned __int32  uint32_t;$/;"	t
uint32_t	include/rapidjson/msinttypes/stdint.h	/^   typedef unsigned int      uint32_t;$/;"	t
uint64_t	include/rapidjson/msinttypes/stdint.h	/^typedef unsigned __int64     uint64_t;$/;"	t
uint8_t	include/libwebsockets.h	/^typedef unsigned __int8 uint8_t;$/;"	t
uint8_t	include/libwebsockets.h	/^typedef unsigned char uint8_t;$/;"	t
uint8_t	include/rapidjson/msinttypes/stdint.h	/^   typedef unsigned __int8   uint8_t;$/;"	t
uint8_t	include/rapidjson/msinttypes/stdint.h	/^   typedef unsigned char     uint8_t;$/;"	t
uint_fast16_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint16_t  uint_fast16_t;$/;"	t
uint_fast32_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint32_t  uint_fast32_t;$/;"	t
uint_fast64_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint64_t  uint_fast64_t;$/;"	t
uint_fast8_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint8_t   uint_fast8_t;$/;"	t
uint_least16_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint16_t  uint_least16_t;$/;"	t
uint_least32_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint32_t  uint_least32_t;$/;"	t
uint_least64_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint64_t  uint_least64_t;$/;"	t
uint_least8_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint8_t   uint_least8_t;$/;"	t
uintmax_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint64_t  uintmax_t;$/;"	t
uintptr_t	include/rapidjson/msinttypes/stdint.h	/^   typedef _W64 unsigned int uintptr_t;$/;"	t
uintptr_t	include/rapidjson/msinttypes/stdint.h	/^   typedef unsigned __int64  uintptr_t;$/;"	t
uni	include/libwebsockets/lws-lejp.h	/^	uint16_t uni;$/;"	m	struct:lejp_ctx
uniqueItems_	include/rapidjson/schema.h	/^    bool uniqueItems_;$/;"	m	class:internal::Schema
upload	include/libwebsockets/lws-esp32.h	/^	char upload;$/;"	m	struct:lws_esp32
uri_	include/rapidjson/schema.h	/^    SValue uri_;$/;"	m	class:internal::Schema
uri_	include/rapidjson/schema.h	/^    URIType uri_;$/;"	m	class:GenericSchemaDocument
uri_replace_from	include/libwebsockets/lws-client.h	/^	const char *uri_replace_from;$/;"	m	struct:lws_client_connect_info
uri_replace_to	include/libwebsockets/lws-client.h	/^	const char *uri_replace_to;$/;"	m	struct:lws_client_connect_info
usage	include/libwebsockets/lws-x509.h	/^	unsigned int usage;$/;"	m	union:lws_tls_cert_info_results
user	include/libwebsockets/lws-context-vhost.h	/^	void *user;$/;"	m	struct:lws_context_creation_info
user	include/libwebsockets/lws-lejp.h	/^	void *user;$/;"	m	struct:lejp_ctx
user	include/libwebsockets/lws-protocols-plugins.h	/^	void *user; \/**< ignored by lws, but user code can pass a pointer$/;"	m	struct:lws_protocols
user	include/libwebsockets/lws-threadpool.h	/^	void *user;		\/**< user may set (user-private pointer) *\/$/;"	m	struct:lws_threadpool_task_args
userBuffer_	include/rapidjson/allocators.h	/^    void *userBuffer_;          \/\/!< User supplied buffer.$/;"	m	class:MemoryPoolAllocator
userdata	include/libwebsockets/lws-client.h	/^	void *userdata;$/;"	m	struct:lws_client_connect_info
username	include/libwebsockets/lws-plugin-generic-sessions.h	/^	char username[32]; \/**< username logged in as, or empty string *\/$/;"	m	struct:lws_session_info
username	include/libwebsockets/lws-plugin-generic-sessions.h	/^	const char *username; \/**< which username the event happened to *\/$/;"	m	struct:lws_gs_event_args
uv_cb_t	include/libwebsockets/lws-esp32.h	/^typedef void uv_cb_t(uv_timer_t *);$/;"	t
uv_close	include/libwebsockets/lws-esp32.h	/^static LWS_INLINE void uv_close(uv_handle_t *h, void *v)$/;"	f
uv_handle_t	include/libwebsockets/lws-esp32.h	/^typedef void * uv_handle_t;$/;"	t
uv_timer_init	include/libwebsockets/lws-esp32.h	/^static LWS_INLINE void uv_timer_init(void *l, uv_timer_t *t)$/;"	f
uv_timer_start	include/libwebsockets/lws-esp32.h	/^static LWS_INLINE void uv_timer_start(uv_timer_t *t, uv_cb_t *cb, int first, int rep)$/;"	f
uv_timer_stop	include/libwebsockets/lws-esp32.h	/^static LWS_INLINE void uv_timer_stop(uv_timer_t *t)$/;"	f
uv_timer_t	include/libwebsockets/lws-esp32.h	/^typedef TimerHandle_t uv_timer_t;$/;"	t
valid	include/eval_types.h	/^	int valid;$/;"	m	struct:_engine_t
valid	include/eval_types.h	/^	volatile int valid;$/;"	m	struct:websockets_client
valid_	include/rapidjson/pointer.h	/^        bool valid_;        \/\/!< Whether the parsing is valid.$/;"	m	class:GenericPointer::PercentDecodeStream
valid_	include/rapidjson/schema.h	/^    bool valid_;$/;"	m	class:GenericSchemaValidator
validatorCount	include/rapidjson/schema.h	/^    SizeType validatorCount;$/;"	m	struct:internal::SchemaValidationContext
validatorCount_	include/rapidjson/schema.h	/^    SizeType validatorCount_;$/;"	m	class:internal::Schema
validators	include/rapidjson/schema.h	/^    ISchemaValidator** validators;$/;"	m	struct:internal::SchemaValidationContext
value	include/libwebsockets/lws-context-vhost.h	/^	const char *value; \/**< value of name=value pair *\/$/;"	m	struct:lws_protocol_vhost_options
value	include/rapidjson/document.h	/^    GenericValue<Encoding, Allocator> value;    \/\/!< value of member.$/;"	m	struct:GenericMember
value	include/rapidjson/rapidjson.h	/^template <> struct STATIC_ASSERTION_FAILURE<true> { enum { value = 1 }; };$/;"	e	enum:STATIC_ASSERTION_FAILURE::__anon14
valueCount	include/rapidjson/writer.h	/^        size_t valueCount;  \/\/!< number of values in this level$/;"	m	struct:Writer::Level
valuePatternValidatorType	include/rapidjson/schema.h	/^    PatternValidatorType valuePatternValidatorType;$/;"	m	struct:internal::SchemaValidationContext
valueSchema	include/rapidjson/schema.h	/^    const SchemaType* valueSchema;$/;"	m	struct:internal::SchemaValidationContext
valueUniqueness	include/rapidjson/schema.h	/^    bool valueUniqueness;$/;"	m	struct:internal::SchemaValidationContext
value_	include/rapidjson/document.h	/^    ValueType& value_;$/;"	m	class:GenericArray
value_	include/rapidjson/document.h	/^    ValueType& value_;$/;"	m	class:GenericObject
value_type	include/rapidjson/document.h	/^    typedef ValueType      value_type;$/;"	t	class:GenericMemberIterator
vars	include/libwebsockets/lws-http.h	/^	const char * const *vars; \/**< list of variable names *\/$/;"	m	struct:lws_process_html_state
verified	include/libwebsockets/lws-x509.h	/^	unsigned int verified;$/;"	m	union:lws_tls_cert_info_results
vh	include/libwebsockets/lws-callbacks.h	/^	struct lws_vhost *vh;$/;"	m	struct:lws_acme_cert_aging_args	typeref:struct:lws_acme_cert_aging_args::lws_vhost
vhost	include/libwebsockets/lws-client.h	/^	struct lws_vhost *vhost;$/;"	m	struct:lws_client_connect_info	typeref:struct:lws_client_connect_info::lws_vhost
vhost	junk/protocol_lws_minimal.c	/^	struct lws_vhost *vhost;$/;"	m	struct:per_vhost_data__minimal	typeref:struct:per_vhost_data__minimal::lws_vhost	file:
vhost_name	include/libwebsockets/lws-context-vhost.h	/^	const char *vhost_name;$/;"	m	struct:lws_context_creation_info
wcstoimax	include/rapidjson/msinttypes/inttypes.h	311;"	d
wcstoumax	include/rapidjson/msinttypes/inttypes.h	312;"	d
websockets_client	include/eval_types.h	/^typedef struct websockets_client {$/;"	s
where	include/libwebsockets/lws-callbacks.h	/^	int where;$/;"	m	struct:lws_ssl_info
width	include/libwebsockets/lws-esp32.h	/^	int width, height;$/;"	m	struct:lws_group_member
wild	include/libwebsockets/lws-lejp.h	/^	uint16_t wild[LEJP_MAX_INDEX_DEPTH]; \/* index array *\/$/;"	m	struct:lejp_ctx
wildcount	include/libwebsockets/lws-lejp.h	/^	uint8_t wildcount;$/;"	m	struct:lejp_ctx
wp	include/libwebsockets/lws-write.h	/^	enum lws_write_protocol wp;$/;"	m	struct:lws_write_passthru	typeref:enum:lws_write_passthru::lws_write_protocol
ws_client	include/eval_types.h	/^	ws_client_t * ws_client;$/;"	m	struct:_engine_t
ws_client_t	include/eval_types.h	/^} ws_client_t;$/;"	t	typeref:struct:websockets_client
ws_ping_pong_interval	include/libwebsockets/lws-context-vhost.h	/^	unsigned short ws_ping_pong_interval;$/;"	m	struct:lws_context_creation_info
wsi	include/eval_types.h	/^	struct lws *wsi;$/;"	m	struct:websockets_client	typeref:struct:websockets_client::lws
wsi	include/libwebsockets/lws-threadpool.h	/^	struct lws *wsi;	\/**< user must set to wsi task is bound to *\/$/;"	m	struct:lws_threadpool_task_args	typeref:struct:lws_threadpool_task_args::lws
wsi	include/libwebsockets/lws-write.h	/^	struct lws *wsi;$/;"	m	struct:lws_write_passthru	typeref:struct:lws_write_passthru::lws
wsi	junk/protocol_lws_minimal.c	/^	struct lws *wsi;$/;"	m	struct:per_session_data__minimal	typeref:struct:per_session_data__minimal::lws	file:
~ClearStackOnExit	include/rapidjson/document.h	/^        ~ClearStackOnExit() { d_.ClearStack(); }$/;"	f	struct:GenericDocument::ClearStackOnExit
~ClearStackOnExit	include/rapidjson/reader.h	/^        ~ClearStackOnExit() { r_.ClearStack(); }$/;"	f	struct:GenericReader::ClearStackOnExit
~GenericArray	include/rapidjson/document.h	/^    ~GenericArray() {}$/;"	f	class:GenericArray
~GenericDocument	include/rapidjson/document.h	/^    ~GenericDocument() {$/;"	f	class:GenericDocument
~GenericObject	include/rapidjson/document.h	/^    ~GenericObject() {}$/;"	f	class:GenericObject
~GenericPointer	include/rapidjson/pointer.h	/^    ~GenericPointer() {$/;"	f	class:GenericPointer
~GenericRegex	include/rapidjson/internal/regex.h	/^    ~GenericRegex() {}$/;"	f	class:internal::GenericRegex
~GenericRegexSearch	include/rapidjson/internal/regex.h	/^    ~GenericRegexSearch() {$/;"	f	class:internal::GenericRegexSearch
~GenericSchemaDocument	include/rapidjson/schema.h	/^    ~GenericSchemaDocument() {$/;"	f	class:GenericSchemaDocument
~GenericSchemaValidator	include/rapidjson/schema.h	/^    ~GenericSchemaValidator() {$/;"	f	class:GenericSchemaValidator
~GenericValue	include/rapidjson/document.h	/^    ~GenericValue() {$/;"	f	class:GenericValue
~IGenericRemoteSchemaDocumentProvider	include/rapidjson/schema.h	/^    virtual ~IGenericRemoteSchemaDocumentProvider() {}$/;"	f	class:IGenericRemoteSchemaDocumentProvider
~ISchemaStateFactory	include/rapidjson/schema.h	/^    virtual ~ISchemaStateFactory() {}$/;"	f	class:internal::ISchemaStateFactory
~ISchemaValidator	include/rapidjson/schema.h	/^    virtual ~ISchemaValidator() {}$/;"	f	class:internal::ISchemaValidator
~IValidationErrorHandler	include/rapidjson/schema.h	/^    virtual ~IValidationErrorHandler() {}$/;"	f	class:internal::IValidationErrorHandler
~MemoryPoolAllocator	include/rapidjson/allocators.h	/^    ~MemoryPoolAllocator() {$/;"	f	class:MemoryPoolAllocator
~PatternProperty	include/rapidjson/schema.h	/^        ~PatternProperty() { $/;"	f	struct:internal::Schema::PatternProperty
~Property	include/rapidjson/schema.h	/^        ~Property() { AllocatorType::Free(dependencies); }$/;"	f	struct:internal::Schema::Property
~Schema	include/rapidjson/schema.h	/^    ~Schema() {$/;"	f	class:internal::Schema
~SchemaArray	include/rapidjson/schema.h	/^        ~SchemaArray() { AllocatorType::Free(schemas); }$/;"	f	struct:internal::Schema::SchemaArray
~SchemaEntry	include/rapidjson/schema.h	/^        ~SchemaEntry() {$/;"	f	struct:GenericSchemaDocument::SchemaEntry
~SchemaValidationContext	include/rapidjson/schema.h	/^    ~SchemaValidationContext() {$/;"	f	struct:internal::SchemaValidationContext
~Stack	include/rapidjson/internal/stack.h	/^    ~Stack() {$/;"	f	class:internal::Stack
~StreamLocalCopy	include/rapidjson/reader.h	/^    ~StreamLocalCopy() { original_ = s; }$/;"	f	class:internal::StreamLocalCopy
